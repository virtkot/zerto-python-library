{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "ZVM REST API",
    "description" : "The Zerto RESTful API enables you to manage Zerto programmatically. The REST APIs provide a way to automate many of the tasks required to manage DR, without having to use the Zerto User Interface.",
    "version" : "1.0"
  },
  "servers" : [ {
    "url" : "https://10.171.80.96/"
  } ],
  "security" : [ {
    "Bearer" : [ ]
  } ],
  "tags" : [ {
    "name" : "Alerts",
    "description" : "Manage ZVM Alerts"
  }, {
    "name" : "Datastores",
    "description" : "Get information about datastores available on the current site"
  }, {
    "name" : "Events",
    "description" : "Manage ZVM Events"
  }, {
    "name" : "File-level Restore",
    "description" : "View and recover specific files and folders from the protected site from a checkpoint"
  }, {
    "name" : "Licensing",
    "description" : "Manage the current ZVM license"
  }, {
    "name" : "Extended Journal Copy",
    "description" : "Manage Extended Journal Copy"
  }, {
    "name" : "Recovery & Resources Reports",
    "description" : "Get information about recovery operations and resources used by the virtual machines"
  }, {
    "name" : "Service Profiles",
    "description" : "Get information about service profiles defined in the Zerto Cloud Manager"
  }, {
    "name" : "Server Date-Time",
    "description" : "Get ZVM local date-time"
  }, {
    "name" : "Local Site",
    "description" : "Get information about the current ZVM site"
  }, {
    "name" : "Peer Sites",
    "description" : "Get a list of paired sites and pairs to a new site"
  }, {
    "name" : "Tasks",
    "description" : "Get information about tasks run on the site"
  }, {
    "name" : "Virtualization Sites",
    "description" : "Get information about the resources in the site where the API is run and all the sites paired with this site"
  }, {
    "name" : "Virtual Machines",
    "description" : "Get information about virtual machines protected by the current site"
  }, {
    "name" : "Volumes",
    "description" : "Get information about available volumes in current site"
  }, {
    "name" : "VPGs (Virtual Protection Groups)",
    "description" : "Manage VPGs and performs Recovery operations"
  }, {
    "name" : "VPG(Virtual Protection Group) Settings",
    "description" : "Manage VPG settings and create a new VPG"
  }, {
    "name" : "Export Import VPG(Virtual Protection Group) Settings",
    "description" : "Export and Import VPG settings"
  }, {
    "name" : "VRAs (Virtual Replication Appliances)",
    "description" : "Manage VRAs"
  }, {
    "name" : "ZORGS (Zerto Organizations)",
    "description" : "Get information about Zerto Organizations associated with this site"
  }, {
    "name" : "ZSSP (Zerto Self Service Portal) Sessions",
    "description" : "Manage ZSSP Sessions"
  }, {
    "name" : "Encryption Detection",
    "description" : "Analyze encrypted and unencrypted data to identify an encryption event"
  }, {
    "name" : "Recovery Scripts",
    "description" : "Manage recovery scripts on site"
  }, {
    "name" : "Recovery Scripts",
    "description" : "Manage recovery scripts on site"
  }, {
    "name" : "Sessions",
    "description" : "Manage Keycloak sessions"
  } ],
  "paths" : {
    "/v1/alerts" : {
      "get" : {
        "tags" : [ "Alerts" ],
        "summary" : "Get a list of latest Zerto alerts. You can filter the results with additional parameters. (Auth)",
        "operationId" : "getAlertAll",
        "parameters" : [ {
          "name" : "startDate",
          "in" : "query",
          "description" : "The filter interval start date-time. Related endpoint: `v1/serverDateTime` for date-time format details",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "The filter interval end date-time. Related endpoint: `v1/serverDateTime` for date-time format details",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "vpgIdentifier",
          "in" : "query",
          "description" : "The identifier of the VPG. Related endpoint: `v1/vpgs`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zorgIdentifier",
          "in" : "query",
          "description" : "The identifier of the ZORG. Related endpoint: `v1/zorgs`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "siteIdentifier",
          "in" : "query",
          "description" : "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "level",
          "in" : "query",
          "description" : "The alert level. Related endpoint: `/v1/alerts/levels`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "query",
          "description" : "The alert entity type. Related endpoint: `/v1/alerts/entity`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "helpIdentifier",
          "in" : "query",
          "description" : "The alert help identifier associated with the alert. Related endpoint: `/v1/alerts/helpidentifiers`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "isDismissed",
          "in" : "query",
          "description" : "True if alert was dismissed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AlertApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AlertApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AlertApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/alerts/{alertIdentifier}" : {
      "get" : {
        "tags" : [ "Alerts" ],
        "summary" : "Get information about the specific Zerto alert. (Auth)",
        "operationId" : "getAlert",
        "parameters" : [ {
          "name" : "alertIdentifier",
          "in" : "path",
          "description" : "Alert identifier. Related endpoint: `/v1/alerts`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AlertApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AlertApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AlertApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/alerts/{alertIdentifier}/dismiss" : {
      "post" : {
        "tags" : [ "Alerts" ],
        "summary" : "Dismiss a specific alert. (Auth)",
        "operationId" : "removeAlert",
        "parameters" : [ {
          "name" : "alertIdentifier",
          "in" : "path",
          "description" : "Alert identifier. Related endpoint: `v1/alerts`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v1/alerts/{alertIdentifier}/undismiss" : {
      "post" : {
        "tags" : [ "Alerts" ],
        "summary" : "Undismiss a specific alert. (Auth)",
        "operationId" : "resetAlert",
        "parameters" : [ {
          "name" : "alertIdentifier",
          "in" : "path",
          "description" : "Alert identifier. Related endpoint: `v1/alerts`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v1/alerts/levels" : {
      "get" : {
        "tags" : [ "Alerts" ],
        "summary" : "Get a list of all available alert levels. (Auth)",
        "operationId" : "getAlertLevelAll",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/alerts/entities" : {
      "get" : {
        "tags" : [ "Alerts" ],
        "summary" : "Get a list of all available alert entities. (Auth)",
        "operationId" : "getAlertEntityAll",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/alerts/helpidentifiers" : {
      "get" : {
        "tags" : [ "Alerts" ],
        "summary" : "Get a list of all available alert help identifiers. (Auth)",
        "operationId" : "getAlertHelpIdAll",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/datastores" : {
      "get" : {
        "tags" : [ "Datastores" ],
        "summary" : "Get a list of datastore info available on the current site (Auth)",
        "operationId" : "getDatastoreAll",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DatastoreApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DatastoreApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DatastoreApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/datastores/{datastoreIdentifier}" : {
      "get" : {
        "tags" : [ "Datastores" ],
        "summary" : "Get information about a specific datastore (Auth)",
        "operationId" : "getDatastore",
        "parameters" : [ {
          "name" : "datastoreIdentifier",
          "in" : "path",
          "description" : "Datastore identifier. Related endpoint: `v1/datastores`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DatastoreApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DatastoreApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DatastoreApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/encryptionDetection/suspected/volumes" : {
      "get" : {
        "tags" : [ "Encryption Detection" ],
        "summary" : "Get a list of Volumes that are suspected to have an encryption event (Auth)",
        "operationId" : "suspectedVolumes",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SuspectedVolumeApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SuspectedVolumeApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SuspectedVolumeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/encryptionDetection/suspected/vms" : {
      "get" : {
        "tags" : [ "Encryption Detection" ],
        "summary" : "Get a list of VMs that are suspected to have an encryption event (Auth)",
        "operationId" : "suspectedVms",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SuspectedVmApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SuspectedVmApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SuspectedVmApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/encryptionDetection/suspected/vpgs" : {
      "get" : {
        "tags" : [ "Encryption Detection" ],
        "summary" : "Get a list of VPGs that are suspected to have an encryption event (Auth)",
        "operationId" : "suspectedVpgs",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SuspectedVpgApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SuspectedVpgApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SuspectedVpgApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/encryptionDetection/metrics/volumes" : {
      "get" : {
        "tags" : [ "Encryption Detection" ],
        "summary" : "Get a list of volumes with encryption data (Auth)",
        "operationId" : "metricsVolumes",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MetricsVolumeApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MetricsVolumeApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MetricsVolumeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/encryptionDetection/metrics/vms" : {
      "get" : {
        "tags" : [ "Encryption Detection" ],
        "summary" : "Get a list of VMs with encryption data (Auth)",
        "operationId" : "metricsVms",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MetricsVmApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MetricsVmApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MetricsVmApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/encryptionDetection/metrics/vpgs" : {
      "get" : {
        "tags" : [ "Encryption Detection" ],
        "summary" : "Get a list of VPGs with encryption data (Auth)",
        "operationId" : "metricsVpgs",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MetricsVpgApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MetricsVpgApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MetricsVpgApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/encryptionDetection/dismissEvent" : {
      "post" : {
        "tags" : [ "Encryption Detection" ],
        "summary" : "Dismiss encryption event (resolve alert, clear tag checkpoint) (Auth)",
        "operationId" : "dismissEvent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgIdentifiersApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgIdentifiersApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgIdentifiersApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v1/encryptionDetection/state" : {
      "get" : {
        "tags" : [ "Encryption Detection" ],
        "summary" : "Get the state of the encryption detection (enabled/disabled) (Auth)",
        "operationId" : "encryptionDetectionEnabled",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SettingsApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SettingsApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SettingsApi"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Encryption Detection" ],
        "summary" : "Set the state of the encryption detection (enabled/disabled) (Auth)",
        "operationId" : "encryptionDetectionEnabled",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SettingsApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SettingsApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SettingsApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v1/events" : {
      "get" : {
        "tags" : [ "Events" ],
        "summary" : "Get a list of latest Zerto events. You can filter the results with additional parameters. (Auth)",
        "operationId" : "getEventAll",
        "parameters" : [ {
          "name" : "startDate",
          "in" : "query",
          "description" : "The filter interval start date-time. Related endpoint: `v1/serverDateTime` for date-time format details",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "The filter interval end date-time. Related endpoint: `v1/serverDateTime` for date-time format details",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "vpg",
          "in" : "query",
          "description" : "[Obsolete] The identifier of the VPG. Related endpoint: `v1/vpgs`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vpgIdentifier",
          "in" : "query",
          "description" : "The identifier of the VPG. Related endpoint: `v1/vpgs`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "siteName",
          "in" : "query",
          "description" : "The name of the site",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "siteIdentifier",
          "in" : "query",
          "description" : "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zorgIdentifier",
          "in" : "query",
          "description" : "The identifier of the ZORG. Related endpoint: `v1/zorgs`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eventType",
          "in" : "query",
          "description" : "The event type. Related endpoint: `/v1/events/types`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityType",
          "in" : "query",
          "description" : "The entity type to return. Related endpoint: `/v1/events/entities`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "category",
          "in" : "query",
          "description" : "The event category to return. Related endpoint: `/v1/events/categories`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eventCategory",
          "in" : "query",
          "description" : "[Obsolete] The event category to return. Related endpoint: `/v1/events/categories`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userName",
          "in" : "query",
          "description" : "The username for which the event occurred. Tasks run by ZVM have the username `System`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "alertIdentifier",
          "in" : "query",
          "description" : "Alert identifier. Related endpoint: `/v1/alerts`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EventApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EventApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EventApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/events/{eventIdentifier}" : {
      "get" : {
        "tags" : [ "Events" ],
        "summary" : "Get data for a single event on the site processing the API. (Auth)",
        "operationId" : "getEvent",
        "parameters" : [ {
          "name" : "eventIdentifier",
          "in" : "path",
          "description" : "Event identifier. Related endpoint: `/v1/events`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/events/types" : {
      "get" : {
        "tags" : [ "Events" ],
        "summary" : "Get a list of all available event types (Auth)",
        "operationId" : "getEventTypeAll",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/events/entities" : {
      "get" : {
        "tags" : [ "Events" ],
        "summary" : "Get a list of all available event entities. (Auth)",
        "operationId" : "getEventEntityAll",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/events/categories" : {
      "get" : {
        "tags" : [ "Events" ],
        "summary" : "Get a list of all available event categories. (Auth)",
        "operationId" : "getEventCategoryAll",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings/exportedSettings/{timeStamp}" : {
      "post" : {
        "tags" : [ "Export Import VPG(Virtual Protection Group) Settings" ],
        "summary" : "Read exported settings from a file of given timestamp. (Auth)",
        "operationId" : "getExportedSettings",
        "parameters" : [ {
          "name" : "timeStamp",
          "in" : "path",
          "description" : "The timestamp of the exported settings file",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsNamesApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsNamesApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsNamesApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsDownloadExportApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsDownloadExportApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsDownloadExportApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings/exportSettings" : {
      "post" : {
        "tags" : [ "Export Import VPG(Virtual Protection Group) Settings" ],
        "summary" : "Export all current VPGs settings. (Auth)",
        "operationId" : "exportSettings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsNamesApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsNamesApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsNamesApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsExportApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsExportApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsExportApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings/exportedSettings/{timeStamp}/vpgsinfo" : {
      "get" : {
        "tags" : [ "Export Import VPG(Virtual Protection Group) Settings" ],
        "summary" : "Get list of VPGs from exported settings file. (Auth)",
        "operationId" : "getExportedSettingsVpgs",
        "parameters" : [ {
          "name" : "timeStamp",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VpgSettingsExportVpgInfoApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VpgSettingsExportVpgInfoApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VpgSettingsExportVpgInfoApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings/exportedSettings" : {
      "get" : {
        "tags" : [ "Export Import VPG(Virtual Protection Group) Settings" ],
        "summary" : "Get all available exported settings files. (Auth)",
        "operationId" : "getExportedSettingsInfo",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VpgSettingsExportedDataInfoApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VpgSettingsExportedDataInfoApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VpgSettingsExportedDataInfoApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings/import" : {
      "post" : {
        "tags" : [ "Export Import VPG(Virtual Protection Group) Settings" ],
        "summary" : "Import VPGs. (Auth)",
        "operationId" : "importVpg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImportVpgSettingsApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImportVpgSettingsApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImportVpgSettingsApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsImportVpgsResultApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsImportVpgsResultApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsImportVpgsResultApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ltr/catalog/vms" : {
      "get" : {
        "tags" : [ "Extended Journal Copy" ],
        "summary" : "Get a list of available VMs in a Retention set (Auth)",
        "operationId" : "getLtrCatalogVmAll",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecoverableVmsApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecoverableVmsApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecoverableVmsApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ltr/catalog/fullretentionsets" : {
      "get" : {
        "tags" : [ "Extended Journal Copy" ],
        "summary" : "Get a list of full Retention sets (Auth)",
        "operationId" : "GetLtrCatalogFullRetentionSets",
        "parameters" : [ {
          "name" : "repositoryIdentifier",
          "in" : "query",
          "description" : "The identifier of the repository where the Retention Set is stored. Relatd endpoint: `/v1/virtualizationsites/{siteIdentifier}/repositories`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vpgIdentifier",
          "in" : "query",
          "description" : "The identifier of the VPG. Related endpoint: `v1/vpgs`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zorgIdentifier",
          "in" : "query",
          "description" : "The identifier of the ZORG. Related endpoint: `v1/zorgs`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RetentionSetsInfoApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RetentionSetsInfoApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RetentionSetsInfoApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ltr/catalog/fullretentionsets/{retentionSetIdentifier}/incrementals" : {
      "get" : {
        "tags" : [ "Extended Journal Copy" ],
        "summary" : "Get a list of incremental Retention sets (Auth)",
        "operationId" : "GetLtrCatalogIncrementalsOfRetentionSet",
        "parameters" : [ {
          "name" : "retentionSetIdentifier",
          "in" : "path",
          "description" : "The unique identifier of the Retention Set. Related endpoint: `v1/ltr/catalog/fullretentionsets`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RetentionSetsInfoApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RetentionSetsInfoApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RetentionSetsInfoApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ltr/catalog/deleteretentionsets" : {
      "post" : {
        "tags" : [ "Extended Journal Copy" ],
        "summary" : "Delete Retention sets (Auth)",
        "operationId" : "DeleteLtrCatalogRetentionSets",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeleteRetentionSetsApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeleteRetentionSetsApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeleteRetentionSetsApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v1/ltr/catalog/vms/{vmIdentifier}/retentionsets" : {
      "get" : {
        "tags" : [ "Extended Journal Copy" ],
        "summary" : "Get a list of the available Retention sets for a VM in all Repositories in the site (Auth)",
        "operationId" : "GetLtrCatalogVmRetentionSets",
        "parameters" : [ {
          "name" : "vmIdentifier",
          "in" : "path",
          "description" : "The idenfier of the VM. Related endpoint: `v1/vms`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RetentionSetsApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RetentionSetsApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RetentionSetsApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ltr/catalog/vms/{vmIdentifier}/retentionsets/{retentionSetIdentifier}/settings" : {
      "get" : {
        "tags" : [ "Extended Journal Copy" ],
        "summary" : "Get the original settings for a VM in a Retention set (Auth)",
        "operationId" : "GetLtrCatalogVmOriginalSettingsForRetentionSet",
        "parameters" : [ {
          "name" : "vmIdentifier",
          "in" : "path",
          "description" : "The idenfier of the VM. Related endpoint: `v1/vms`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "retentionSetIdentifier",
          "in" : "path",
          "description" : "The unique identifier of the Retention Set. Related endpoint: `v1/ltr/catalog/fullretentionsets`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RetentionSetVmSettingsApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RetentionSetVmSettingsApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RetentionSetVmSettingsApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ltr/restore/vm" : {
      "post" : {
        "tags" : [ "Extended Journal Copy" ],
        "summary" : "Restore the VM from the Repository at the recovery site. Returns a token. (Auth)",
        "operationId" : "StartLtrRestoreVm",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RestoreVmApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/RestoreVmApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/RestoreVmApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ltr/health/vpgs" : {
      "get" : {
        "tags" : [ "Extended Journal Copy" ],
        "summary" : "Get a list of Extended Journal Copy VPGs (Auth)",
        "operationId" : "getLtrVpgHealthAll",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgsLtrHealthApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgsLtrHealthApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgsLtrHealthApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ltr/vpgs/{vpgIdentifier}/retentionstart" : {
      "post" : {
        "tags" : [ "Extended Journal Copy" ],
        "summary" : "Start the Manual Retention process (Auth)",
        "operationId" : "RetentionStart",
        "parameters" : [ {
          "name" : "vpgIdentifier",
          "in" : "path",
          "description" : "The identifier of the VPG. Related endpoint: `v1/vpgs`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RetentionStartInfoApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/RetentionStartInfoApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/RetentionStartInfoApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ltr/vpgs/{vpgIdentifier}/retentionabort" : {
      "post" : {
        "tags" : [ "Extended Journal Copy" ],
        "summary" : "End the Manual Retention process (Auth)",
        "operationId" : "RetentionAbort",
        "parameters" : [ {
          "name" : "vpgIdentifier",
          "in" : "path",
          "description" : "The identifier of the VPG. Related endpoint: `v1/vpgs`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v1/ltr/repositories" : {
      "get" : {
        "tags" : [ "Extended Journal Copy" ],
        "summary" : "Get All Repositories (Auth)",
        "operationId" : "getAllRepositories",
        "parameters" : [ {
          "name" : "connectionType",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "repositoryName",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Extended Journal Copy" ],
        "summary" : "Create new repository (Auth)",
        "operationId" : "newRepository",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RepositoriesSettingsApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/RepositoriesSettingsApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/RepositoriesSettingsApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v1/ltr/repositories/{repositoryIdentifier}" : {
      "put" : {
        "tags" : [ "Extended Journal Copy" ],
        "summary" : "Edit existing repository (Auth)",
        "operationId" : "editRepository",
        "parameters" : [ {
          "name" : "repositoryIdentifier",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RepositoriesSettingsApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/RepositoriesSettingsApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/RepositoriesSettingsApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      },
      "delete" : {
        "tags" : [ "Extended Journal Copy" ],
        "summary" : "Delete existing repository (Auth)",
        "operationId" : "removeRepository",
        "parameters" : [ {
          "name" : "repositoryIdentifier",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v1/ltr/repositories/{repositoryId}" : {
      "get" : {
        "tags" : [ "Extended Journal Copy" ],
        "summary" : "Get Repository By Id (Auth)",
        "operationId" : "getRepositoryById",
        "parameters" : [ {
          "name" : "repositoryId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/flrs" : {
      "get" : {
        "tags" : [ "File-level Restore" ],
        "summary" : "Get all mounted volumes. Results can be filtered by a VM identifier. (Auth)",
        "operationId" : "getFlrAll",
        "parameters" : [ {
          "name" : "vmIdentifier",
          "in" : "query",
          "description" : "The idenfier of the VM. Related endpoint: `v1/vms`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/FlrSessionInformationApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/FlrSessionInformationApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/FlrSessionInformationApi"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "File-level Restore" ],
        "summary" : "Create a new Mount Session. Mount a disk with specified parameters. Get the FLR session identifier. (Auth)",
        "operationId" : "mountFlr",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FlrMountDataApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/FlrMountDataApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/FlrMountDataApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/flrs/{flrSessionIdentifier}" : {
      "get" : {
        "tags" : [ "File-level Restore" ],
        "summary" : "Get information about a single mounted disk. (Auth)",
        "operationId" : "getFlr",
        "parameters" : [ {
          "name" : "flrSessionIdentifier",
          "in" : "path",
          "description" : "The File-level Restore session identifier. Related endpoint: `v1/flrs`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/FlrSessionInformationApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/FlrSessionInformationApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/FlrSessionInformationApi"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "File-level Restore" ],
        "summary" : "Unmount a previously mounted disk. (Auth)",
        "operationId" : "dismountFlr",
        "parameters" : [ {
          "name" : "flrSessionIdentifier",
          "in" : "path",
          "description" : "The File-level Restore session identifier. Related endpoint: `v1/flrs`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/flrs/{flrSessionIdentifier}/browse" : {
      "post" : {
        "tags" : [ "File-level Restore" ],
        "summary" : "Browse a list of files and folders in a specific path in the mounted disk. (Auth)",
        "operationId" : "getFlrPathInfo",
        "parameters" : [ {
          "name" : "flrSessionIdentifier",
          "in" : "path",
          "description" : "The File-level Restore session identifier. Related endpoint: `v1/flrs`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BrowseDataApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/BrowseDataApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/BrowseDataApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PathInformationApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PathInformationApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PathInformationApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/flrs/{flrSessionIdentifier}/download" : {
      "post" : {
        "tags" : [ "File-level Restore" ],
        "summary" : "Get URL link to download all the files from the specified paths. (Auth)",
        "operationId" : "getFlrDownload",
        "parameters" : [ {
          "name" : "flrSessionIdentifier",
          "in" : "path",
          "description" : "The File-level Restore session identifier. Related endpoint: `v1/flrs`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FlrDownloadDataApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/FlrDownloadDataApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/FlrDownloadDataApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/license" : {
      "get" : {
        "tags" : [ "Licensing" ],
        "summary" : "Get license details of the ZVM (Auth)",
        "operationId" : "getLicense",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LicenseApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LicenseApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LicenseApi"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Licensing" ],
        "summary" : "Add a new license or update an existing one. (Auth)",
        "operationId" : "setLicense",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LicenseKeyApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/LicenseKeyApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/LicenseKeyApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      },
      "delete" : {
        "tags" : [ "Licensing" ],
        "summary" : "Delete the license from the ZVM (Auth)",
        "operationId" : "removeLicense",
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v1/localsite" : {
      "get" : {
        "tags" : [ "Local Site" ],
        "summary" : "Get information about the local site (Auth)",
        "operationId" : "getLocalSiteAll",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocalSiteApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocalSiteApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocalSiteApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/localsite/pairingstatuses" : {
      "get" : {
        "tags" : [ "Local Site" ],
        "summary" : "Get the list of acceptable values for site pairing status (Auth)",
        "operationId" : "getLocalSitePairingStatusAll",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/localsite/billing/sendUsage" : {
      "post" : {
        "tags" : [ "Local Site" ],
        "summary" : "Send billing data to the billing server (Auth)",
        "operationId" : "sendLocalSiteBillingUsageData",
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v1/localsite/settings/loginBanner" : {
      "get" : {
        "tags" : [ "Local Site" ],
        "summary" : "Get the login banner settings of the current site",
        "operationId" : "getLocalSiteLoginBanner",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LoginBannerSettingsApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LoginBannerSettingsApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LoginBannerSettingsApi"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Local Site" ],
        "summary" : "Set the login banner settings of the current site (Auth)",
        "operationId" : "editLocalSiteLoginBanner",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LoginBannerSettingsApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/LoginBannerSettingsApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/LoginBannerSettingsApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v1/peersites" : {
      "get" : {
        "tags" : [ "Peer Sites" ],
        "summary" : "Get a list of all peer sites (Auth)",
        "operationId" : "getPeerAll",
        "parameters" : [ {
          "name" : "peerName",
          "in" : "query",
          "description" : "The name of a peer site. The name is case-sensitive",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pairingStatus",
          "in" : "query",
          "description" : "The pairing status. Related endpoint: `/v1/peersites/pairingstatuses`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "location",
          "in" : "query",
          "description" : "The site location, as specified in the site information",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hostName",
          "in" : "query",
          "description" : "The IP address of a ZVM, paired with this site",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "port",
          "in" : "query",
          "description" : "The port used to access peer sites. The default port is 9081",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PeerSiteApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PeerSiteApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PeerSiteApi"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Peer Sites" ],
        "summary" : "Add a peer site (start pairing). (Auth)",
        "operationId" : "startPair",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PairDataApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/PairDataApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/PairDataApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/peersites/{siteIdentifier}" : {
      "get" : {
        "tags" : [ "Peer Sites" ],
        "summary" : "Get information about the specified peer site (Auth)",
        "operationId" : "getPeer",
        "parameters" : [ {
          "name" : "siteIdentifier",
          "in" : "path",
          "description" : "The identifier of the peer site. Related endpoints: `v1/peersites`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PeerSiteApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PeerSiteApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PeerSiteApi"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Peer Sites" ],
        "summary" : "Unpair a peer site (Auth)",
        "operationId" : "startUnpair",
        "parameters" : [ {
          "name" : "siteIdentifier",
          "in" : "path",
          "description" : "The identifier of the peer site. Related endpoints: `v1/peersites`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UnPairDataApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UnPairDataApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UnPairDataApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/peersites/pairingstatuses" : {
      "get" : {
        "tags" : [ "Peer Sites" ],
        "summary" : "Get the list of acceptable values for site pairing status (Auth)",
        "operationId" : "getPeerStatusAll",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/peersites/generatetoken" : {
      "post" : {
        "tags" : [ "Peer Sites" ],
        "summary" : "Generate a token for pairing (Auth)",
        "operationId" : "getPairingToken",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PairingTokenResult"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PairingTokenResult"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PairingTokenResult"
                }
              }
            }
          }
        }
      }
    },
    "/v1/reports/recovery" : {
      "get" : {
        "tags" : [ "Recovery & Resources Reports" ],
        "summary" : "Generate a recovery report and view information about recovery operations (Auth)",
        "operationId" : "getRecoveryReportAll",
        "parameters" : [ {
          "name" : "startTime",
          "in" : "query",
          "description" : "The filterining interval start date-time. Related endpoint: `v1/serverDateTime` for date time format details",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "The filterining interval end date-time. Related endpoint: `v1/serverDateTime` for date time format details",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "description" : "The page number to retrieve",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The number of reports to display in a single page. The maximum number of reports per page is 1000",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "vpgName",
          "in" : "query",
          "description" : "The name of the VPG. You can specify more than one VPG, separated by commas. Related endpoint: `v1/vpgs`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "recoveryType",
          "in" : "query",
          "description" : "The type of recovery operation. Possible values are: `Failover`, `FailoverTest`, `Move`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "Whether the recovery operation has completed. Possible values are: `Success`, `Fail`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RecoveryReportApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RecoveryReportApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RecoveryReportApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/reports/recovery/{recoveryOperationIdentifier}" : {
      "get" : {
        "tags" : [ "Recovery & Resources Reports" ],
        "summary" : "Get a specific recovery report. (Auth)",
        "operationId" : "getRecoveryReport",
        "parameters" : [ {
          "name" : "recoveryOperationIdentifier",
          "in" : "path",
          "description" : "Recovery report identifier. Related endpoint: `v1/reports/recovery`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecoveryReportApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecoveryReportApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecoveryReportApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/reports/resources" : {
      "get" : {
        "tags" : [ "Recovery & Resources Reports" ],
        "summary" : "Get VM resource reports. (Auth)",
        "operationId" : "getResourceReportAll",
        "parameters" : [ {
          "name" : "startTime",
          "in" : "query",
          "description" : "The filterining interval start date-time. Related endpoint: `v1/serverDateTime` for date time format details",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "The filterining interval end date-time. Related endpoint: `v1/serverDateTime` for date time format details",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "description" : "The page number to retrieve",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The number of reports to display in a single page. The maximum number of reports per page is 1000",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "zorgName",
          "in" : "query",
          "description" : "The name of the ZORG in the Zerto Cloud Manager",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vpgName",
          "in" : "query",
          "description" : "The name of the VPG",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vmName",
          "in" : "query",
          "description" : "The name of the virtual machine",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectedSiteName",
          "in" : "query",
          "description" : "The name of the protected site",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectedClusterName",
          "in" : "query",
          "description" : "The name of the cluster containing the host where the virtual machine in the protected site is",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectedHostName",
          "in" : "query",
          "description" : "The address or DNS name of the host where the virtual machine in the protected site is",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectedOrgVdc",
          "in" : "query",
          "description" : "The name of the VDC organization in the protected site",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectedVcdOrg",
          "in" : "query",
          "description" : "The name of the VCD organization in the protected site",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "recoverySiteName",
          "in" : "query",
          "description" : "The name of the recovery site",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "recoveryClusterName",
          "in" : "query",
          "description" : "The name of the cluster containing the host where the virtual machine in the recovery site is",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "recoveryHostName",
          "in" : "query",
          "description" : "The address or DNS name of the host where the virtual machine in the recovery site is",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "recoveryOrgVdc",
          "in" : "query",
          "description" : "The name of the VDC organization in the recovery site",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "recoveryVcdOrg",
          "in" : "query",
          "description" : "The name of the recovery VCD organization",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VmResourcesReportApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VmResourcesReportApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VmResourcesReportApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/recoveryScripts/output/files" : {
      "get" : {
        "tags" : [ "Recovery Scripts" ],
        "summary" : "Download a file from output directory (Auth)",
        "operationId" : "downloadFileFromOutputDirectory",
        "parameters" : [ {
          "name" : "path",
          "in" : "query",
          "description" : "folder1/folder2/file.ps1",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Stream"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Stream"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Stream"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Recovery Scripts" ],
        "summary" : "Delete a file in output directory (Auth)",
        "operationId" : "deleteOutputFile",
        "parameters" : [ {
          "name" : "path",
          "in" : "query",
          "description" : "folder1/folder2/file.ps1",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v1/recoveryScripts/output/folders" : {
      "post" : {
        "tags" : [ "Recovery Scripts" ],
        "summary" : "Create a folder in output directory (Auth)",
        "operationId" : "createOutputFolder",
        "requestBody" : {
          "description" : "folder1/folder2",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateFolderApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateFolderApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateFolderApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      },
      "delete" : {
        "tags" : [ "Recovery Scripts" ],
        "summary" : "Delete a folder in output directory (Auth)",
        "operationId" : "deleteOutputFolder",
        "parameters" : [ {
          "name" : "path",
          "in" : "query",
          "description" : "folder1/folder2",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deleteIfNotEmpty",
          "in" : "query",
          "description" : "Delete the folder even if it's not empty",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v1/recoveryScripts/output/items" : {
      "get" : {
        "tags" : [ "Recovery Scripts" ],
        "summary" : "Get a list of items (Auth)",
        "operationId" : "listOutputItems",
        "parameters" : [ {
          "name" : "path",
          "in" : "query",
          "description" : "folder1/folder2",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "Search item - *.ps1",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListItemsResultApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListItemsResultApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListItemsResultApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/recoveryScripts/repository/files" : {
      "get" : {
        "tags" : [ "Recovery Scripts" ],
        "summary" : "Download a file from scripts directory (Auth)",
        "operationId" : "downloadFileFromScriptsDirectory",
        "parameters" : [ {
          "name" : "path",
          "in" : "query",
          "description" : "folder1/folder2/file.ps1",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Stream"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Stream"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Stream"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Recovery Scripts" ],
        "summary" : "Upload a file to scripts directory (Auth)",
        "operationId" : "uploadFileToScriptsDirectory",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/body"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      },
      "delete" : {
        "tags" : [ "Recovery Scripts" ],
        "summary" : "Delete a file in scripts directory (Auth)",
        "operationId" : "deleteScriptsFile",
        "parameters" : [ {
          "name" : "path",
          "in" : "query",
          "description" : "folder1/folder2/file.ps1",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v1/recoveryScripts/repository/folders" : {
      "post" : {
        "tags" : [ "Recovery Scripts" ],
        "summary" : "Create a folder in scripts directory (Auth)",
        "operationId" : "createScriptsFolder",
        "requestBody" : {
          "description" : "folder1/folder2",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateFolderApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateFolderApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateFolderApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      },
      "delete" : {
        "tags" : [ "Recovery Scripts" ],
        "summary" : "Delete a folder in scripts directory (Auth)",
        "operationId" : "deleteScriptsFolder",
        "parameters" : [ {
          "name" : "path",
          "in" : "query",
          "description" : "folder1/folder2",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deleteIfNotEmpty",
          "in" : "query",
          "description" : "Delete the folder even if it's not empty",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v1/recoveryScripts/repository/items" : {
      "get" : {
        "tags" : [ "Recovery Scripts" ],
        "summary" : "Get a list of items (Auth)",
        "operationId" : "listScriptsItems",
        "parameters" : [ {
          "name" : "path",
          "in" : "query",
          "description" : "folder1/folder2",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "Search item - *.ps1",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListItemsResultApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListItemsResultApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListItemsResultApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/serverDateTime/serverDateTimeLocal" : {
      "get" : {
        "tags" : [ "Server Date-Time" ],
        "summary" : "Get current system date-time in a Local time zone (Auth)",
        "operationId" : "SystemDateTimeService_GetDateTimeLocal",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            }
          }
        }
      }
    },
    "/v1/serverDateTime/serverDateTimeUtc" : {
      "get" : {
        "tags" : [ "Server Date-Time" ],
        "summary" : "Get current system date-time in UTC format (Auth)",
        "operationId" : "SystemDateTimeService_GetDateTimeUtc",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            }
          }
        }
      }
    },
    "/v1/serverDateTime/dateTimeArgument" : {
      "get" : {
        "tags" : [ "Server Date-Time" ],
        "summary" : "Check system date time casting from parameters. Specify the date and check the return value to prove your expectations. (Auth)",
        "operationId" : "SystemDateTimeService_Post",
        "parameters" : [ {
          "name" : "dateTime",
          "in" : "query",
          "description" : "There are three main ways to specify the date time:\r\nIn milliseconds | In UTC format | In any other general format (Local time)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "12321 `OR` 2021-06-07T13:16:00.000Z `OR` 6/7/2021"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            }
          }
        }
      }
    },
    "/v1/serviceprofiles" : {
      "get" : {
        "tags" : [ "Service Profiles" ],
        "summary" : "Get the list of all service profiles for the site processing the API. (Auth)",
        "operationId" : "getServiceProfileAll",
        "parameters" : [ {
          "name" : "siteIdentifier",
          "in" : "query",
          "description" : "The identifier of the site for which service profiles should be returned. Related endpoints: `v1/localsite`, `v1/peersites` <br>NOTE: If used with ZSSP - this parameter is mandatorily required.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ServiceProfileApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ServiceProfileApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ServiceProfileApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/serviceprofiles/{serviceProfileIdentifier}" : {
      "get" : {
        "tags" : [ "Service Profiles" ],
        "summary" : "Get details of a specified service profile at the site processing the API. (Auth)",
        "operationId" : "getServiceProfile",
        "parameters" : [ {
          "name" : "serviceProfileIdentifier",
          "in" : "path",
          "description" : "The service profile ID for which information should be returned. Related endpoint: `v1/serviceprofiles`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceProfileApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceProfileApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceProfileApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/statistics/vms" : {
      "get" : {
        "tags" : [ "Statistics" ],
        "summary" : "Get statistics for all protected VMs (Auth)",
        "operationId" : "getVmStatisticAll",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VmStatisticsApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VmStatisticsApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VmStatisticsApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/tasks" : {
      "get" : {
        "tags" : [ "Tasks" ],
        "summary" : "Get information about tasks run on this site. (Auth)",
        "operationId" : "getTaskAll",
        "parameters" : [ {
          "name" : "startedBeforeDate",
          "in" : "query",
          "description" : "The date-time before the tasks started. Related endpoint: `v1/serverDateTime` for date time format details",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "startedAfterDate",
          "in" : "query",
          "description" : "The date-time after the tasks started. Related endpoint: `v1/serverDateTime` for date time format details",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "completedBeforeDate",
          "in" : "query",
          "description" : "The date-time before the tasks ended. Related endpoint: `v1/serverDateTime` for date time format details",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "completedAfterDate",
          "in" : "query",
          "description" : "The date-time after the tasks ended. Related endpoint: `v1/serverDateTime` for date time format details",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "The task type. Related endpoint `/v1/tasks/types`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "The status of the task. Possible values are: `1 or InProgress` | `3 or Paused` | `4 or Failed` | `6 or Completed` | `7 or Cancelling`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TaskApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TaskApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TaskApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/tasks/{taskIdentifier}" : {
      "get" : {
        "tags" : [ "Tasks" ],
        "summary" : "Get details of a specific task running on the site processing the API. (Auth)",
        "operationId" : "getTask",
        "parameters" : [ {
          "name" : "taskIdentifier",
          "in" : "path",
          "description" : "The identifier of the task. Related endpoints: `v1/tasks`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/tasks/types" : {
      "get" : {
        "tags" : [ "Tasks" ],
        "summary" : "Get the list of acceptable values for task types. (Auth)",
        "operationId" : "getTaskTypeAll",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vcd/vmsWithoutMorefId" : {
      "get" : {
        "tags" : [ "Virtual Cloud Director" ],
        "summary" : "Get VCD VMs without MorefId (Auth)",
        "operationId" : "GetVmsWithoutMorefId",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VCDVmMachine"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VCDVmMachine"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VCDVmMachine"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vcd/validOrgVdcs" : {
      "get" : {
        "tags" : [ "Virtual Cloud Director" ],
        "summary" : "Get Org VDCs with valid configuration (Auth)",
        "operationId" : "GetValidOrgVdcs",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VCDVirtualDatacenter"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VCDVirtualDatacenter"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VCDVirtualDatacenter"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vms" : {
      "get" : {
        "tags" : [ "Virtual Machines" ],
        "summary" : "Get information about protected virtual machines. You can filter the results with additional parameters. (Auth)",
        "operationId" : "getVmAll",
        "parameters" : [ {
          "name" : "vpgName",
          "in" : "query",
          "description" : "The name of the VPG",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vmName",
          "in" : "query",
          "description" : "The name of the virtual machine",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "The status of the VPG",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subStatus",
          "in" : "query",
          "description" : "The substatus of the VPG, for example the VPG is in a bitmap sync",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectedSiteType",
          "in" : "query",
          "description" : "The protected site type",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "recoverySiteType",
          "in" : "query",
          "description" : "The recovery site environment",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceType",
          "in" : "query",
          "description" : "Deprecated. See protectedSiteIdentifier",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "targetType",
          "in" : "query",
          "description" : "Deprecated. See recoverySiteIdentifier",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectedSiteIdentifier",
          "in" : "query",
          "description" : "The identifier of the protected site where the VPG virtual machines are",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "recoverySiteIdentifier",
          "in" : "query",
          "description" : "The identifier of the recovery site where the VPG virtual machines are",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSite",
          "in" : "query",
          "description" : "Deprecated. See protectedSiteIdentifier",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "targetSite",
          "in" : "query",
          "description" : "Deprecated. See recoverySiteIdentifier",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationName",
          "in" : "query",
          "description" : "The ZORG for this VPG",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "priority",
          "in" : "query",
          "description" : "The priority specified for the VPG",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vmIdentifier",
          "in" : "query",
          "description" : "The identifier of the virtual machine. Format: `serverid.moref`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeBackupedVms",
          "in" : "query",
          "description" : "True for including backup virtual machines. False for protected virtual machines only",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "includeMountedVms",
          "in" : "query",
          "description" : "Boolean to determine whether to include mounted vms or only unmounted VMs",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VmApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VmApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VmApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vms/{vmIdentifier}" : {
      "get" : {
        "tags" : [ "Virtual Machines" ],
        "summary" : "Get information about a single protected VM. VpgId may be required if VM is protected by more than one VPG. (Auth)",
        "operationId" : "getVm",
        "parameters" : [ {
          "name" : "vmIdentifier",
          "in" : "path",
          "description" : "The identifier of the VM. Related endpoint: `v1/vms`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vpgIdentifier",
          "in" : "query",
          "description" : "The identifier of the VPG. Related endpoint: `v1/vpgs`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeBackupedVms",
          "in" : "query",
          "description" : "Boolean to determine whether to include backup vms or only currently protected VMs",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "includeMountedVms",
          "in" : "query",
          "description" : "Boolean to determine whether to include mounted vms or only unmounted VMs",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VmApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VmApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VmApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vms/{vmIdentifier}/Restore" : {
      "post" : {
        "tags" : [ "Virtual Machines" ],
        "summary" : "Starts Journal Vm restore operation. Returns command task identifier of the operation. (Auth)",
        "operationId" : "restoreVm",
        "parameters" : [ {
          "name" : "vmIdentifier",
          "in" : "path",
          "description" : "The identifier of the VM. Related endpoint: `v1/vms`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The restore before commit data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/JournalVMRestoreDataApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/JournalVMRestoreDataApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/JournalVMRestoreDataApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vms/{vmIdentifier}/RestoreCommit" : {
      "post" : {
        "tags" : [ "Virtual Machines" ],
        "summary" : "Commits a restored journal VM. (Auth)",
        "operationId" : "commitVm",
        "parameters" : [ {
          "name" : "vmIdentifier",
          "in" : "path",
          "description" : "The identifier of the VM. Related endpoint: `v1/vms`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The identifier of the VPG. Related endpoint: `v1/vpgs`",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/xml" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/xml" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vms/{vmIdentifier}/RestoreRollback" : {
      "post" : {
        "tags" : [ "Virtual Machines" ],
        "summary" : "Rolls back a restored journal VM. (Auth)",
        "operationId" : "rollbackVm",
        "parameters" : [ {
          "name" : "vmIdentifier",
          "in" : "path",
          "description" : "The identifier of the VM. Related endpoint: `v1/vms`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The identifier of the VPG. Related endpoint: `v1/vpgs`",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/xml" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/xml" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vms/{vmIdentifier}/pointsInTime" : {
      "get" : {
        "tags" : [ "Virtual Machines" ],
        "summary" : "Get all the relevant points in time for the VM. VpgId may be required if the VM is protected in more than one VPG. (Auth)",
        "operationId" : "pointsInTime",
        "parameters" : [ {
          "name" : "vmIdentifier",
          "in" : "path",
          "description" : "The identifier of the VM. Related endpoint: `v1/vms`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vpgIdentifier",
          "in" : "query",
          "description" : "The identifier of the VPG. Related endpoint: `v1/vpgs`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "The filter interval start date-time. Related endpoint: `v1/serverDateTime` for date-time format details",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "The filter interval end date-time. Related endpoint: `v1/serverDateTime` for date-time format details",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PointInTimeApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PointInTimeApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PointInTimeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vms/{vmIdentifier}/pointsInTime/stats" : {
      "get" : {
        "tags" : [ "Virtual Machines" ],
        "summary" : "Get the earliest and latest points in time for the VM. VpgId may be required if the VM is protected by more than one VPG. (Auth)",
        "operationId" : "pointsInTimeStats",
        "parameters" : [ {
          "name" : "vmIdentifier",
          "in" : "path",
          "description" : "The identifier of the VM. Related endpoint: `v1/vms`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vpgIdentifier",
          "in" : "query",
          "description" : "The name of the VPG which protects the virtual machine",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointInTimeStatsApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointInTimeStatsApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointInTimeStatsApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites" : {
      "get" : {
        "tags" : [ "Virtualization Sites" ],
        "summary" : "Get a list of virtual sites connected to this site and all peer sites. (Auth)",
        "operationId" : "getVirtualizationSiteAll",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VirtualizationSiteApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VirtualizationSiteApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VirtualizationSiteApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}" : {
      "get" : {
        "tags" : [ "Virtualization Sites" ],
        "summary" : "Get details of the site. (Auth)",
        "operationId" : "getVirtualizationSite",
        "parameters" : [ {
          "name" : "siteIdentifier",
          "in" : "path",
          "description" : "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VirtualizationSiteApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VirtualizationSiteApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VirtualizationSiteApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/vms" : {
      "get" : {
        "tags" : [ "Virtualization Sites" ],
        "summary" : "Get the list of unprotected VMs at the site. (Auth)",
        "operationId" : "getVirtualizationSiteVmAll",
        "parameters" : [ {
          "name" : "siteIdentifier",
          "in" : "path",
          "description" : "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VmNativeApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VmNativeApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VmNativeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/vcdvapps" : {
      "get" : {
        "tags" : [ "Virtualization Sites" ],
        "summary" : "Get the list of unprotected VCD vApps at the site (Auth)",
        "operationId" : "getVirtualizationSiteVmVcdVappAll",
        "parameters" : [ {
          "name" : "siteIdentifier",
          "in" : "path",
          "description" : "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VCDVappNativeApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VCDVappNativeApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VCDVappNativeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/datastores" : {
      "get" : {
        "tags" : [ "Virtualization Sites" ],
        "summary" : "Get information about datastores at the site (Auth)",
        "operationId" : "getVirtualizationSiteDatastoreAll",
        "parameters" : [ {
          "name" : "siteIdentifier",
          "in" : "path",
          "description" : "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DatastoreNativeApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DatastoreNativeApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DatastoreNativeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/folders" : {
      "get" : {
        "tags" : [ "Virtualization Sites" ],
        "summary" : "Get the list of folders for the site (Auth)",
        "operationId" : "getVirtualizationSiteFolderAll",
        "parameters" : [ {
          "name" : "siteIdentifier",
          "in" : "path",
          "description" : "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/FolderNativeApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/FolderNativeApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/FolderNativeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/datastoreclusters" : {
      "get" : {
        "tags" : [ "Virtualization Sites" ],
        "summary" : "Get the list of datastore clusters for the site (Auth)",
        "operationId" : "getVirtualizationSiteDatastoreClusterAll",
        "parameters" : [ {
          "name" : "siteIdentifier",
          "in" : "path",
          "description" : "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DatastoreClusterNativeApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DatastoreClusterNativeApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DatastoreClusterNativeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/resourcepools" : {
      "get" : {
        "tags" : [ "Virtualization Sites" ],
        "summary" : "Get the list of resource pools for the site (Auth)",
        "operationId" : "getVirtualizationSiteResourcePoolAll",
        "parameters" : [ {
          "name" : "siteIdentifier",
          "in" : "path",
          "description" : "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ResourcePoolNativeApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ResourcePoolNativeApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ResourcePoolNativeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/orgvdcs" : {
      "get" : {
        "tags" : [ "Virtualization Sites" ],
        "summary" : "Get the list of organization VDC at the site (Auth)",
        "operationId" : "getVirtualizationSiteOrgVdcAll",
        "parameters" : [ {
          "name" : "siteIdentifier",
          "in" : "path",
          "description" : "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OrgVdcNativeApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OrgVdcNativeApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OrgVdcNativeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/networks" : {
      "get" : {
        "tags" : [ "Virtualization Sites" ],
        "summary" : "Get the list of networks (Auth)",
        "operationId" : "getVirtualizationSiteNetworkAll",
        "parameters" : [ {
          "name" : "siteIdentifier",
          "in" : "path",
          "description" : "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NetworkNativeApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NetworkNativeApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NetworkNativeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/hosts" : {
      "get" : {
        "tags" : [ "Virtualization Sites" ],
        "summary" : "Get information about hosts at the site (Auth)",
        "operationId" : "getVirtualizationSiteHostAll",
        "parameters" : [ {
          "name" : "siteIdentifier",
          "in" : "path",
          "description" : "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/HostNativeApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/HostNativeApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/HostNativeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/hostclusters" : {
      "get" : {
        "tags" : [ "Virtualization Sites" ],
        "summary" : "Get the list of host clusters at the site (Auth)",
        "operationId" : "getVirtualizationSiteHostClusterAll",
        "parameters" : [ {
          "name" : "siteIdentifier",
          "in" : "path",
          "description" : "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/HostClusterNativeApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/HostClusterNativeApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/HostClusterNativeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/hosts/{hostIdentifier}" : {
      "get" : {
        "tags" : [ "Virtualization Sites" ],
        "summary" : "Get information about specific host at the site (Auth)",
        "operationId" : "getVirtualizationSiteHost",
        "parameters" : [ {
          "name" : "siteIdentifier",
          "in" : "path",
          "description" : "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hostIdentifier",
          "in" : "path",
          "description" : "The identifier of the host. Related endpoints: `/v1/virtualizationsites/{siteIdentifier}/hosts`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostNativeApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostNativeApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostNativeApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/repositories" : {
      "get" : {
        "tags" : [ "Virtualization Sites" ],
        "summary" : "Get the list of Repositories at the site (Auth)",
        "operationId" : "getVirtualizationSiteRepositoryAll",
        "parameters" : [ {
          "name" : "siteIdentifier",
          "in" : "path",
          "description" : "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BackupTargetInfoRepositoriesApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BackupTargetInfoRepositoriesApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BackupTargetInfoRepositoriesApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/orgvdcs/{orgVdcIdentifier}/networks" : {
      "get" : {
        "tags" : [ "Virtualization Sites" ],
        "summary" : "Get list of virtualization site networks for a specified org vDc (Auth)",
        "operationId" : "getVirtualizationSiteOrgVdcNetworkAll",
        "parameters" : [ {
          "name" : "siteIdentifier",
          "in" : "path",
          "description" : "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orgVdcIdentifier",
          "in" : "path",
          "description" : "The identifier of the VDC org. Related endpoint: `/v1/virtualizationsites/{siteIdentifier}/orgvdcs`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NetworkNativeApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NetworkNativeApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NetworkNativeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/orgvdcs/{orgVdcIdentifier}/storagepolicies" : {
      "get" : {
        "tags" : [ "Virtualization Sites" ],
        "summary" : "Get the list of storage policies at the site (Auth)",
        "operationId" : "getVirtualizationSiteStoragePolicyAll",
        "parameters" : [ {
          "name" : "siteIdentifier",
          "in" : "path",
          "description" : "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orgVdcIdentifier",
          "in" : "path",
          "description" : "The identifier of the VDC org. Related endpoint: `/v1/virtualizationsites/{siteIdentifier}/orgvdcs`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/StoragePolicyApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/StoragePolicyApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/StoragePolicyApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/devices" : {
      "get" : {
        "tags" : [ "Virtualization Sites" ],
        "summary" : "Get a list of all avaialable devices for all available hosts in the site (Auth)",
        "operationId" : "getVirtualizationSiteDeviceAll",
        "parameters" : [ {
          "name" : "siteIdentifier",
          "in" : "path",
          "description" : "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hostIdentifier",
          "in" : "query",
          "description" : "The identifier of the host. Related endpoint: `/v1/virtualizationsites/{siteIdentifier}/hosts`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceName",
          "in" : "query",
          "description" : "The name of the device",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DeviceDataApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DeviceDataApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DeviceDataApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/publiccloud/virtualNetworks" : {
      "get" : {
        "tags" : [ "Virtualization Sites" ],
        "summary" : "Get the list of virtual networks at the site (Auth)",
        "operationId" : "getPublicCloudNetworkAll",
        "parameters" : [ {
          "name" : "siteIdentifier",
          "in" : "path",
          "description" : "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "virtualNetworkIdentifier",
          "in" : "query",
          "description" : "The virtual network identifier. Related endpoint: `v1/virtualizationsites/{siteIdentifier}/publiccloud/virtualNetworks`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VirtualNetworkApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VirtualNetworkApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VirtualNetworkApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/publiccloud/subnets" : {
      "get" : {
        "tags" : [ "Virtualization Sites" ],
        "summary" : "Get the list of subnets at the site (Auth)",
        "operationId" : "getPublicCloudSubnetAll",
        "parameters" : [ {
          "name" : "siteIdentifier",
          "in" : "path",
          "description" : "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "virtualNetworkIdentifier",
          "in" : "query",
          "description" : "The virtual network identifier. Related endpoint: `v1/virtualizationsites/{siteIdentifier}/publiccloud/virtualNetworks`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SubnetApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SubnetApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SubnetApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/publiccloud/securityGroups" : {
      "get" : {
        "tags" : [ "Virtualization Sites" ],
        "summary" : "Get the list of security groups at the site (Auth)",
        "operationId" : "getPublicCloudSecurityGroupAll",
        "parameters" : [ {
          "name" : "siteIdentifier",
          "in" : "path",
          "description" : "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SecurityGroupApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SecurityGroupApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SecurityGroupApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/publiccloud/vmInstanceTypes" : {
      "get" : {
        "tags" : [ "Virtualization Sites" ],
        "summary" : "Get the list of virtual machine instance types at the site (Auth)",
        "operationId" : "getPublicCloudVmInstanceTypeAll",
        "parameters" : [ {
          "name" : "siteIdentifier",
          "in" : "path",
          "description" : "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VmInstanceTypeApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VmInstanceTypeApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VmInstanceTypeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/publiccloud/resourceGroups" : {
      "get" : {
        "tags" : [ "Virtualization Sites" ],
        "summary" : "Get the list of resource groups at the site (Auth)",
        "operationId" : "getPublicCloudResourceGroupsAll",
        "parameters" : [ {
          "name" : "siteIdentifier",
          "in" : "path",
          "description" : "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ResourceGroupApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ResourceGroupApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ResourceGroupApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/volumes" : {
      "get" : {
        "tags" : [ "Volumes" ],
        "summary" : "Get a list of volumes info in the current site (Auth)",
        "operationId" : "getVolumeAll",
        "parameters" : [ {
          "name" : "volumeType",
          "in" : "query",
          "description" : "The volume type",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vpgIdentifier",
          "in" : "query",
          "description" : "The identifier of the VPG. Related endpoint: `v1/vpgs`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "datastoreIdentifier",
          "in" : "query",
          "description" : "The identifier of the datastore. Related endpoint: `/v1/datastores`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectedVmIdentifier",
          "in" : "query",
          "description" : "The identifier of the protected virtual machine. Related endpoint: `v1/vms`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "owningVmIdentifier",
          "in" : "query",
          "description" : "The identifier of the owning virtual machine. Related endpoint: `v1/vms`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VolumeApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VolumeApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VolumeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings" : {
      "get" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Get all VPG settings. (Auth)",
        "operationId" : "getVpgSettingAll",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VpgSettingsApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VpgSettingsApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VpgSettingsApi"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Create a new VPG settings object, returns the settings object identifier (Auth)",
        "operationId" : "newVpgSetting",
        "parameters" : [ {
          "name" : "repopulateSettings",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings/copyVpgSettings" : {
      "post" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Create a new VPG settings object from an existing VPG, returns the settings object identifier (Auth)",
        "operationId" : "copyVpgSetting",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CopyVpgSettingsApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CopyVpgSettingsApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CopyVpgSettingsApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}" : {
      "get" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Get VPG settings (Auth)",
        "operationId" : "getVpgSetting",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsApi"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Edit the VPG settings. (Auth)",
        "operationId" : "editVpgSetting",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      },
      "delete" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Delete VPG settings. (Auth)",
        "operationId" : "removeVpgSetting",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}/basic" : {
      "get" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Get Basic VPG settings (Auth)",
        "operationId" : "getVpgSettingBasic",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsBasicApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsBasicApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsBasicApi"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Edit VPG settings with basic settings (Auth)",
        "operationId" : "editVpgSettingBasic",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsBasicApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsBasicApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsBasicApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      },
      "delete" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Delete Basic VPG settings. (Auth)",
        "operationId" : "removeVpgSettingsBasic",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}/bootgroup" : {
      "get" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Get Bootgroups VPG settings (Auth)",
        "operationId" : "getVpgSettingBootGroup",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsBootGroupsApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsBootGroupsApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsBootGroupsApi"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Edit VPG settings with Bootgroups settings (Auth)",
        "operationId" : "editVpgSettingBasicBootGroup",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsBootGroupsApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsBootGroupsApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsBootGroupsApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      },
      "delete" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Delete Bootgroups VPG settings (Auth)",
        "operationId" : "deleteVpgSettingBootGroup",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}/scripting" : {
      "get" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Get Scripting VPG settings (Auth)",
        "operationId" : "getVpgSettingScript",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsScriptsApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsScriptsApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsScriptsApi"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Update Scripting VPG settings (Auth)",
        "operationId" : "editVpgSettingScript",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsScriptsApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsScriptsApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsScriptsApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      },
      "delete" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Delete Scripting VPG settings (Auth)",
        "operationId" : "deleteVpgSettingScript",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}/recovery" : {
      "get" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Get Recovery VPG settings (Auth)",
        "operationId" : "getVpgSettingRecovery",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsRecoveryApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsRecoveryApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsRecoveryApi"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Update Recovery VPG settings (Auth)",
        "operationId" : "editVpgSettingRecovery",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsRecoveryApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsRecoveryApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsRecoveryApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      },
      "delete" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Delete Recovery VPG settings (Auth)",
        "operationId" : "removeVpgSettingRecovery",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}/journal" : {
      "get" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Get VPG Journal settings (Auth)",
        "operationId" : "getVpgSettingJournal",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsJournalApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsJournalApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsJournalApi"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Update VPG Journal settings (Auth)",
        "operationId" : "editVpgSettingJournal",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsJournalApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsJournalApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsJournalApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      },
      "delete" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Delete VPG Journal settings (Auth)",
        "operationId" : "removeVpgSettingJournal",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}/scratch" : {
      "get" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Get VPG Scratch settings (Auth)",
        "operationId" : "getVpgSettingScratch",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsScratchApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsScratchApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsScratchApi"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Update VPG Scratch settings (Auth)",
        "operationId" : "editVpgSettingScratch",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsScratchApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsScratchApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsScratchApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      },
      "delete" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Delete VPG Scratch settings (Auth)",
        "operationId" : "removeVpgSettingScratch",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}/ltr" : {
      "get" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Get Extended Journal Copy VPG settings (Auth)",
        "operationId" : "getVpgSettingLtr",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsLtrApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsLtrApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsLtrApi"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Edit Extended Journal Copy VPG settings (Auth)",
        "operationId" : "editVpgSettingLtr",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsLtrApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsLtrApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsLtrApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      },
      "post" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Create Extended Journal Copy VPG settings (Auth)",
        "operationId" : "newVpgSettingLtr",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsLtrApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsLtrApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsLtrApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      },
      "delete" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Delete Extended Journal Copy VPG settings (Auth)",
        "operationId" : "removeVpgSettingLtr",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}/networks" : {
      "get" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Get Network VPG settings (Auth)",
        "operationId" : "getVpgSettingLtrNetworkAll",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsNetworksApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsNetworksApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsNetworksApi"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Update Network VPG settings (Auth)",
        "operationId" : "editVpgSettingLtrNetwork",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsNetworksApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsNetworksApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsNetworksApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      },
      "delete" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Delete Network VPG settings (Auth)",
        "operationId" : "removeVpgSettingLtrNetwork",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}/vms" : {
      "get" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Get VMs from VPG settings (Auth)",
        "operationId" : "getVpgSettingVmAll",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VpgSettingsVmApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VpgSettingsVmApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VpgSettingsVmApi"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Add new VMs to VPG settings (Auth)",
        "operationId" : "newVpgSettingVm",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsVmApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsVmApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsVmApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}/vms/{vmIdentifier}" : {
      "get" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Get VPG settings of a single VM (Auth)",
        "operationId" : "getVpgSettingVm",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vmIdentifier",
          "in" : "path",
          "description" : "Vm Identifier.Related endpoint: `v1/vms`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsVmApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsVmApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsVmApi"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Edit the VPG settings of a single VM (Auth)",
        "operationId" : "editVpgSettingVm",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vmIdentifier",
          "in" : "path",
          "description" : "Vm Identifier.Related endpoint: `v1/vms`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsVmApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsVmApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsVmApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      },
      "delete" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Delete the VPG settings of a single VM (Auth)",
        "operationId" : "removeVpgSettingVm",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vmIdentifier",
          "in" : "path",
          "description" : "Vm Identifier.Related endpoint: `v1/vms`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}/vms/{vmIdentifier}/volumes" : {
      "get" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Get Volumes of specific VM in VPG settings (Auth)",
        "operationId" : "getVpgSettingVmVolumeAll",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vmIdentifier",
          "in" : "path",
          "description" : "Vm Identifier.Related endpoint: `v1/vms`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VpgSettingsVmVolumeApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VpgSettingsVmVolumeApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VpgSettingsVmVolumeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}/vms/{vmIdentifier}/volumes/{volumeIdentifier}" : {
      "get" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Get the Volume details of specific VM in VPG settings (Auth)",
        "operationId" : "getVpgSettingVmVolume",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vmIdentifier",
          "in" : "path",
          "description" : "Vm Identifier.Related endpoint: `v1/vms`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "volumeIdentifier",
          "in" : "path",
          "description" : "Volume Identifier. Related endpoint: `Get: v1/volumes`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsVmVolumeApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsVmVolumeApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsVmVolumeApi"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Update Volume details of specific VM in VPG settings (Auth)",
        "operationId" : "editVpgSettingVmVolume",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vmIdentifier",
          "in" : "path",
          "description" : "Vm Identifier.Related endpoint: `v1/vms`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "volumeIdentifier",
          "in" : "path",
          "description" : "Volume Identifier. Related endpoint: `Get: v1/volumes`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsVmVolumeApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsVmVolumeApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsVmVolumeApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}/vms/{vmIdentifier}/nics" : {
      "get" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Get NICs of specific VM in VPG settings (Auth)",
        "operationId" : "getVpgSettingVmNicAll",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vmIdentifier",
          "in" : "path",
          "description" : "Vm Identifier.Related endpoint: `v1/vms`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VpgSettingsVmNicApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VpgSettingsVmNicApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VpgSettingsVmNicApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}/vms/{vmIdentifier}/nics/{nicIdentifier}" : {
      "get" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Get the NIC details of specific VM in VPG settings (Auth)",
        "operationId" : "getVpgSettingVmNic",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vmIdentifier",
          "in" : "path",
          "description" : "Vm Identifier.Related endpoint: `v1/vms`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nicIdentifier",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsVmNicApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsVmNicApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgSettingsVmNicApi"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Edit NICs details of specific VM in VPG settings (Auth)",
        "operationId" : "editVpgSettingVmNic",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vmIdentifier",
          "in" : "path",
          "description" : "Vm Identifier.Related endpoint: `v1/vms`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nicIdentifier",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsVmNicApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsVmNicApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgSettingsVmNicApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      },
      "delete" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Delete NICs of specific VM in VPG settings (Auth)",
        "operationId" : "removeVpgSettingVmNic",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vmIdentifier",
          "in" : "path",
          "description" : "Vm Identifier.Related endpoint: `v1/vms`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nicIdentifier",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}/commit" : {
      "post" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Commit and deploy the VPG settings. Returns the command task identifier. (Auth)",
        "operationId" : "startVpgSettingCommit",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}/priority" : {
      "get" : {
        "tags" : [ "VPG(Virtual Protection Group) Settings" ],
        "summary" : "Get values for Priority. (Auth)",
        "operationId" : "getVpgSettingPossiblePriorityAll",
        "parameters" : [ {
          "name" : "vpgSettingsIdentifier",
          "in" : "path",
          "description" : "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs" : {
      "get" : {
        "tags" : [ "VPGs (Virtual Protection Groups)" ],
        "summary" : "Get information about all VPGs. (Auth)",
        "operationId" : "getVpgAll",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "description" : "VPG name",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "VPG status",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subStatus",
          "in" : "query",
          "description" : "The substatus of the VPG, for example the VPG is in a bitmap sync",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectedSiteType",
          "in" : "query",
          "description" : "The protected site type. This filter behaves in the same way as the sourceType filter. Possible values are: `0 or VCVpg` | `2 or VCDvApp`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "recoverySiteType",
          "in" : "query",
          "description" : "The type of the recovery site. This filter behaves in the same way as the targetType filter",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectedSiteIdentifier",
          "in" : "query",
          "description" : "The identifier of the protected site",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "recoverySiteIdentifier",
          "in" : "query",
          "description" : "The identifier of the recovery site",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSite",
          "in" : "query",
          "description" : "Deprecated. See protectedSiteIdentifier",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "targetSite",
          "in" : "query",
          "description" : "Deprecated. See recoverySiteIdentifier",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceType",
          "in" : "query",
          "description" : "Deprecated. See protectedSiteType",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "targetType",
          "in" : "query",
          "description" : "Deprecated. See recoverySiteType",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationName",
          "in" : "query",
          "description" : "The ZORG for this VPG",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zorgIdentifier",
          "in" : "query",
          "description" : "The internal identifier for the ZORG",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "priority",
          "in" : "query",
          "description" : "The VPG priority. Related endpoint: `/v1/vpgs/priorities`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceProfileIdentifier",
          "in" : "query",
          "description" : "The identifier of the service profile to use for the VPG when a Zerto Cloud Manager is used",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "backupEnabled",
          "in" : "query",
          "description" : "Deprecated",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VpgApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VpgApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VpgApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/{vpgIdentifier}" : {
      "get" : {
        "tags" : [ "VPGs (Virtual Protection Groups)" ],
        "summary" : "Get information about the VPG. (Auth)",
        "operationId" : "getVpg",
        "parameters" : [ {
          "name" : "vpgIdentifier",
          "in" : "path",
          "description" : "VPG identifier. Related endpoint: `v1/vpgs`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgApi"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "VPGs (Virtual Protection Groups)" ],
        "summary" : "Delete the VPG (Auth)",
        "operationId" : "startVpgDelete",
        "parameters" : [ {
          "name" : "vpgIdentifier",
          "in" : "path",
          "description" : "VPG identifier. Related endpoint: `v1/vpgs`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgDeleteDataApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgDeleteDataApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgDeleteDataApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/{vpgIdentifier}/checkpoints" : {
      "get" : {
        "tags" : [ "VPGs (Virtual Protection Groups)" ],
        "summary" : "Get a list of checkpoints for the VPG. You can filter the results with additional parameters. (Auth)",
        "operationId" : "getVpgCheckpointAll",
        "parameters" : [ {
          "name" : "vpgIdentifier",
          "in" : "path",
          "description" : "VPG identifier. Related endpoint: `v1/vpgs`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "The start date of the checkpoint",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "The end date of the checkpoint",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CheckpointApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CheckpointApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CheckpointApi"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "VPGs (Virtual Protection Groups)" ],
        "summary" : "Create a tagged checkpoint for the VPG. (Auth)",
        "operationId" : "startVpgTaggedCheckpointInsert",
        "parameters" : [ {
          "name" : "vpgIdentifier",
          "in" : "path",
          "description" : "VPG identifier. Related endpoint: `v1/vpgs`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgInsertTagCheckpointDataApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgInsertTagCheckpointDataApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VpgInsertTagCheckpointDataApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/{vpgIdentifier}/checkpoints/stats" : {
      "get" : {
        "tags" : [ "VPGs (Virtual Protection Groups)" ],
        "summary" : "Get checkpoints statistics for a VPG. (Auth)",
        "operationId" : "getVpgCheckpointStatAll",
        "parameters" : [ {
          "name" : "vpgIdentifier",
          "in" : "path",
          "description" : "VPG identifier. Related endpoint: `v1/vpgs`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgCheckpointsStatsApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgCheckpointsStatsApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VpgCheckpointsStatsApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/{vpgIdentifier}/FailoverTest" : {
      "post" : {
        "tags" : [ "VPGs (Virtual Protection Groups)" ],
        "summary" : "Start a failover test using a specific checkpoint or the latest checkpoint if one is not . (Auth)",
        "operationId" : "startVpgFailoverTest",
        "parameters" : [ {
          "name" : "vpgIdentifier",
          "in" : "path",
          "description" : "VPG identifier. Related endpoint: `v1/vpgs`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FailOverTestStartDataApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/FailOverTestStartDataApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/FailOverTestStartDataApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/{vpgIdentifier}/FailoverTestStop" : {
      "post" : {
        "tags" : [ "VPGs (Virtual Protection Groups)" ],
        "summary" : "Stops a failover test. Specify if test was successful and provide a summary. (Auth)",
        "operationId" : "stopVpgFailoverTest",
        "parameters" : [ {
          "name" : "vpgIdentifier",
          "in" : "path",
          "description" : "VPG identifier. Related endpoint: `v1/vpgs`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StopFailoverTestDataApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/StopFailoverTestDataApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/StopFailoverTestDataApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/{vpgIdentifier}/Failover" : {
      "post" : {
        "tags" : [ "VPGs (Virtual Protection Groups)" ],
        "summary" : "Starts a Failover of a VPG using a checkpoint. Returns the TaskIdentifier of the operation, which can be used to monitor the operation. (Auth)",
        "operationId" : "startVpgFailover",
        "parameters" : [ {
          "name" : "vpgIdentifier",
          "in" : "path",
          "description" : "VPG identifier. Related endpoint: `v1/vpgs`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FailoverDataApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/FailoverDataApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/FailoverDataApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/{vpgIdentifier}/Move" : {
      "post" : {
        "tags" : [ "VPGs (Virtual Protection Groups)" ],
        "summary" : "Starts a Move of a VPG using a checkpoint. Returns the TaskIdentifier of the operation, which can be used to monitor the operation. (Auth)",
        "operationId" : "startVpgMove",
        "parameters" : [ {
          "name" : "vpgIdentifier",
          "in" : "path",
          "description" : "VPG identifier. Related endpoint: `v1/vpgs`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MoveVpgDataApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/MoveVpgDataApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/MoveVpgDataApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/{vpgIdentifier}/moveRollback" : {
      "post" : {
        "tags" : [ "VPGs (Virtual Protection Groups)" ],
        "summary" : "Rolls back the VPG after Move. Returns the TaskIdentifier of the operation, which can be used to monitor the operation. (Auth)",
        "operationId" : "startVpgMoveRollback",
        "parameters" : [ {
          "name" : "vpgIdentifier",
          "in" : "path",
          "description" : "VPG identifier. Related endpoint: `v1/vpgs`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/{vpgIdentifier}/MoveCommit" : {
      "post" : {
        "tags" : [ "VPGs (Virtual Protection Groups)" ],
        "summary" : "Commits the VPG. Returns the TaskIdentifier of the operation, which can be used to monitor the operation. (Auth)",
        "operationId" : "startVpgMoveCommit",
        "parameters" : [ {
          "name" : "vpgIdentifier",
          "in" : "path",
          "description" : "VPG identifier. Related endpoint: `v1/vpgs`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MoveCommitVpgDataApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/MoveCommitVpgDataApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/MoveCommitVpgDataApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/{vpgIdentifier}/FailoverCommit" : {
      "post" : {
        "tags" : [ "VPGs (Virtual Protection Groups)" ],
        "summary" : "Commits the Failover of a VPG. Returns the TaskIdentifier of the operation, which can be used to monitor the operation. (Auth)",
        "operationId" : "startVpgFailoverCommit",
        "parameters" : [ {
          "name" : "vpgIdentifier",
          "in" : "path",
          "description" : "VPG identifier. Related endpoint: `v1/vpgs`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FailoverCommitDataApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/FailoverCommitDataApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/FailoverCommitDataApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/{vpgIdentifier}/FailoverRollback" : {
      "post" : {
        "tags" : [ "VPGs (Virtual Protection Groups)" ],
        "summary" : "Rolls back the VPG after Failover. Returns the TaskIdentifier of the operation, which can be used to monitor the operation. (Auth)",
        "operationId" : "startVpgFailoverRollback",
        "parameters" : [ {
          "name" : "vpgIdentifier",
          "in" : "path",
          "description" : "VPG identifier. Related endpoint: `v1/vpgs`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/{vpgIdentifier}/CloneStart" : {
      "post" : {
        "tags" : [ "VPGs (Virtual Protection Groups)" ],
        "summary" : "Clone a VPG using a specific checkpoint or the latest checkpoint if one is not (Auth)",
        "operationId" : "startVpgClone",
        "parameters" : [ {
          "name" : "vpgIdentifier",
          "in" : "path",
          "description" : "VPG identifier. Related endpoint: `v1/vpgs`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CloneStartDataApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CloneStartDataApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CloneStartDataApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/{vpgIdentifier}/CloneAbort" : {
      "post" : {
        "tags" : [ "VPGs (Virtual Protection Groups)" ],
        "summary" : "Abort cloning of the VPG (Auth)",
        "operationId" : "stopVpgClone",
        "parameters" : [ {
          "name" : "vpgIdentifier",
          "in" : "path",
          "description" : "VPG identifier. Related endpoint: `v1/vpgs`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v1/vpgs/retentionpolicies" : {
      "get" : {
        "tags" : [ "VPGs (Virtual Protection Groups)" ],
        "summary" : "Get the list of values for VPG retention policy. (Auth)",
        "operationId" : "getVpgRetentionPolicyAll",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/priorities" : {
      "get" : {
        "tags" : [ "VPGs (Virtual Protection Groups)" ],
        "summary" : "Get the list of values for VPG priority. (Auth)",
        "operationId" : "getVpgPriorityAll",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/entitytypes" : {
      "get" : {
        "tags" : [ "VPGs (Virtual Protection Groups)" ],
        "summary" : "Get the list of values for VPG entity. (Auth)",
        "operationId" : "getVpgEntityTypeAll",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/statuses" : {
      "get" : {
        "tags" : [ "VPGs (Virtual Protection Groups)" ],
        "summary" : "Get the list of values for VPG status. (Auth)",
        "operationId" : "getVpgStatusAll",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/substatuses" : {
      "get" : {
        "tags" : [ "VPGs (Virtual Protection Groups)" ],
        "summary" : "Get the list of values for VPG sub status. (Auth)",
        "operationId" : "getVpgSubStatusAll",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/failovershutdownpolicies" : {
      "get" : {
        "tags" : [ "VPGs (Virtual Protection Groups)" ],
        "summary" : "Get the list of values for VPG failover shutdown policy. (Auth)",
        "operationId" : "getVpgFailoverShutdownPolicyAll",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/failovercommitpolicies" : {
      "get" : {
        "tags" : [ "VPGs (Virtual Protection Groups)" ],
        "summary" : "Get the list of values for VPG failover commit policy. (Auth)",
        "operationId" : "getVpgFailoverCommitPolicyAll",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/{vpgIdentifier}/pause" : {
      "post" : {
        "tags" : [ "VPGs (Virtual Protection Groups)" ],
        "summary" : "Pause the protection of the VPG. (Auth)",
        "operationId" : "startVpgPause",
        "parameters" : [ {
          "name" : "vpgIdentifier",
          "in" : "path",
          "description" : "VPG identifier. Related endpoint: `v1/vpgs`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/{vpgIdentifier}/resume" : {
      "post" : {
        "tags" : [ "VPGs (Virtual Protection Groups)" ],
        "summary" : "Resume the protection of the VPG. (Auth)",
        "operationId" : "startVpgResume",
        "parameters" : [ {
          "name" : "vpgIdentifier",
          "in" : "path",
          "description" : "VPG identifier. Related endpoint: `v1/vpgs`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/{vpgIdentifier}/forcesync" : {
      "post" : {
        "tags" : [ "VPGs (Virtual Protection Groups)" ],
        "summary" : "Force synchronization of the VPG. (Auth)",
        "operationId" : "startVpgForceSync",
        "parameters" : [ {
          "name" : "vpgIdentifier",
          "in" : "path",
          "description" : "VPG identifier. Related endpoint: `v1/vpgs`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vras" : {
      "get" : {
        "tags" : [ "VRAs (Virtual Replication Appliances)" ],
        "summary" : "Get information about all VRAs. (Auth)",
        "operationId" : "getVraAll",
        "parameters" : [ {
          "name" : "vraName",
          "in" : "query",
          "description" : "VRA name",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "VRA status",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vraVersion",
          "in" : "query",
          "description" : "VRA version",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hostVersion",
          "in" : "query",
          "description" : "Host version where the VRA is installed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ipAddress",
          "in" : "query",
          "description" : "VRA IP address",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vraGroup",
          "in" : "query",
          "description" : "VRA group",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "datastoreName",
          "in" : "query",
          "description" : "Datastore name VRA uses for recovery data",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "datastoreClusterName",
          "in" : "query",
          "description" : "Cluster name VRA uses for recovery data",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "networkName",
          "in" : "query",
          "description" : "VRA network",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vraIpConfigurationTypeApi",
          "in" : "query",
          "description" : "IP configuration type",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VraApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VraApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VraApi"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "VRAs (Virtual Replication Appliances)" ],
        "summary" : "Install VRA. Returns TaskIdentifier. (Auth)",
        "operationId" : "startVraInstall",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VraCreateDataApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VraCreateDataApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VraCreateDataApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vras/{vraIdentifier}" : {
      "get" : {
        "tags" : [ "VRAs (Virtual Replication Appliances)" ],
        "summary" : "Get information about the VRA. (Auth)",
        "operationId" : "getVra",
        "parameters" : [ {
          "name" : "vraIdentifier",
          "in" : "path",
          "description" : "Vra identifier. Related endpoint: `/v1/vras`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VraApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VraApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VraApi"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "VRAs (Virtual Replication Appliances)" ],
        "summary" : "Edit VRA. Returns TaskIdentifier (Auth)",
        "operationId" : "startVraEdit",
        "parameters" : [ {
          "name" : "vraIdentifier",
          "in" : "path",
          "description" : "Vra identifier. Related endpoint: `/v1/vras`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VraEditDataApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VraEditDataApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VraEditDataApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "VRAs (Virtual Replication Appliances)" ],
        "summary" : "UnInstall VRA. Returns TaskIdentifier (Auth)",
        "operationId" : "startVraUninstall",
        "parameters" : [ {
          "name" : "vraIdentifier",
          "in" : "path",
          "description" : "Vra identifier. Related endpoint: `/v1/vras`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vras/clusters/{clusterIdentifier}" : {
      "put" : {
        "tags" : [ "VRAs (Virtual Replication Appliances)" ],
        "summary" : "Upgrade VRA on cluster. Returns TaskIdentifier (Auth)",
        "operationId" : "startClusterVrasUpgrade",
        "parameters" : [ {
          "name" : "clusterIdentifier",
          "in" : "path",
          "description" : "Cluster identifier. Related endpoint `/v1/virtualizationsites/{siteIdentifier}/hostclusters`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "VRAs (Virtual Replication Appliances)" ],
        "summary" : "UnInstall VRAs from cluster. Returns TaskIdentifier (Auth)",
        "operationId" : "startClusterVrasUninstall",
        "parameters" : [ {
          "name" : "clusterIdentifier",
          "in" : "path",
          "description" : "Cluster identifier. Related endpoint `/v1/virtualizationsites/{siteIdentifier}/hostclusters`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vras/{vraIdentifier}/upgrade" : {
      "post" : {
        "tags" : [ "VRAs (Virtual Replication Appliances)" ],
        "summary" : "Upgrade VRA. Returns TaskIdentifier (Auth)",
        "operationId" : "startVraUpgrade",
        "parameters" : [ {
          "name" : "vraIdentifier",
          "in" : "path",
          "description" : "Vra identifier. Related endpoint: `/v1/vras`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vras/clusters/{clusterIdentifier}/settings" : {
      "get" : {
        "tags" : [ "VRAs (Virtual Replication Appliances)" ],
        "summary" : "Get VRA cluster install settings. (Auth)",
        "operationId" : "getVraClusterSettings",
        "parameters" : [ {
          "name" : "clusterIdentifier",
          "in" : "path",
          "description" : "Cluster identifier. Related endpoint `/v1/virtualizationsites/{siteIdentifier}/hostclusters`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VrasOnClusterCreateDataApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VrasOnClusterCreateDataApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VrasOnClusterCreateDataApi"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "VRAs (Virtual Replication Appliances)" ],
        "summary" : "Store VRA install settings for a cluster. (Auth)",
        "operationId" : "startSetVraClusterSettings",
        "parameters" : [ {
          "name" : "clusterIdentifier",
          "in" : "path",
          "description" : "Cluster identifier. Related endpoint `/v1/virtualizationsites/{siteIdentifier}/hostclusters`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VrasOnClusterCreateDataApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VrasOnClusterCreateDataApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VrasOnClusterCreateDataApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vras/statuses" : {
      "get" : {
        "tags" : [ "VRAs (Virtual Replication Appliances)" ],
        "summary" : "Get the list of values for VRA status (Auth)",
        "operationId" : "getVraStatusAll",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vras/ipconfigurationtypes" : {
      "get" : {
        "tags" : [ "VRAs (Virtual Replication Appliances)" ],
        "summary" : "Get the list of values for VRA IP configuration type (Auth)",
        "operationId" : "getVraConfigurationTypeAll",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vras/{vraIdentifier}/changerecoveryvra/potentials" : {
      "get" : {
        "tags" : [ "VRAs (Virtual Replication Appliances)" ],
        "summary" : "Get potential replacement hosts for a change recovery host operation. \r\nReturns a list for a specified VmIdentifer. (Auth)",
        "operationId" : "getVraChangeRecoveryHostPotential",
        "parameters" : [ {
          "name" : "vraIdentifier",
          "in" : "path",
          "description" : "Vra identifier. Related endpoint: `/v1/vras`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vmIdentifier",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VraPotentialHostApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VraPotentialHostApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VraPotentialHostApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vras/{vraIdentifier}/changerecoveryvra/execute" : {
      "post" : {
        "tags" : [ "VRAs (Virtual Replication Appliances)" ],
        "summary" : "Change recovery host. (Auth)",
        "operationId" : "startVraChangeRecoveryHost",
        "parameters" : [ {
          "name" : "vraIdentifier",
          "in" : "path",
          "description" : "Vra identifier. Related endpoint: `/v1/vras`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VraChangeRecoveryHostSettingsApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VraChangeRecoveryHostSettingsApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VraChangeRecoveryHostSettingsApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vras/{vraIdentifier}/changerecoveryvra/validate" : {
      "post" : {
        "tags" : [ "VRAs (Virtual Replication Appliances)" ],
        "summary" : "Validate change recovery host settings. (Auth)",
        "operationId" : "testVraChangeRecoveryHostSetting",
        "parameters" : [ {
          "name" : "vraIdentifier",
          "in" : "path",
          "description" : "Vra identifier. Related endpoint: `/v1/vras`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VraChangeRecoveryHostSettingsApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VraChangeRecoveryHostSettingsApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VraChangeRecoveryHostSettingsApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VraChangeRecoveryHostValidationResultsApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VraChangeRecoveryHostValidationResultsApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VraChangeRecoveryHostValidationResultsApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vras/{vraIdentifier}/changerecoveryvra/recommendation" : {
      "post" : {
        "tags" : [ "VRAs (Virtual Replication Appliances)" ],
        "summary" : "Get recommendations for evacuate operation. (Auth)",
        "operationId" : "getVraChangeRecoveryHostRecommendation",
        "parameters" : [ {
          "name" : "vraIdentifier",
          "in" : "path",
          "description" : "Vra identifier. Related endpoint: `/v1/vras`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VraChangeRecoveryHostRecommendationRequestApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VraChangeRecoveryHostRecommendationRequestApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/VraChangeRecoveryHostRecommendationRequestApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VraChangeRecoveryHostRecommendationResultApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VraChangeRecoveryHostRecommendationResultApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VraChangeRecoveryHostRecommendationResultApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/zorgs" : {
      "get" : {
        "tags" : [ "ZORGS (Zerto Organizations)" ],
        "summary" : "Get the list of all the ZORGs defined in the Zerto Cloud Manager for this site. (Auth)",
        "operationId" : "getZorgAll",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ZorgApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ZorgApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ZorgApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/zorgs/{zorgIdentifier}" : {
      "get" : {
        "tags" : [ "ZORGS (Zerto Organizations)" ],
        "summary" : "Get details of a specific ZORG. (Auth)",
        "operationId" : "getZorg",
        "parameters" : [ {
          "name" : "zorgIdentifier",
          "in" : "path",
          "description" : "The identifier or the ZORG. Related endpoint `/v1/zorgs`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ZorgApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ZorgApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ZorgApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/zsspsessions" : {
      "get" : {
        "tags" : [ "ZSSP (Zerto Self Service Portal) Sessions" ],
        "summary" : "Get details of all ZSSP sessions (Auth)",
        "operationId" : "getZsspSessionAll",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ZsspSessionDetailsApi"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ZsspSessionDetailsApi"
                  }
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ZsspSessionDetailsApi"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "ZSSP (Zerto Self Service Portal) Sessions" ],
        "summary" : "Create a ZSSP session. (Auth)",
        "operationId" : "connectZssp",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ZsspSessionsApi"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ZsspSessionsApi"
              }
            },
            "text/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ZsspSessionsApi"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/zsspsessions/{zsspSessionIdentifier}" : {
      "get" : {
        "tags" : [ "ZSSP (Zerto Self Service Portal) Sessions" ],
        "summary" : "Get details of a ZSSP session (Auth)",
        "operationId" : "getZsspSession",
        "parameters" : [ {
          "name" : "zsspSessionIdentifier",
          "in" : "path",
          "description" : "Zssp session identifier. Realted endpoint `/v1/zsspsessions`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ZsspSessionDetailsApi"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ZsspSessionDetailsApi"
                }
              },
              "text/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ZsspSessionDetailsApi"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ZSSP (Zerto Self Service Portal) Sessions" ],
        "summary" : "Delete a ZSSP session. (Auth)",
        "operationId" : "disconnectZssp",
        "parameters" : [ {
          "name" : "zsspSessionIdentifier",
          "in" : "path",
          "description" : "Zssp session identifier. Realted endpoint `/v1/zsspsessions`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/auth/realms/zerto/protocol/openid-connect/token" : {
      "post" : {
        "tags" : [ "Sessions" ],
        "summary" : "Get new auth token",
        "operationId" : "getAuthToken",
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_1"
              },
              "encoding" : {
                "grant_type" : {
                  "style" : "form"
                },
                "client_id" : {
                  "style" : "form"
                },
                "username" : {
                  "style" : "form"
                },
                "password" : {
                  "style" : "form"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessTokenResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResult"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AWSS3BackupTargetStorageApi" : {
        "type" : "object",
        "properties" : {
          "s3Region" : {
            "type" : "string",
            "nullable" : true
          },
          "s3BucketName" : {
            "type" : "string",
            "nullable" : true
          },
          "s3EndpointUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "s3StorageClass" : {
            "type" : "string",
            "nullable" : true
          },
          "s3AccessKey" : {
            "type" : "string",
            "nullable" : true
          },
          "path" : {
            "type" : "string",
            "nullable" : true
          },
          "s3SecretKey" : {
            "type" : "string"
          },
          "isStandardIATiering" : {
            "type" : "boolean"
          },
          "isGlacierTiering" : {
            "type" : "boolean"
          },
          "tieringToStandardIAInDays" : {
            "type" : "integer",
            "format" : "int32"
          },
          "tieringToGlacierInDays" : {
            "type" : "integer",
            "format" : "int32"
          },
          "isImmutable" : {
            "type" : "boolean"
          },
          "immutabilityPolicy" : {
            "$ref" : "#/components/schemas/ImmutabilityType"
          },
          "immutabilityDays" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "AlertApi" : {
        "type" : "object",
        "properties" : {
          "link" : {
            "$ref" : "#/components/schemas/ResourceLink"
          },
          "level" : {
            "type" : "string",
            "nullable" : true
          },
          "entity" : {
            "type" : "string",
            "nullable" : true
          },
          "isDismissed" : {
            "type" : "boolean"
          },
          "helpIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "site" : {
            "$ref" : "#/components/schemas/ResourceLink"
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "turnedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "affectedVpgs" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ResourceLink"
            }
          },
          "affectedZorgs" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ResourceLink"
            }
          }
        },
        "additionalProperties" : false
      },
      "AlertStatusApi" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1, 2, 3, 4 ]
      },
      "AlertTipVisualObject" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "siteName" : {
            "type" : "string",
            "nullable" : true
          },
          "alertLevel" : {
            "$ref" : "#/components/schemas/SystemStateAlertLevel"
          },
          "startTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "AlertsTipVisualObject" : {
        "type" : "object",
        "properties" : {
          "alerts" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/AlertTipVisualObject"
            }
          },
          "hasMore" : {
            "type" : "boolean"
          },
          "totalNumberOfAlerts" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalNumberOfWarnings" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalNumberOfErrors" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "AllowedOperationApi" : {
        "type" : "object",
        "properties" : {
          "isAllowed" : {
            "type" : "boolean"
          },
          "reason" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "AssociatedVmApi" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "AssociatedVpgApi" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "AzureBackupTargetStorageApi" : {
        "type" : "object",
        "properties" : {
          "azureCloud" : {
            "$ref" : "#/components/schemas/AzureCloudEnvironment"
          },
          "azureSa" : {
            "type" : "string",
            "nullable" : true
          },
          "azureAppId" : {
            "type" : "string",
            "nullable" : true
          },
          "azureTenantId" : {
            "type" : "string",
            "nullable" : true
          },
          "path" : {
            "type" : "string",
            "nullable" : true
          },
          "azureAppKey" : {
            "type" : "string"
          },
          "isCoolTiering" : {
            "type" : "boolean"
          },
          "isArchiveTiering" : {
            "type" : "boolean"
          },
          "tieringToCoolInDays" : {
            "type" : "integer",
            "format" : "int32"
          },
          "tieringToArchiveInDays" : {
            "type" : "integer",
            "format" : "int32"
          },
          "isImmutable" : {
            "type" : "boolean"
          },
          "immutabilityPolicy" : {
            "$ref" : "#/components/schemas/ImmutabilityType"
          },
          "immutabilityDays" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "AzureCloudEnvironment" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1 ]
      },
      "BackupCompressionLevel" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1, 2 ]
      },
      "BackupMethod" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1, 2 ]
      },
      "BackupTargetInfoRepositoriesApi" : {
        "type" : "object",
        "properties" : {
          "repositoryIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "repositoryName" : {
            "type" : "string",
            "nullable" : true
          },
          "path" : {
            "type" : "string",
            "nullable" : true
          },
          "connectionType" : {
            "type" : "string",
            "nullable" : true
          },
          "storageType" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "BackupTargetType" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1, 2, 3, 4, 5 ]
      },
      "BackupTier" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]
      },
      "BaseHostNativeApi" : {
        "type" : "object",
        "properties" : {
          "hostIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "hostVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "virtualizationHostName" : {
            "type" : "string",
            "nullable" : true
          },
          "connectionStatus" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "BflrMountDataApi" : {
        "type" : "object",
        "properties" : {
          "vpgIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "vmIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "retentionSetIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "repositoryIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "repositorySiteIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "initialDownloadPath" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "BrowseDataApi" : {
        "type" : "object",
        "properties" : {
          "path" : {
            "type" : "string",
            "nullable" : true
          },
          "pageNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "ButtonAvailabilityApi" : {
        "type" : "object",
        "properties" : {
          "isEnabled" : {
            "type" : "boolean"
          },
          "disableReasonText" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "CatalystBackupTargetStorageApi" : {
        "type" : "object",
        "properties" : {
          "catalystServer" : {
            "type" : "string",
            "nullable" : true
          },
          "catalystStoreName" : {
            "type" : "string",
            "nullable" : true
          },
          "username" : {
            "type" : "string",
            "nullable" : true
          },
          "password" : {
            "type" : "string"
          },
          "path" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "CheckpointApi" : {
        "type" : "object",
        "properties" : {
          "checkpointIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "timeStamp" : {
            "type" : "string",
            "format" : "date-time"
          },
          "tag" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/CheckpointTypeApi"
          }
        },
        "additionalProperties" : false
      },
      "CheckpointTypeApi" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1, 2 ]
      },
      "CloneStartDataApi" : {
        "type" : "object",
        "properties" : {
          "checkpointId" : {
            "type" : "string",
            "nullable" : true
          },
          "datastoreIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "vmIdentifiers" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false
      },
      "CommitPolicyApi" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1, 2 ]
      },
      "CopyVpgSettingsApi" : {
        "type" : "object",
        "properties" : {
          "vpgIdentifier" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "CpuResourceReportApi" : {
        "type" : "object",
        "properties" : {
          "cpuLimitationInMhz" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cpuReservedInMhz" : {
            "type" : "integer",
            "format" : "int32"
          },
          "numberOfvCpus" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cpuUsedInMhz" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "CreateFolderApi" : {
        "type" : "object",
        "properties" : {
          "path" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "DailySchedulingAndRetentionPeriodSettingsVisualObject" : {
        "type" : "object",
        "properties" : {
          "dailyPeriod" : {
            "$ref" : "#/components/schemas/SchedulingAndRetentionPeriodSettingsVisualObject"
          }
        },
        "additionalProperties" : false
      },
      "DatastoreAlertApi" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "level" : {
            "type" : "string",
            "nullable" : true
          },
          "link" : {
            "$ref" : "#/components/schemas/ResourceLink"
          }
        },
        "additionalProperties" : false
      },
      "DatastoreApi" : {
        "type" : "object",
        "properties" : {
          "datastoreIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "datastoreName" : {
            "type" : "string",
            "nullable" : true
          },
          "config" : {
            "$ref" : "#/components/schemas/DatastoreConfigurationApi"
          },
          "stats" : {
            "$ref" : "#/components/schemas/DatastoreStatisticsApi"
          },
          "health" : {
            "$ref" : "#/components/schemas/DatastoreHealthApi"
          }
        },
        "additionalProperties" : false
      },
      "DatastoreClusterNativeApi" : {
        "type" : "object",
        "properties" : {
          "datastoreClusterName" : {
            "type" : "string",
            "nullable" : true
          },
          "datastoreClusterIdentifier" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "DatastoreConfigurationApi" : {
        "type" : "object",
        "properties" : {
          "devices" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "type" : "string"
            }
          },
          "type" : {
            "type" : "string",
            "nullable" : true
          },
          "owningDatastoreCluster" : {
            "$ref" : "#/components/schemas/OwningDatastoreClusterApi"
          }
        },
        "additionalProperties" : false
      },
      "DatastoreHealthApi" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "nullable" : true
          },
          "alerts" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/DatastoreAlertApi"
            }
          }
        },
        "additionalProperties" : false
      },
      "DatastoreInfoApi" : {
        "type" : "object",
        "properties" : {
          "capacityInBytes" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "freeInBytes" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "usedInBytes" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "provisionedInBytes" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "DatastoreNativeApi" : {
        "type" : "object",
        "properties" : {
          "datastoreName" : {
            "type" : "string",
            "nullable" : true
          },
          "datastoreIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "owningDatastoreCluster" : {
            "$ref" : "#/components/schemas/DatastoreClusterNativeApi"
          }
        },
        "additionalProperties" : false
      },
      "DatastoreStatisticsApi" : {
        "type" : "object",
        "properties" : {
          "numVRAs" : {
            "type" : "integer",
            "format" : "int32"
          },
          "numIncomingVMs" : {
            "type" : "integer",
            "format" : "int32"
          },
          "numOutgoingVMs" : {
            "type" : "integer",
            "format" : "int32"
          },
          "availabilityStatus" : {
            "type" : "string",
            "nullable" : true
          },
          "usage" : {
            "$ref" : "#/components/schemas/DatastoreUsageApi"
          }
        },
        "additionalProperties" : false
      },
      "DatastoreUsageApi" : {
        "type" : "object",
        "properties" : {
          "datastore" : {
            "$ref" : "#/components/schemas/DatastoreInfoApi"
          },
          "zerto" : {
            "$ref" : "#/components/schemas/DatastoreZertoUsageInfoApi"
          }
        },
        "additionalProperties" : false
      },
      "DatastoreVolumeTypeUsageApi" : {
        "type" : "object",
        "properties" : {
          "usedInBytes" : {
            "type" : "integer",
            "format" : "int64"
          },
          "provisionedInBytes" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "additionalProperties" : false
      },
      "DatastoreZertoUsageInfoApi" : {
        "type" : "object",
        "properties" : {
          "protected" : {
            "$ref" : "#/components/schemas/DatastoreVolumeTypeUsageApi"
          },
          "recovery" : {
            "$ref" : "#/components/schemas/DatastoreVolumeTypeUsageApi"
          },
          "journal" : {
            "$ref" : "#/components/schemas/DatastoreVolumeTypeUsageApi"
          },
          "scratch" : {
            "$ref" : "#/components/schemas/DatastoreVolumeTypeUsageApi"
          },
          "appliances" : {
            "$ref" : "#/components/schemas/DatastoreVolumeTypeUsageApi"
          },
          "unknown" : {
            "$ref" : "#/components/schemas/DatastoreVolumeTypeUsageApi"
          }
        },
        "additionalProperties" : false
      },
      "DayOfMonth" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 ]
      },
      "DayOfWeek" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1, 2, 3, 4, 5, 6 ]
      },
      "DeleteRetentionSetInfoApi" : {
        "type" : "object",
        "properties" : {
          "fullRetentionSetIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "incrementalRetentionSetsIdentifiers" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false
      },
      "DeleteRetentionSetsApi" : {
        "type" : "object",
        "properties" : {
          "retentionSetsToDelete" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/DeleteRetentionSetInfoApi"
            }
          }
        },
        "additionalProperties" : false
      },
      "DeviceDataApi" : {
        "type" : "object",
        "properties" : {
          "deviceIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "datastoreIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceName" : {
            "type" : "string",
            "nullable" : true
          },
          "sizeInBytes" : {
            "type" : "integer",
            "format" : "int64"
          },
          "hostIdentifiers" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "type" : "string"
            }
          },
          "vmIdentifier" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "DownloadInformationApi" : {
        "type" : "object",
        "properties" : {
          "isDownloadable" : {
            "type" : "boolean"
          },
          "additionalInformation" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "ErrorResponse" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "nullable" : true
          },
          "message" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "ErrorResult" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "string"
          },
          "error_description" : {
            "type" : "string"
          }
        }
      },
      "EventApi" : {
        "type" : "object",
        "properties" : {
          "link" : {
            "$ref" : "#/components/schemas/ResourceLink"
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "occurredOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "eventType" : {
            "$ref" : "#/components/schemas/EventTypeApi"
          },
          "helpLink" : {
            "type" : "string",
            "nullable" : true
          },
          "eventCompletedSuccessfully" : {
            "type" : "boolean"
          },
          "entityType" : {
            "$ref" : "#/components/schemas/EventEntityTypeApi"
          },
          "eventCategory" : {
            "type" : "string",
            "nullable" : true
          },
          "userName" : {
            "type" : "string",
            "nullable" : true
          },
          "relatedEntities" : {
            "$ref" : "#/components/schemas/EventRelatedEntitiesApi"
          }
        },
        "additionalProperties" : false
      },
      "EventEntityTypeApi" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1, 2, 3 ]
      },
      "EventRelatedEntitiesApi" : {
        "type" : "object",
        "properties" : {
          "vpgs" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ResourceLink"
            }
          },
          "sites" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ResourceLink"
            }
          },
          "hosts" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ResourceLink"
            }
          },
          "zorgs" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ResourceLink"
            }
          },
          "alerts" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ResourceLink"
            }
          },
          "flrSessions" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ResourceLink"
            }
          },
          "repositories" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ResourceLink"
            }
          }
        },
        "additionalProperties" : false
      },
      "EventTypeApi" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112 ]
      },
      "ExpireTimeUnits" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1, 2, 3 ]
      },
      "ExportedVpgSettingsApi" : {
        "type" : "object",
        "properties" : {
          "sourceSiteName" : {
            "type" : "string",
            "nullable" : true
          },
          "targetSiteName" : {
            "type" : "string",
            "nullable" : true
          },
          "vpgIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "vpgSettingsIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "basic" : {
            "$ref" : "#/components/schemas/VpgSettingsBasicApi"
          },
          "scripting" : {
            "$ref" : "#/components/schemas/VpgSettingsScriptsApi"
          },
          "bootGroups" : {
            "$ref" : "#/components/schemas/VpgSettingsBootGroupsApi"
          },
          "journal" : {
            "$ref" : "#/components/schemas/VpgSettingsJournalApi"
          },
          "scratch" : {
            "$ref" : "#/components/schemas/VpgSettingsScratchApi"
          },
          "longTermRetention" : {
            "$ref" : "#/components/schemas/VpgSettingsLtrApi"
          },
          "recovery" : {
            "$ref" : "#/components/schemas/VpgSettingsRecoveryApi"
          },
          "networks" : {
            "$ref" : "#/components/schemas/VpgSettingsNetworksApi"
          },
          "vms" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/VpgSettingsVmApi"
            }
          },
          "protected" : {
            "$ref" : "#/components/schemas/VpgSettingsProtectedApi"
          }
        },
        "additionalProperties" : false
      },
      "FailOverTestApi" : {
        "type" : "object",
        "properties" : {
          "stage" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "FailOverTestStartDataApi" : {
        "type" : "object",
        "properties" : {
          "checkpointIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "vmIdentifiers" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false
      },
      "FailoverCommitDataApi" : {
        "type" : "object",
        "properties" : {
          "isReverseProtection" : {
            "type" : "boolean",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "FailoverDataApi" : {
        "type" : "object",
        "properties" : {
          "checkpointIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "commitPolicy" : {
            "$ref" : "#/components/schemas/CommitPolicyApi"
          },
          "timeToWaitBeforeShutdownInSec" : {
            "type" : "integer",
            "format" : "int32"
          },
          "shutdownPolicy" : {
            "$ref" : "#/components/schemas/FailoverShutdownPolicyApi"
          },
          "isReverseProtection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "vmIdentifiers" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false
      },
      "FailoverShutdownPolicyApi" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1, 2 ]
      },
      "FlrDownloadDataApi" : {
        "type" : "object",
        "properties" : {
          "pathList" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false
      },
      "FlrMountDataApi" : {
        "type" : "object",
        "properties" : {
          "jflr" : {
            "$ref" : "#/components/schemas/JflrMountDataApi"
          },
          "bflr" : {
            "$ref" : "#/components/schemas/BflrMountDataApi"
          }
        },
        "additionalProperties" : false
      },
      "FlrSessionInformationApi" : {
        "type" : "object",
        "properties" : {
          "flrSessionStatus" : {
            "type" : "string",
            "nullable" : true
          },
          "flrSessionIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "flrSessionType" : {
            "type" : "string",
            "nullable" : true
          },
          "vmIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "vmVolumeIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "vpgIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "checkpointIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "mountTime" : {
            "type" : "string",
            "nullable" : true
          },
          "selectedPath" : {
            "type" : "string",
            "nullable" : true
          },
          "numberOfRelatedRunningTasks" : {
            "type" : "integer",
            "format" : "int32"
          },
          "repositoryIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "retentionSetIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "siteIdentifier" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "FolderNativeApi" : {
        "type" : "object",
        "properties" : {
          "folderName" : {
            "type" : "string",
            "nullable" : true
          },
          "folderIdentifier" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "HistoryStatusApi" : {
        "type" : "object",
        "properties" : {
          "actualHistoryInMinutes" : {
            "type" : "integer",
            "format" : "int32"
          },
          "configuredHistoryInMinutes" : {
            "type" : "integer",
            "format" : "int32"
          },
          "earliestCheckpoint" : {
            "$ref" : "#/components/schemas/CheckpointApi"
          }
        },
        "additionalProperties" : false
      },
      "HostClusterNativeApi" : {
        "type" : "object",
        "properties" : {
          "clusterIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "virtualizationClusterName" : {
            "type" : "string",
            "nullable" : true
          },
          "associatedHosts" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/BaseHostNativeApi"
            }
          }
        },
        "additionalProperties" : false
      },
      "HostNativeApi" : {
        "type" : "object",
        "properties" : {
          "associatedDatastores" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/DatastoreNativeApi"
            }
          },
          "associatedNetworks" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/NetworkNativeApi"
            }
          },
          "hostIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "hostVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "virtualizationHostName" : {
            "type" : "string",
            "nullable" : true
          },
          "connectionStatus" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "ImmutabilityType" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1, 2 ]
      },
      "ImportVpgSettingsApi" : {
        "type" : "object",
        "properties" : {
          "exportedVpgSettingsApi" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ExportedVpgSettingsApi"
            }
          },
          "vpgNames" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false
      },
      "ItemApi" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "path" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ItemTypeEnumApi"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "additionalProperties" : false
      },
      "ItemTypeEnumApi" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 1, 2 ]
      },
      "JflrMountDataApi" : {
        "type" : "object",
        "properties" : {
          "vpgIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "vmIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "checkpointIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "initialDownloadPath" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "JournalHealthStatusApi" : {
        "type" : "object",
        "properties" : {
          "actualFailSafeHistory" : {
            "type" : "integer",
            "format" : "int32"
          },
          "configuredFailSafeHistory" : {
            "type" : "integer",
            "format" : "int32"
          },
          "failSafeDescription" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "JournalVMRestoreCommitPolicyApi" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1, 2 ]
      },
      "JournalVMRestoreDataApi" : {
        "type" : "object",
        "properties" : {
          "vpgIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "restoredVmName" : {
            "type" : "string",
            "nullable" : true
          },
          "checkpointIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "commitPolicy" : {
            "$ref" : "#/components/schemas/JournalVMRestoreCommitPolicyApi"
          },
          "shutdownPolicy" : {
            "$ref" : "#/components/schemas/JournalVMRestoreShutdownPolicyApi"
          },
          "timeToWaitBeforeContinueInSeconds" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "journalVMRestoreSettings" : {
            "$ref" : "#/components/schemas/JournalVMRestoreSettingsDataApi"
          }
        },
        "additionalProperties" : false
      },
      "JournalVMRestoreDatastoreDataApi" : {
        "type" : "object",
        "properties" : {
          "datastoreIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "isThin" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : false
      },
      "JournalVMRestoreHypervisorSettingsDataApi" : {
        "type" : "object",
        "properties" : {
          "dnsSuffix" : {
            "type" : "string",
            "nullable" : true
          },
          "ipConfig" : {
            "$ref" : "#/components/schemas/JournalVMRestoreIpSettingsDataApi"
          },
          "networkIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "shouldReplaceMacAddress" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : false
      },
      "JournalVMRestoreIpSettingsDataApi" : {
        "type" : "object",
        "properties" : {
          "gateway" : {
            "type" : "string",
            "nullable" : true
          },
          "isDhcp" : {
            "type" : "boolean"
          },
          "primaryDns" : {
            "type" : "string",
            "nullable" : true
          },
          "secondaryDns" : {
            "type" : "string",
            "nullable" : true
          },
          "staticIp" : {
            "type" : "string",
            "nullable" : true
          },
          "subnetMask" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "JournalVMRestoreNicDataApi" : {
        "type" : "object",
        "properties" : {
          "hypervisor" : {
            "$ref" : "#/components/schemas/JournalVMRestoreHypervisorSettingsDataApi"
          },
          "nicIdentifier" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "JournalVMRestoreSettingsDataApi" : {
        "type" : "object",
        "properties" : {
          "datastoreIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "nics" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/JournalVMRestoreNicDataApi"
            }
          },
          "volumes" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/JournalVMRestoreVolumeDataApi"
            }
          }
        },
        "additionalProperties" : false
      },
      "JournalVMRestoreShutdownPolicyApi" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1, 2 ]
      },
      "JournalVMRestoreVolumeDataApi" : {
        "type" : "object",
        "properties" : {
          "datastore" : {
            "$ref" : "#/components/schemas/JournalVMRestoreDatastoreDataApi"
          },
          "volumeIdentifier" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "LicenseApi" : {
        "type" : "object",
        "properties" : {
          "details" : {
            "$ref" : "#/components/schemas/LicenseDetailsApi"
          },
          "usage" : {
            "$ref" : "#/components/schemas/LicenseUsageApi"
          }
        },
        "additionalProperties" : false
      },
      "LicenseDetailsApi" : {
        "type" : "object",
        "properties" : {
          "licenseKey" : {
            "type" : "string",
            "nullable" : true
          },
          "licenseType" : {
            "type" : "string",
            "nullable" : true
          },
          "expiryTime" : {
            "type" : "string",
            "nullable" : true
          },
          "maxVms" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "LicenseKeyApi" : {
        "type" : "object",
        "properties" : {
          "licenseKey" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "LicenseSiteUsageApi" : {
        "type" : "object",
        "properties" : {
          "siteIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "siteName" : {
            "type" : "string",
            "nullable" : true
          },
          "protectedVmsCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "LicenseUsageApi" : {
        "type" : "object",
        "properties" : {
          "sitesUsage" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/LicenseSiteUsageApi"
            }
          },
          "totalVmsCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "ListItemsResultApi" : {
        "type" : "object",
        "properties" : {
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ItemApi"
            }
          }
        },
        "additionalProperties" : false
      },
      "LocalSiteApi" : {
        "type" : "object",
        "properties" : {
          "link" : {
            "$ref" : "#/components/schemas/ResourceLink"
          },
          "siteName" : {
            "type" : "string",
            "nullable" : true
          },
          "location" : {
            "type" : "string",
            "nullable" : true
          },
          "version" : {
            "type" : "string",
            "nullable" : true
          },
          "displayVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "zvmApiVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "contactEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "contactName" : {
            "type" : "string",
            "nullable" : true
          },
          "contactPhone" : {
            "type" : "string",
            "nullable" : true
          },
          "isReplicationToSelfEnabled" : {
            "type" : "boolean"
          },
          "utcOffsetInMinutes" : {
            "type" : "integer",
            "format" : "int32"
          },
          "siteType" : {
            "type" : "string",
            "nullable" : true
          },
          "ipAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "bandwidthThrottlingInMBs" : {
            "type" : "number",
            "format" : "double"
          },
          "siteTypeVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "platformInformation" : {
            "$ref" : "#/components/schemas/PlatformInformationApi"
          },
          "isLoginBannerEnabled" : {
            "type" : "boolean"
          },
          "loginBanner" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "LoginBannerSettingsApi" : {
        "type" : "object",
        "properties" : {
          "isLoginBannerEnabled" : {
            "type" : "boolean"
          },
          "loginBanner" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "LtrBackupCompressionSettingsApi" : {
        "type" : "object",
        "properties" : {
          "compressionLevel" : {
            "$ref" : "#/components/schemas/BackupCompressionLevel"
          }
        },
        "additionalProperties" : false
      },
      "LtrDailySchedulerPolicyApi" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean"
          },
          "retentionDuration" : {
            "$ref" : "#/components/schemas/LtrDurationApi"
          }
        },
        "additionalProperties" : false
      },
      "LtrDurationApi" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "durationType" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "LtrMonthlySchedulerPolicyApi" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean"
          },
          "dayOfWeek" : {
            "type" : "string",
            "nullable" : true
          },
          "weekOfMonth" : {
            "type" : "string",
            "nullable" : true
          },
          "dayOfMonth" : {
            "type" : "string",
            "nullable" : true
          },
          "retentionType" : {
            "type" : "string",
            "nullable" : true
          },
          "retentionDuration" : {
            "$ref" : "#/components/schemas/LtrDurationApi"
          }
        },
        "additionalProperties" : false
      },
      "LtrRetryApi" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "number" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "intervalInMinutes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "LtrSchedulerPolicyApi" : {
        "type" : "object",
        "properties" : {
          "daily" : {
            "$ref" : "#/components/schemas/LtrDailySchedulerPolicyApi"
          },
          "weekly" : {
            "$ref" : "#/components/schemas/LtrWeeklySchedulerPolicyApi"
          },
          "monthly" : {
            "$ref" : "#/components/schemas/LtrMonthlySchedulerPolicyApi"
          },
          "yearly" : {
            "$ref" : "#/components/schemas/LtrYearlySchedulerPolicyApi"
          }
        },
        "additionalProperties" : false
      },
      "LtrVpgStatusApi" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1, 2 ]
      },
      "LtrWeeklySchedulerPolicyApi" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean"
          },
          "dayOfWeek" : {
            "type" : "string",
            "nullable" : true
          },
          "retentionType" : {
            "type" : "string",
            "nullable" : true
          },
          "retentionDuration" : {
            "$ref" : "#/components/schemas/LtrDurationApi"
          }
        },
        "additionalProperties" : false
      },
      "LtrYearlySchedulerPolicyApi" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean"
          },
          "dayOfWeek" : {
            "type" : "string",
            "nullable" : true
          },
          "dayOfYear" : {
            "type" : "string",
            "nullable" : true
          },
          "monthOfYear" : {
            "type" : "string",
            "nullable" : true
          },
          "dayOfMonth" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "retentionDuration" : {
            "$ref" : "#/components/schemas/LtrDurationApi"
          }
        },
        "additionalProperties" : false
      },
      "MemoryResourceReportApi" : {
        "type" : "object",
        "properties" : {
          "activeGuestMemoryInMB" : {
            "type" : "integer",
            "format" : "int64"
          },
          "consumedHostMemoryInMB" : {
            "type" : "integer",
            "format" : "int64"
          },
          "memoryInMB" : {
            "type" : "integer",
            "format" : "int32"
          },
          "memoryLimitationInMB" : {
            "type" : "integer",
            "format" : "int32"
          },
          "memoryReservedInMB" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "MetricsApi" : {
        "type" : "object",
        "properties" : {
          "nonEncryptedData" : {
            "type" : "integer",
            "format" : "int64"
          },
          "encryptedData" : {
            "type" : "integer",
            "format" : "int64"
          },
          "trendChangeLevel" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "MetricsVmApi" : {
        "type" : "object",
        "properties" : {
          "link" : {
            "$ref" : "#/components/schemas/RwVmResourceLink"
          },
          "associatedVpgs" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/AssociatedVpgApi"
            }
          },
          "encryptionMetrics" : {
            "$ref" : "#/components/schemas/MetricsApi"
          }
        },
        "additionalProperties" : false
      },
      "MetricsVolumeApi" : {
        "type" : "object",
        "properties" : {
          "volumeIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "associatedVm" : {
            "$ref" : "#/components/schemas/AssociatedVmApi"
          },
          "associatedVpgs" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/AssociatedVpgApi"
            }
          },
          "encryptionMetrics" : {
            "$ref" : "#/components/schemas/MetricsApi"
          }
        },
        "additionalProperties" : false
      },
      "MetricsVpgApi" : {
        "type" : "object",
        "properties" : {
          "link" : {
            "$ref" : "#/components/schemas/RwResourceLink"
          },
          "encryptionMetrics" : {
            "$ref" : "#/components/schemas/MetricsApi"
          }
        },
        "additionalProperties" : false
      },
      "MonthlySchedulingAndRetentionPeriodSettingsVisualObject" : {
        "type" : "object",
        "properties" : {
          "monthlyPeriod" : {
            "$ref" : "#/components/schemas/SchedulingAndRetentionPeriodSettingsVisualObject"
          },
          "triggerType" : {
            "$ref" : "#/components/schemas/MonthlyTriggerType"
          },
          "weekOfMonth" : {
            "$ref" : "#/components/schemas/WeekOfMonth"
          },
          "dayOfWeek" : {
            "$ref" : "#/components/schemas/DayOfWeek"
          },
          "dayOfMonth" : {
            "$ref" : "#/components/schemas/DayOfMonth"
          }
        },
        "additionalProperties" : false
      },
      "MonthlyTriggerType" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1 ]
      },
      "MoveCommitVpgDataApi" : {
        "type" : "object",
        "properties" : {
          "reverseProtection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "keepSourceVms" : {
            "type" : "boolean",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "MoveVpgDataApi" : {
        "type" : "object",
        "properties" : {
          "commitPolicy" : {
            "$ref" : "#/components/schemas/CommitPolicyApi"
          },
          "commitPolicyTimeout" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "forceShutdown" : {
            "type" : "boolean",
            "nullable" : true
          },
          "reverseProtection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "keepSourceVms" : {
            "type" : "boolean",
            "nullable" : true
          },
          "continueOnPreScriptFailure" : {
            "type" : "boolean",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "NFSBackupTargetStorageObjectApi" : {
        "type" : "object",
        "properties" : {
          "path" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "NamedEntityApi" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "identifier" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "NetworkNativeApi" : {
        "type" : "object",
        "properties" : {
          "virtualizationNetworkName" : {
            "type" : "string",
            "nullable" : true
          },
          "networkIdentifier" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "NicNativeApi" : {
        "type" : "object",
        "properties" : {
          "nicIdentifier" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "OrgVdcNativeApi" : {
        "type" : "object",
        "properties" : {
          "orgVdcName" : {
            "type" : "string",
            "nullable" : true
          },
          "identifier" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "OwningDatastoreClusterApi" : {
        "type" : "object",
        "properties" : {
          "datastoreClusterIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "datastoreClusterName" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "PairDataApi" : {
        "type" : "object",
        "properties" : {
          "hostName" : {
            "type" : "string",
            "nullable" : true
          },
          "port" : {
            "type" : "integer",
            "format" : "int32"
          },
          "token" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "PairingTokenResult" : {
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string",
            "nullable" : true
          },
          "utcExpirationDate" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "PairingVisualStatusApi" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1, 2 ]
      },
      "PathInformationApi" : {
        "type" : "object",
        "properties" : {
          "mainPathItem" : {
            "$ref" : "#/components/schemas/PathItemInformationApi"
          },
          "pathItems" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/PathItemInformationApi"
            }
          }
        },
        "additionalProperties" : false
      },
      "PathItemInformationApi" : {
        "type" : "object",
        "properties" : {
          "path" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "nullable" : true
          },
          "isBrowsable" : {
            "type" : "boolean"
          },
          "downloadInformation" : {
            "$ref" : "#/components/schemas/DownloadInformationApi"
          },
          "sizeInBytes" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "creationTime" : {
            "type" : "string",
            "nullable" : true
          },
          "lastAccessTime" : {
            "type" : "string",
            "nullable" : true
          },
          "lastWriteTime" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "PeerSiteApi" : {
        "type" : "object",
        "properties" : {
          "link" : {
            "$ref" : "#/components/schemas/ResourceLink"
          },
          "peerSiteName" : {
            "type" : "string",
            "nullable" : true
          },
          "pairingStatus" : {
            "$ref" : "#/components/schemas/PairingVisualStatusApi"
          },
          "location" : {
            "type" : "string",
            "nullable" : true
          },
          "hostName" : {
            "type" : "string",
            "nullable" : true
          },
          "port" : {
            "type" : "integer",
            "format" : "int32"
          },
          "provisionedStorage" : {
            "type" : "integer",
            "format" : "int64"
          },
          "usedStorage" : {
            "type" : "integer",
            "format" : "int64"
          },
          "incomingThroughputInMb" : {
            "type" : "number",
            "format" : "double"
          },
          "outgoingBandWidth" : {
            "type" : "number",
            "format" : "double"
          },
          "version" : {
            "type" : "string",
            "nullable" : true
          },
          "siteType" : {
            "type" : "string",
            "nullable" : true
          },
          "regionName" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "PerformanceResourceReportApi" : {
        "type" : "object",
        "properties" : {
          "bandwidthInBps" : {
            "type" : "number",
            "format" : "double"
          },
          "throughputInBps" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "additionalProperties" : false
      },
      "PlatformInformationApi" : {
        "type" : "object",
        "properties" : {
          "azure" : {
            "$ref" : "#/components/schemas/PlatformInformationAzureApi"
          }
        },
        "additionalProperties" : false
      },
      "PlatformInformationAzureApi" : {
        "type" : "object",
        "properties" : {
          "regionName" : {
            "type" : "string",
            "nullable" : true
          },
          "subscription" : {
            "type" : "string",
            "nullable" : true
          },
          "resourceGroup" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "PointInTimeApi" : {
        "type" : "object",
        "properties" : {
          "checkpoint" : {
            "$ref" : "#/components/schemas/CheckpointApi"
          },
          "retentionSet" : {
            "$ref" : "#/components/schemas/RetentionSetApi"
          },
          "canMount" : {
            "$ref" : "#/components/schemas/AllowedOperationApi"
          }
        },
        "additionalProperties" : false
      },
      "PointInTimeStatsApi" : {
        "type" : "object",
        "properties" : {
          "earliest" : {
            "$ref" : "#/components/schemas/PointInTimeApi"
          },
          "latest" : {
            "$ref" : "#/components/schemas/PointInTimeApi"
          }
        },
        "additionalProperties" : false
      },
      "ProtectedComputeResourceReportApi" : {
        "type" : "object",
        "properties" : {
          "clusterName" : {
            "type" : "string",
            "nullable" : true
          },
          "hostName" : {
            "type" : "string",
            "nullable" : true
          },
          "vraName" : {
            "type" : "string",
            "nullable" : true
          },
          "orgVdcName" : {
            "type" : "string",
            "nullable" : true
          },
          "resourcePoolName" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "ProtectedSiteResourceReportApi" : {
        "type" : "object",
        "properties" : {
          "compute" : {
            "$ref" : "#/components/schemas/ProtectedComputeResourceReportApi"
          },
          "storage" : {
            "$ref" : "#/components/schemas/ProtectedStorageResourceReportApi"
          },
          "vmInfo" : {
            "$ref" : "#/components/schemas/VmInfoResourceReportApi"
          },
          "siteName" : {
            "type" : "string",
            "nullable" : true
          },
          "vcdOrgName" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "ProtectedStorageResourceReportApi" : {
        "type" : "object",
        "properties" : {
          "numberOfVolumes" : {
            "type" : "integer",
            "format" : "int32"
          },
          "volumesProvisionedStorageInGB" : {
            "type" : "number",
            "format" : "double"
          },
          "volumesUsedStorageInGB" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "additionalProperties" : false
      },
      "ProtectionGroupAlertStatus" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1, 2, 3, 4 ]
      },
      "RecoverableVmApi" : {
        "type" : "object",
        "properties" : {
          "vm" : {
            "$ref" : "#/components/schemas/NamedEntityApi"
          },
          "vpg" : {
            "$ref" : "#/components/schemas/NamedEntityApi"
          },
          "isSearchable" : {
            "type" : "boolean"
          },
          "isVmExist" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : false
      },
      "RecoverableVmsApi" : {
        "type" : "object",
        "properties" : {
          "vms" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/RecoverableVmApi"
            }
          }
        },
        "additionalProperties" : false
      },
      "RecoveryComputeResourceReportApi" : {
        "type" : "object",
        "properties" : {
          "failoverOrMoveInstanceType" : {
            "type" : "string",
            "nullable" : true
          },
          "failoverOrMoveInstanceFamily" : {
            "type" : "string",
            "nullable" : true
          },
          "failoverTestInstanceType" : {
            "type" : "string",
            "nullable" : true
          },
          "failoverTestInstanceFamily" : {
            "type" : "string",
            "nullable" : true
          },
          "clusterName" : {
            "type" : "string",
            "nullable" : true
          },
          "hostName" : {
            "type" : "string",
            "nullable" : true
          },
          "vraName" : {
            "type" : "string",
            "nullable" : true
          },
          "orgVdcName" : {
            "type" : "string",
            "nullable" : true
          },
          "resourcePoolName" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "RecoveryReportApi" : {
        "type" : "object",
        "properties" : {
          "recoveryOperationIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "general" : {
            "$ref" : "#/components/schemas/RecoveryReportsGeneralApi"
          },
          "recoverySettings" : {
            "$ref" : "#/components/schemas/RecoverySettingsReportApi"
          }
        },
        "additionalProperties" : false
      },
      "RecoveryReportsGeneralApi" : {
        "type" : "object",
        "properties" : {
          "vpgIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "vpgName" : {
            "type" : "string",
            "nullable" : true
          },
          "recoveryType" : {
            "type" : "string",
            "nullable" : true
          },
          "protectedSiteName" : {
            "type" : "string",
            "nullable" : true
          },
          "recoverySiteName" : {
            "type" : "string",
            "nullable" : true
          },
          "startTime" : {
            "type" : "string",
            "nullable" : true
          },
          "endTime" : {
            "type" : "string",
            "nullable" : true
          },
          "pointInTime" : {
            "type" : "string",
            "nullable" : true
          },
          "rtoInSeconds" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "nullable" : true
          },
          "initiatedBy" : {
            "type" : "string",
            "nullable" : true
          },
          "notes" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "RecoverySettingVmVolumeApi" : {
        "type" : "object",
        "properties" : {
          "volumeName" : {
            "type" : "string",
            "nullable" : true
          },
          "datastoreName" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "RecoverySettingsReportApi" : {
        "type" : "object",
        "properties" : {
          "vpg" : {
            "$ref" : "#/components/schemas/RecoverySettingsVpgApi"
          },
          "vms" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/RecoverySettingsVmApi"
            }
          },
          "steps" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/RecoverySettingsStepApi"
            }
          }
        },
        "additionalProperties" : false
      },
      "RecoverySettingsStepApi" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "result" : {
            "type" : "string",
            "nullable" : true
          },
          "startTime" : {
            "type" : "string",
            "nullable" : true
          },
          "endTime" : {
            "type" : "string",
            "nullable" : true
          },
          "executionTime" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "RecoverySettingsVmApi" : {
        "type" : "object",
        "properties" : {
          "vmName" : {
            "type" : "string",
            "nullable" : true
          },
          "hostName" : {
            "type" : "string",
            "nullable" : true
          },
          "datastoreName" : {
            "type" : "string",
            "nullable" : true
          },
          "folderName" : {
            "type" : "string",
            "nullable" : true
          },
          "networkNames" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "type" : "string"
            }
          },
          "volumes" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/RecoverySettingVmVolumeApi"
            }
          }
        },
        "additionalProperties" : false
      },
      "RecoverySettingsVpgApi" : {
        "type" : "object",
        "properties" : {
          "defaultHostName" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultDatastoreName" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultNetworkName" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "RecoverySiteResourceReportApi" : {
        "type" : "object",
        "properties" : {
          "compute" : {
            "$ref" : "#/components/schemas/RecoveryComputeResourceReportApi"
          },
          "storage" : {
            "$ref" : "#/components/schemas/RecoveryStorageResourceReportApi"
          },
          "siteName" : {
            "type" : "string",
            "nullable" : true
          },
          "vcdOrgName" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "RecoveryStorageResourceReportApi" : {
        "type" : "object",
        "properties" : {
          "journalProvisionedStorageInGB" : {
            "type" : "number",
            "format" : "double"
          },
          "journalUsedStorageInGB" : {
            "type" : "number",
            "format" : "double"
          },
          "datastoreName" : {
            "type" : "string",
            "nullable" : true
          },
          "storagePolicyName" : {
            "type" : "string",
            "nullable" : true
          },
          "volumesProvisionedStorageInGB" : {
            "type" : "number",
            "format" : "double"
          },
          "volumesUsedStorageInGB" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "additionalProperties" : false
      },
      "RepositoriesSettingsApi" : {
        "type" : "object",
        "properties" : {
          "repositoryIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "repositoryName" : {
            "type" : "string",
            "nullable" : true
          },
          "storageType" : {
            "$ref" : "#/components/schemas/StorageType"
          },
          "connectionType" : {
            "$ref" : "#/components/schemas/BackupTargetType"
          },
          "defaultRepository" : {
            "type" : "boolean"
          },
          "isIndexRepository" : {
            "type" : "boolean"
          },
          "totalCapacityGB" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "usedCapacityGB" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "freeCapacityGB" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "repositoryState" : {
            "$ref" : "#/components/schemas/RepositoryStateApi"
          },
          "smb" : {
            "$ref" : "#/components/schemas/SMBBackupTargetStorageApi"
          },
          "s3" : {
            "$ref" : "#/components/schemas/AWSS3BackupTargetStorageApi"
          },
          "nfs" : {
            "$ref" : "#/components/schemas/NFSBackupTargetStorageObjectApi"
          },
          "catalyst" : {
            "$ref" : "#/components/schemas/CatalystBackupTargetStorageApi"
          },
          "azure" : {
            "$ref" : "#/components/schemas/AzureBackupTargetStorageApi"
          },
          "s3-Compatible" : {
            "$ref" : "#/components/schemas/S3CompatibleStorageObjectApi"
          }
        },
        "additionalProperties" : false
      },
      "RepositoryStateApi" : {
        "type" : "object",
        "properties" : {
          "allocatedSpaceInGB" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "availableSpaceInGB" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "usedSpaceInGB" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "ResourceGroupApi" : {
        "type" : "object",
        "properties" : {
          "internalId" : {
            "type" : "string",
            "nullable" : true
          },
          "resourceGroupName" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "ResourceLink" : {
        "type" : "object",
        "properties" : {
          "rel" : {
            "type" : "string",
            "nullable" : true
          },
          "href" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "nullable" : true
          },
          "identifier" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "ResourcePoolNativeApi" : {
        "type" : "object",
        "properties" : {
          "resourcepoolName" : {
            "type" : "string",
            "nullable" : true
          },
          "resourcePoolIdentifier" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "RestoreVmApi" : {
        "type" : "object",
        "properties" : {
          "vmIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "retentionSetIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "hostIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "datastoreIdentifier" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "RetentionSetActionsInformationApi" : {
        "type" : "object",
        "properties" : {
          "deleteAction" : {
            "$ref" : "#/components/schemas/ButtonAvailabilityApi"
          }
        },
        "additionalProperties" : false
      },
      "RetentionSetApi" : {
        "type" : "object",
        "properties" : {
          "repositoryIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "retentionSetIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "timeStamp" : {
            "type" : "string",
            "nullable" : true
          },
          "isApplicationAware" : {
            "type" : "boolean"
          },
          "zorgIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "numberOfVolumes" : {
            "type" : "integer",
            "format" : "int32"
          },
          "repositorySiteIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "tier" : {
            "$ref" : "#/components/schemas/BackupTier"
          }
        },
        "additionalProperties" : false
      },
      "RetentionSetImmutabilityApi" : {
        "type" : "object",
        "properties" : {
          "immutabilityState" : {
            "type" : "string",
            "nullable" : true
          },
          "immutabilityExpiryTime" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "RetentionSetInfoApi" : {
        "type" : "object",
        "properties" : {
          "retentionSetIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "backupMethod" : {
            "type" : "string",
            "nullable" : true
          },
          "vpg" : {
            "$ref" : "#/components/schemas/NamedEntityApi"
          },
          "repository" : {
            "$ref" : "#/components/schemas/NamedEntityApi"
          },
          "zorg" : {
            "$ref" : "#/components/schemas/NamedEntityApi"
          },
          "pointInTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "expiryDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "actionType" : {
            "type" : "string",
            "nullable" : true
          },
          "statusType" : {
            "type" : "string",
            "nullable" : true
          },
          "isAppAware" : {
            "type" : "boolean"
          },
          "sizeInKB" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "aggregatedSizeInKB" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "numberOfIncrementals" : {
            "type" : "integer",
            "format" : "int32"
          },
          "isVpgExists" : {
            "type" : "boolean"
          },
          "retentionSetImmutability" : {
            "$ref" : "#/components/schemas/RetentionSetImmutabilityApi"
          },
          "retentionSetActionsInformation" : {
            "$ref" : "#/components/schemas/RetentionSetActionsInformationApi"
          }
        },
        "additionalProperties" : false
      },
      "RetentionSetVmSettingsApi" : {
        "type" : "object",
        "properties" : {
          "ltrVmIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "repositoryIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "retentionSetIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "hostIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "volumes" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/VmVolumeSettingsApi"
            }
          },
          "nics" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/VmNicSettingsApi"
            }
          }
        },
        "additionalProperties" : false
      },
      "RetentionSetsApi" : {
        "type" : "object",
        "properties" : {
          "retentionSets" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/RetentionSetApi"
            }
          },
          "ltrVmIdentifier" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "RetentionSetsInfoApi" : {
        "type" : "object",
        "properties" : {
          "retentionSets" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/RetentionSetInfoApi"
            }
          }
        },
        "additionalProperties" : false
      },
      "RetentionStartInfoApi" : {
        "type" : "object",
        "properties" : {
          "checkpointId" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "RwResourceLink" : {
        "type" : "object",
        "properties" : {
          "rel" : {
            "type" : "string",
            "nullable" : true
          },
          "href" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "nullable" : true
          },
          "identifier" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "RwVmResourceLink" : {
        "type" : "object",
        "properties" : {
          "instance_identifier" : {
            "type" : "string",
            "nullable" : true
          },
          "rel" : {
            "type" : "string",
            "nullable" : true
          },
          "href" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "nullable" : true
          },
          "identifier" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "RwVolumeDatastoreApi" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "RwVolumePathApi" : {
        "type" : "object",
        "properties" : {
          "full" : {
            "type" : "string",
            "nullable" : true
          },
          "relative" : {
            "type" : "string",
            "nullable" : true
          },
          "fileName" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "RwVolumeSizeApi" : {
        "type" : "object",
        "properties" : {
          "usedInBytes" : {
            "type" : "integer",
            "format" : "int64"
          },
          "provisionedInBytes" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "additionalProperties" : false
      },
      "S3CompatibleStorageObjectApi" : {
        "type" : "object",
        "properties" : {
          "s3Region" : {
            "type" : "string",
            "nullable" : true
          },
          "s3EndpointUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "s3BucketName" : {
            "type" : "string",
            "nullable" : true
          },
          "s3AccessKey" : {
            "type" : "string",
            "nullable" : true
          },
          "s3SecretKey" : {
            "type" : "string"
          },
          "path" : {
            "type" : "string",
            "nullable" : true
          },
          "isImmutable" : {
            "type" : "boolean"
          },
          "immutabilityPolicy" : {
            "$ref" : "#/components/schemas/ImmutabilityType"
          },
          "immutabilityDays" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "SMBBackupTargetStorageApi" : {
        "type" : "object",
        "properties" : {
          "path" : {
            "type" : "string",
            "nullable" : true
          },
          "userName" : {
            "type" : "string",
            "nullable" : true
          },
          "password" : {
            "type" : "string"
          }
        },
        "additionalProperties" : false
      },
      "SchedulePeriodType" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1, 2, 3 ]
      },
      "SchedulingAndRetentionPeriodSettingsVisualObject" : {
        "type" : "object",
        "properties" : {
          "active" : {
            "type" : "boolean"
          },
          "periodType" : {
            "$ref" : "#/components/schemas/SchedulePeriodType"
          },
          "backupStartTimeOfDayInMinutes" : {
            "type" : "integer",
            "format" : "int32"
          },
          "backupMethod" : {
            "$ref" : "#/components/schemas/BackupMethod"
          },
          "expireAfterValue" : {
            "type" : "number",
            "format" : "double"
          },
          "expireAfterUnit" : {
            "$ref" : "#/components/schemas/ExpireTimeUnits"
          }
        },
        "additionalProperties" : false
      },
      "SchedulingAndRetentionSettingsVisualObject" : {
        "type" : "object",
        "properties" : {
          "dailySettings" : {
            "$ref" : "#/components/schemas/DailySchedulingAndRetentionPeriodSettingsVisualObject"
          },
          "weeklySettings" : {
            "$ref" : "#/components/schemas/WeeklySchedulingAndRetentionPeriodSettingsVisualObject"
          },
          "monthlySettings" : {
            "$ref" : "#/components/schemas/MonthlySchedulingAndRetentionPeriodSettingsVisualObject"
          },
          "yearlySettings" : {
            "$ref" : "#/components/schemas/YearlySchedulingAndRetentionPeriodSettingsVisualObject"
          }
        },
        "additionalProperties" : false
      },
      "SecurityGroupApi" : {
        "type" : "object",
        "properties" : {
          "securityGroupIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "securityGroupName" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "ServiceProfileApi" : {
        "type" : "object",
        "properties" : {
          "link" : {
            "$ref" : "#/components/schemas/ResourceLink"
          },
          "serviceProfileName" : {
            "type" : "string",
            "nullable" : true
          },
          "rpo" : {
            "type" : "string",
            "format" : "date-span"
          },
          "history" : {
            "type" : "string",
            "format" : "date-span"
          },
          "maxJournalSizeInPercent" : {
            "type" : "integer",
            "format" : "int32"
          },
          "testInterval" : {
            "type" : "string",
            "format" : "date-span"
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "journalWarningThresholdInPercent" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "SettingsApi" : {
        "type" : "object",
        "properties" : {
          "encryptionDetectionEnabled" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : false
      },
      "StopFailoverTestDataApi" : {
        "type" : "object",
        "properties" : {
          "failoverTestSuccess" : {
            "type" : "boolean",
            "nullable" : true
          },
          "failoverTestSummary" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "StoragePolicyApi" : {
        "type" : "object",
        "properties" : {
          "storagePolicyIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "storagePolicyName" : {
            "type" : "string",
            "nullable" : true
          },
          "isEnabled" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : false
      },
      "StorageType" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 ]
      },
      "Stream" : {
        "type" : "object",
        "properties" : {
          "canRead" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "canWrite" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "canSeek" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "canTimeout" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "length" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true
          },
          "position" : {
            "type" : "integer",
            "format" : "int64"
          },
          "readTimeout" : {
            "type" : "integer",
            "format" : "int32"
          },
          "writeTimeout" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "SubnetApi" : {
        "type" : "object",
        "properties" : {
          "virtualNetworkIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "subnetIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "subnetName" : {
            "type" : "string",
            "nullable" : true
          },
          "ipRange" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "SuccessRateApi" : {
        "type" : "object",
        "properties" : {
          "expectedRetentionSets" : {
            "type" : "integer",
            "format" : "int32"
          },
          "actualSuccessfulRetentionSets" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "SuccessRatePotentialImpact" : {
        "type" : "object",
        "properties" : {
          "isSuccessRateInfluencedByManualDeletion" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : false
      },
      "SuccessTokenResult" : {
        "type" : "object",
        "properties" : {
          "access_token" : {
            "type" : "string"
          },
          "expires_in" : {
            "type" : "integer",
            "format" : "int32"
          },
          "refresh_expires_in" : {
            "type" : "integer",
            "format" : "int32"
          },
          "refresh_token" : {
            "type" : "string"
          },
          "token_type" : {
            "type" : "string"
          },
          "not-before-policy" : {
            "type" : "integer",
            "format" : "int32"
          },
          "session_state" : {
            "type" : "string"
          },
          "scope" : {
            "type" : "string"
          }
        }
      },
      "SuspectedVmApi" : {
        "type" : "object",
        "properties" : {
          "link" : {
            "$ref" : "#/components/schemas/RwVmResourceLink"
          },
          "suspicionLevel" : {
            "type" : "integer",
            "format" : "int32"
          },
          "associatedVpgs" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/AssociatedVpgApi"
            }
          }
        },
        "additionalProperties" : false
      },
      "SuspectedVolumeApi" : {
        "type" : "object",
        "properties" : {
          "volumeType" : {
            "type" : "string",
            "nullable" : true
          },
          "volumeIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "path" : {
            "$ref" : "#/components/schemas/RwVolumePathApi"
          },
          "size" : {
            "$ref" : "#/components/schemas/RwVolumeSizeApi"
          },
          "datastore" : {
            "$ref" : "#/components/schemas/RwVolumeDatastoreApi"
          },
          "associatedVm" : {
            "$ref" : "#/components/schemas/AssociatedVmApi"
          },
          "associatedVpgs" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/AssociatedVpgApi"
            }
          },
          "suspicionLevel" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "SuspectedVpgApi" : {
        "type" : "object",
        "properties" : {
          "link" : {
            "$ref" : "#/components/schemas/RwResourceLink"
          },
          "suspicionLevel" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "SystemStateAlertLevel" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1 ]
      },
      "TaskApi" : {
        "type" : "object",
        "properties" : {
          "link" : {
            "$ref" : "#/components/schemas/ResourceLink"
          },
          "type" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "$ref" : "#/components/schemas/TaskStatusApi"
          },
          "initiatedBy" : {
            "type" : "string",
            "nullable" : true
          },
          "started" : {
            "type" : "string",
            "format" : "date-time"
          },
          "completed" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "completeReason" : {
            "type" : "string",
            "nullable" : true
          },
          "isCancellable" : {
            "type" : "boolean"
          },
          "relatedEntities" : {
            "$ref" : "#/components/schemas/TaskRelatedEntitiesApi"
          }
        },
        "additionalProperties" : false
      },
      "TaskRelatedEntitiesApi" : {
        "type" : "object",
        "properties" : {
          "vpgs" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ResourceLink"
            }
          },
          "sites" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ResourceLink"
            }
          },
          "hosts" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ResourceLink"
            }
          },
          "flrSessions" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ResourceLink"
            }
          }
        },
        "additionalProperties" : false
      },
      "TaskStatusApi" : {
        "type" : "object",
        "properties" : {
          "state" : {
            "$ref" : "#/components/schemas/TaskStatusEnumApi"
          },
          "progress" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "TaskStatusEnumApi" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1, 2, 3, 4, 5, 6, 7 ]
      },
      "UnPairDataApi" : {
        "type" : "object",
        "properties" : {
          "isKeepTargetDisks" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : false
      },
      "VCDVappNativeApi" : {
        "type" : "object",
        "properties" : {
          "vcdName" : {
            "type" : "string",
            "nullable" : true
          },
          "vcdVappIdentifier" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VCDVirtualDatacenter" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VCDVmMachine" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "nullable" : true
          },
          "moRefId" : {
            "type" : "string",
            "nullable" : true
          },
          "hRef" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "vdc" : {
            "type" : "string",
            "nullable" : true
          },
          "org" : {
            "type" : "string",
            "nullable" : true
          },
          "container" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VirtualNetworkApi" : {
        "type" : "object",
        "properties" : {
          "virtualNetworkIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "virtualNetworkName" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VirtualizationSiteApi" : {
        "type" : "object",
        "properties" : {
          "siteIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "virtualizationSiteName" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VmApi" : {
        "type" : "object",
        "properties" : {
          "link" : {
            "$ref" : "#/components/schemas/VmResourceLink"
          },
          "organizationName" : {
            "type" : "string",
            "nullable" : true
          },
          "priority" : {
            "$ref" : "#/components/schemas/VpgPriorityApi"
          },
          "provisionedStorageInMB" : {
            "type" : "integer",
            "format" : "int32"
          },
          "usedStorageInMB" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cpuCoresNum" : {
            "type" : "integer",
            "format" : "int32"
          },
          "memorySizeInMB" : {
            "type" : "integer",
            "format" : "int32"
          },
          "journalUsedStorageMb" : {
            "type" : "integer",
            "format" : "int64"
          },
          "journalWarningThreshold" : {
            "$ref" : "#/components/schemas/VmJournalLimitApi"
          },
          "journalHardLimit" : {
            "$ref" : "#/components/schemas/VmJournalLimitApi"
          },
          "ioPs" : {
            "type" : "integer",
            "format" : "int32"
          },
          "throughputInMB" : {
            "type" : "number",
            "format" : "double"
          },
          "outgoingBandWidthInMbps" : {
            "type" : "number",
            "format" : "double"
          },
          "actualRPO" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lastTest" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "vpgName" : {
            "type" : "string",
            "nullable" : true
          },
          "vmName" : {
            "type" : "string",
            "nullable" : true
          },
          "volumes" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/VmVolumeApi"
            }
          },
          "nics" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/NicNativeApi"
            }
          },
          "protectedSiteName" : {
            "type" : "string",
            "nullable" : true
          },
          "recoverySiteName" : {
            "type" : "string",
            "nullable" : true
          },
          "entities" : {
            "$ref" : "#/components/schemas/VpgEntitiesApi"
          },
          "status" : {
            "$ref" : "#/components/schemas/VpgVisualStatusApi"
          },
          "subStatus" : {
            "$ref" : "#/components/schemas/VpgVisualSubStatusApi"
          },
          "protectedSite" : {
            "$ref" : "#/components/schemas/ResourceLink"
          },
          "recoverySite" : {
            "$ref" : "#/components/schemas/ResourceLink"
          },
          "enabledActions" : {
            "$ref" : "#/components/schemas/VmEnabledActionsApi"
          },
          "isVmExists" : {
            "type" : "boolean"
          },
          "recoveryHostIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "recoveryHostName" : {
            "type" : "string",
            "nullable" : true
          },
          "owningHostIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "owningHostName" : {
            "type" : "string",
            "nullable" : true
          },
          "hardwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "isAgentInstalled" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : false
      },
      "VmEnabledActionsApi" : {
        "type" : "object",
        "properties" : {
          "isFlrEnabled" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : false
      },
      "VmInfoResourceReportApi" : {
        "type" : "object",
        "properties" : {
          "hardwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "vmIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "vmName" : {
            "type" : "string",
            "nullable" : true
          },
          "cpu" : {
            "$ref" : "#/components/schemas/CpuResourceReportApi"
          },
          "memory" : {
            "$ref" : "#/components/schemas/MemoryResourceReportApi"
          }
        },
        "additionalProperties" : false
      },
      "VmInstanceTypeApi" : {
        "type" : "object",
        "properties" : {
          "vmInstanceType" : {
            "type" : "string",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "vmSeries" : {
            "type" : "string",
            "nullable" : true
          },
          "isPremiumSupported" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : false
      },
      "VmJournalLimitApi" : {
        "type" : "object",
        "properties" : {
          "limitType" : {
            "$ref" : "#/components/schemas/VmJournalLimitTypeApi"
          },
          "limitValue" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "VmJournalLimitTypeApi" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1, 2 ]
      },
      "VmNativeApi" : {
        "type" : "object",
        "properties" : {
          "vmName" : {
            "type" : "string",
            "nullable" : true
          },
          "vmIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "vmInstanceIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "owningHostIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "owningHostName" : {
            "type" : "string",
            "nullable" : true
          },
          "vmPerfMetricInfo" : {
            "$ref" : "#/components/schemas/VmPerfMetricInfo"
          },
          "nics" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/NicNativeApi"
            }
          },
          "volumes" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/VmVolumeApi"
            }
          },
          "isAgentInstalled" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : false
      },
      "VmNicSettingsApi" : {
        "type" : "object",
        "properties" : {
          "networkIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "dnsSuffix" : {
            "type" : "string",
            "nullable" : true
          },
          "gateway" : {
            "type" : "string",
            "nullable" : true
          },
          "isDhcp" : {
            "type" : "boolean"
          },
          "primaryDns" : {
            "type" : "string",
            "nullable" : true
          },
          "secondaryDns" : {
            "type" : "string",
            "nullable" : true
          },
          "staticIp" : {
            "type" : "string",
            "nullable" : true
          },
          "subnetMask" : {
            "type" : "string",
            "nullable" : true
          },
          "shouldReplaceMacAddress" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : false
      },
      "VmPerfMetricInfo" : {
        "type" : "object",
        "properties" : {
          "provisionedStorageInMB" : {
            "type" : "integer",
            "format" : "int32"
          },
          "usedStorageInMB" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cpuCoresNum" : {
            "type" : "integer",
            "format" : "int32"
          },
          "memorySizeInMB" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "VmResourceLink" : {
        "type" : "object",
        "properties" : {
          "vpg_identifier" : {
            "type" : "string",
            "nullable" : true
          },
          "instance_identifier" : {
            "type" : "string",
            "nullable" : true
          },
          "rel" : {
            "type" : "string",
            "nullable" : true
          },
          "href" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "nullable" : true
          },
          "identifier" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VmResourcesReportApi" : {
        "type" : "object",
        "properties" : {
          "sampleTime" : {
            "type" : "string",
            "nullable" : true
          },
          "performance" : {
            "$ref" : "#/components/schemas/PerformanceResourceReportApi"
          },
          "vpg" : {
            "$ref" : "#/components/schemas/VpgResourceReportApi"
          },
          "protectedSite" : {
            "$ref" : "#/components/schemas/ProtectedSiteResourceReportApi"
          },
          "recoverySite" : {
            "$ref" : "#/components/schemas/RecoverySiteResourceReportApi"
          }
        },
        "additionalProperties" : false
      },
      "VmStatisticsApi" : {
        "type" : "object",
        "properties" : {
          "vmIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "vpgIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "ioOperationsCounter" : {
            "type" : "integer",
            "format" : "int64"
          },
          "writeCounterInMBs" : {
            "type" : "integer",
            "format" : "int64"
          },
          "syncCounterInMBs" : {
            "type" : "integer",
            "format" : "int64"
          },
          "networkTrafficCounterInMBs" : {
            "type" : "integer",
            "format" : "int64"
          },
          "sampleTime" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VmVolumeApi" : {
        "type" : "object",
        "properties" : {
          "vmVolumeIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "publicCloudVolumeIdentifier" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VmVolumeSettingsApi" : {
        "type" : "object",
        "properties" : {
          "datastoreIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "isThin" : {
            "type" : "boolean"
          },
          "volumeIdentifier" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VolumeApi" : {
        "type" : "object",
        "properties" : {
          "volumeType" : {
            "type" : "string",
            "nullable" : true
          },
          "isThinProvisioned" : {
            "type" : "boolean"
          },
          "volumeIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "path" : {
            "$ref" : "#/components/schemas/VolumePathApi"
          },
          "size" : {
            "$ref" : "#/components/schemas/VolumeSizeApi"
          },
          "datastore" : {
            "$ref" : "#/components/schemas/VolumeDatastoreApi"
          },
          "owningVm" : {
            "$ref" : "#/components/schemas/VolumeVmApi"
          },
          "protectedVm" : {
            "$ref" : "#/components/schemas/VolumeVmApi"
          },
          "vpg" : {
            "$ref" : "#/components/schemas/VolumeVpgApi"
          }
        },
        "additionalProperties" : false
      },
      "VolumeDatastoreApi" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VolumePathApi" : {
        "type" : "object",
        "properties" : {
          "full" : {
            "type" : "string",
            "nullable" : true
          },
          "relative" : {
            "type" : "string",
            "nullable" : true
          },
          "fileName" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VolumeSizeApi" : {
        "type" : "object",
        "properties" : {
          "usedInBytes" : {
            "type" : "integer",
            "format" : "int64"
          },
          "provisionedInBytes" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "additionalProperties" : false
      },
      "VolumeVmApi" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VolumeVpgApi" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgActiveProcessesApi" : {
        "type" : "object",
        "properties" : {
          "runningFailOverTestApi" : {
            "$ref" : "#/components/schemas/FailOverTestApi"
          }
        },
        "additionalProperties" : false
      },
      "VpgAlertStatusApi" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1, 2, 3, 4 ]
      },
      "VpgApi" : {
        "type" : "object",
        "properties" : {
          "progressPercentage" : {
            "type" : "number",
            "format" : "double"
          },
          "zorg" : {
            "$ref" : "#/components/schemas/ResourceLink"
          },
          "priority" : {
            "$ref" : "#/components/schemas/VpgPriorityApi"
          },
          "vmsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "provisionedStorageInMB" : {
            "type" : "integer",
            "format" : "int64"
          },
          "usedStorageInMB" : {
            "type" : "integer",
            "format" : "int64"
          },
          "ioPs" : {
            "type" : "integer",
            "format" : "int32"
          },
          "throughputInMB" : {
            "type" : "number",
            "format" : "double"
          },
          "actualRPO" : {
            "type" : "integer",
            "format" : "int32"
          },
          "configuredRpoSeconds" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lastTest" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "vpgName" : {
            "type" : "string",
            "nullable" : true
          },
          "vpgDescription" : {
            "type" : "string",
            "nullable" : true
          },
          "vpgType" : {
            "type" : "string",
            "nullable" : true
          },
          "link" : {
            "$ref" : "#/components/schemas/ResourceLink"
          },
          "protectedSiteName" : {
            "type" : "string",
            "nullable" : true
          },
          "protectedSite" : {
            "$ref" : "#/components/schemas/ResourceLink"
          },
          "recoverySiteName" : {
            "type" : "string",
            "nullable" : true
          },
          "recoverySite" : {
            "$ref" : "#/components/schemas/ResourceLink"
          },
          "entities" : {
            "$ref" : "#/components/schemas/VpgEntitiesApi"
          },
          "status" : {
            "$ref" : "#/components/schemas/VpgVisualStatusApi"
          },
          "subStatus" : {
            "$ref" : "#/components/schemas/VpgVisualSubStatusApi"
          },
          "activeProcessesApi" : {
            "$ref" : "#/components/schemas/VpgActiveProcessesApi"
          },
          "serviceProfile" : {
            "$ref" : "#/components/schemas/ResourceLink"
          },
          "backupEnabled" : {
            "type" : "boolean"
          },
          "failSafeHistory" : {
            "$ref" : "#/components/schemas/JournalHealthStatusApi"
          },
          "historyStatusApi" : {
            "$ref" : "#/components/schemas/HistoryStatusApi"
          },
          "alertStatus" : {
            "$ref" : "#/components/schemas/VpgAlertStatusApi"
          }
        },
        "additionalProperties" : false
      },
      "VpgCheckpointsStatsApi" : {
        "type" : "object",
        "properties" : {
          "earliest" : {
            "$ref" : "#/components/schemas/CheckpointApi"
          },
          "latest" : {
            "$ref" : "#/components/schemas/CheckpointApi"
          }
        },
        "additionalProperties" : false
      },
      "VpgDeleteDataApi" : {
        "type" : "object",
        "properties" : {
          "keepRecoveryVolumes" : {
            "type" : "boolean",
            "nullable" : true
          },
          "force" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : false
      },
      "VpgEntitiesApi" : {
        "type" : "object",
        "properties" : {
          "protected" : {
            "$ref" : "#/components/schemas/VpgEntityTypeApi"
          },
          "recovery" : {
            "$ref" : "#/components/schemas/VpgEntityTypeApi"
          }
        },
        "additionalProperties" : false
      },
      "VpgEntityTypeApi" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1, 2, 3, 4, 5 ]
      },
      "VpgIdentifiersApi" : {
        "type" : "object",
        "properties" : {
          "vpgIdentifiers" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false
      },
      "VpgInsertTagCheckpointDataApi" : {
        "type" : "object",
        "properties" : {
          "checkpointName" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgLtrHealthApi" : {
        "type" : "object",
        "properties" : {
          "ltrVpgStatus" : {
            "$ref" : "#/components/schemas/LtrVpgStatusApi"
          },
          "retentionPolicyLatestChanged" : {
            "type" : "string",
            "format" : "date-time"
          },
          "successRate" : {
            "$ref" : "#/components/schemas/SuccessRateApi"
          },
          "dateOfLastRun" : {
            "type" : "string",
            "format" : "date-time"
          },
          "timeOfLastSuccessfulRun" : {
            "type" : "string",
            "format" : "date-time"
          },
          "successRatePotentialImpact" : {
            "$ref" : "#/components/schemas/SuccessRatePotentialImpact"
          },
          "vpgName" : {
            "type" : "string",
            "nullable" : true
          },
          "vpgId" : {
            "type" : "string",
            "nullable" : true
          },
          "vmsInVpg" : {
            "type" : "integer",
            "format" : "int32"
          },
          "policy" : {
            "type" : "string",
            "nullable" : true
          },
          "schedulingAndRetentionSettings" : {
            "$ref" : "#/components/schemas/SchedulingAndRetentionSettingsVisualObject"
          },
          "recoverySiteName" : {
            "type" : "string",
            "nullable" : true
          },
          "repositoryName" : {
            "type" : "string",
            "nullable" : true
          },
          "repositoryId" : {
            "type" : "string",
            "nullable" : true
          },
          "zorgName" : {
            "type" : "string",
            "nullable" : true
          },
          "alertStatus" : {
            "$ref" : "#/components/schemas/ProtectionGroupAlertStatus"
          },
          "alertTips" : {
            "$ref" : "#/components/schemas/AlertsTipVisualObject"
          },
          "isAbortBackupEnabled" : {
            "type" : "boolean"
          },
          "isBackupEnabled" : {
            "type" : "boolean"
          },
          "isUpdateEnabled" : {
            "type" : "boolean"
          },
          "isFailoverEnabled" : {
            "type" : "boolean"
          },
          "isFailoverTestEnabled" : {
            "type" : "boolean"
          },
          "isMoveEnabled" : {
            "type" : "boolean"
          },
          "compressionSettings" : {
            "$ref" : "#/components/schemas/LtrBackupCompressionSettingsApi"
          },
          "manageRetentionSetsAvailability" : {
            "$ref" : "#/components/schemas/ButtonAvailabilityApi"
          }
        },
        "additionalProperties" : false
      },
      "VpgPriorityApi" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1, 2 ]
      },
      "VpgResourceReportApi" : {
        "type" : "object",
        "properties" : {
          "crmIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "serviceProfileName" : {
            "type" : "string",
            "nullable" : true
          },
          "vpgName" : {
            "type" : "string",
            "nullable" : true
          },
          "protectedAndRecoveryType" : {
            "type" : "string",
            "nullable" : true
          },
          "zorgName" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsApi" : {
        "type" : "object",
        "properties" : {
          "vpgIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "vpgSettingsIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "basic" : {
            "$ref" : "#/components/schemas/VpgSettingsBasicApi"
          },
          "scripting" : {
            "$ref" : "#/components/schemas/VpgSettingsScriptsApi"
          },
          "bootGroups" : {
            "$ref" : "#/components/schemas/VpgSettingsBootGroupsApi"
          },
          "journal" : {
            "$ref" : "#/components/schemas/VpgSettingsJournalApi"
          },
          "scratch" : {
            "$ref" : "#/components/schemas/VpgSettingsScratchApi"
          },
          "longTermRetention" : {
            "$ref" : "#/components/schemas/VpgSettingsLtrApi"
          },
          "recovery" : {
            "$ref" : "#/components/schemas/VpgSettingsRecoveryApi"
          },
          "networks" : {
            "$ref" : "#/components/schemas/VpgSettingsNetworksApi"
          },
          "vms" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/VpgSettingsVmApi"
            }
          },
          "protected" : {
            "$ref" : "#/components/schemas/VpgSettingsProtectedApi"
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsBasicApi" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "vpgType" : {
            "type" : "string",
            "nullable" : true
          },
          "rpoInSeconds" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "testIntervalInMinutes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "journalHistoryInHours" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "priority" : {
            "type" : "string",
            "nullable" : true
          },
          "useWanCompression" : {
            "type" : "boolean",
            "nullable" : true
          },
          "serviceProfileIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "zorgIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "protectedSiteIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "recoverySiteIdentifier" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsBootGroupApi" : {
        "type" : "object",
        "properties" : {
          "bootGroupIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "bootDelayInSeconds" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsBootGroupsApi" : {
        "type" : "object",
        "properties" : {
          "bootGroups" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/VpgSettingsBootGroupApi"
            }
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsDownloadExportApi" : {
        "type" : "object",
        "properties" : {
          "exportedVpgSettingsApi" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ExportedVpgSettingsApi"
            }
          },
          "errorMessage" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsExportApi" : {
        "type" : "object",
        "properties" : {
          "timeStamp" : {
            "type" : "string",
            "format" : "date-time"
          },
          "exportResult" : {
            "$ref" : "#/components/schemas/VpgSettingsExportResultApi"
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsExportResultApi" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "nullable" : true
          },
          "message" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsExportVpgInfoApi" : {
        "type" : "object",
        "properties" : {
          "vpgName" : {
            "type" : "string",
            "nullable" : true
          },
          "sourceSiteName" : {
            "type" : "string",
            "nullable" : true
          },
          "targetSiteName" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsExportedDataInfoApi" : {
        "type" : "object",
        "properties" : {
          "timeStamp" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsHypervisorNetworkApi" : {
        "type" : "object",
        "properties" : {
          "defaultNetworkIdentifier" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsImportFailedResultApi" : {
        "type" : "object",
        "properties" : {
          "vpgName" : {
            "type" : "string",
            "nullable" : true
          },
          "errorMessage" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsImportTaskIdentifierResultApi" : {
        "type" : "object",
        "properties" : {
          "vpgName" : {
            "type" : "string",
            "nullable" : true
          },
          "taskIdentifier" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsImportValidationResultApi" : {
        "type" : "object",
        "properties" : {
          "vpgName" : {
            "type" : "string",
            "nullable" : true
          },
          "errorMessages" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsImportVpgsResultApi" : {
        "type" : "object",
        "properties" : {
          "validationFailedResults" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/VpgSettingsImportValidationResultApi"
            }
          },
          "importFailedResults" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/VpgSettingsImportFailedResultApi"
            }
          },
          "importTaskIdentifiers" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/VpgSettingsImportTaskIdentifierResultApi"
            }
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsJournalApi" : {
        "type" : "object",
        "properties" : {
          "limitation" : {
            "$ref" : "#/components/schemas/VpgSettingsJournalLimitationApi"
          },
          "datastoreIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "datastoreClusterIdentifier" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsJournalLimitationApi" : {
        "type" : "object",
        "properties" : {
          "hardLimitInMB" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "hardLimitInPercent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "warningThresholdInMB" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "warningThresholdInPercent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsLtrApi" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean"
          },
          "repositoryIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "retentionRunTime" : {
            "type" : "string",
            "nullable" : true
          },
          "schedulerPolicy" : {
            "$ref" : "#/components/schemas/LtrSchedulerPolicyApi"
          },
          "retry" : {
            "$ref" : "#/components/schemas/LtrRetryApi"
          },
          "indexing" : {
            "$ref" : "#/components/schemas/VpgSettingsLtrVmIndexingApi"
          },
          "compression" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsLtrVmIndexingApi" : {
        "type" : "object",
        "properties" : {
          "vms" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsNamesApi" : {
        "type" : "object",
        "properties" : {
          "vpgNames" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsNetworkApi" : {
        "type" : "object",
        "properties" : {
          "vcd" : {
            "$ref" : "#/components/schemas/VpgSettingsVcdNetworkApi"
          },
          "hypervisor" : {
            "$ref" : "#/components/schemas/VpgSettingsHypervisorNetworkApi"
          },
          "publicCloud" : {
            "$ref" : "#/components/schemas/VpgSettingsPublicCloudNetworkApi"
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsNetworksApi" : {
        "type" : "object",
        "properties" : {
          "failover" : {
            "$ref" : "#/components/schemas/VpgSettingsNetworkApi"
          },
          "failoverTest" : {
            "$ref" : "#/components/schemas/VpgSettingsNetworkApi"
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsProtectedApi" : {
        "type" : "object",
        "properties" : {
          "vcd" : {
            "$ref" : "#/components/schemas/VpgSettingsVcdProtectedApi"
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsPublicCloudInfoRecoveryApi" : {
        "type" : "object",
        "properties" : {
          "vmInstanceType" : {
            "type" : "string",
            "nullable" : true
          },
          "azure" : {
            "$ref" : "#/components/schemas/VpgSettingsPublicCloudProviderInfoRecoveryApi"
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsPublicCloudNetworkApi" : {
        "type" : "object",
        "properties" : {
          "virtualNetworkIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "subnetIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "securityGroupIdentifiers" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsPublicCloudProviderInfoRecoveryApi" : {
        "type" : "object",
        "properties" : {
          "recoveryDiskType" : {
            "type" : "string",
            "nullable" : true
          },
          "recoveryResourceGroup" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsPublicCloudRecoveryApi" : {
        "type" : "object",
        "properties" : {
          "failover" : {
            "$ref" : "#/components/schemas/VpgSettingsPublicCloudInfoRecoveryApi"
          },
          "failoverTest" : {
            "$ref" : "#/components/schemas/VpgSettingsPublicCloudInfoRecoveryApi"
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsRecoveryApi" : {
        "type" : "object",
        "properties" : {
          "defaultHostIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultHostClusterIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultDatastoreIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultDatastoreClusterIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultFolderIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "resourcePoolIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "vcd" : {
            "$ref" : "#/components/schemas/VpgSettingsVcdRecoveryApi"
          },
          "publicCloud" : {
            "$ref" : "#/components/schemas/VpgSettingsPublicCloudRecoveryApi"
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsScratchApi" : {
        "type" : "object",
        "properties" : {
          "limitation" : {
            "$ref" : "#/components/schemas/VpgSettingsScratchLimitationApi"
          },
          "datastoreIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "datastoreClusterIdentifier" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsScratchLimitationApi" : {
        "type" : "object",
        "properties" : {
          "hardLimitInMB" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "hardLimitInPercent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "warningThresholdInMB" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "warningThresholdInPercent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsScriptApi" : {
        "type" : "object",
        "properties" : {
          "command" : {
            "type" : "string",
            "nullable" : true
          },
          "parameters" : {
            "type" : "string",
            "nullable" : true
          },
          "timeoutInSeconds" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsScriptsApi" : {
        "type" : "object",
        "properties" : {
          "preRecovery" : {
            "$ref" : "#/components/schemas/VpgSettingsScriptApi"
          },
          "postRecovery" : {
            "$ref" : "#/components/schemas/VpgSettingsScriptApi"
          },
          "postBackup" : {
            "$ref" : "#/components/schemas/VpgSettingsScriptApi"
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsVcdNetworkApi" : {
        "type" : "object",
        "properties" : {
          "copyNATRules" : {
            "type" : "string",
            "nullable" : true
          },
          "isEnableGuestCustomization" : {
            "type" : "boolean",
            "nullable" : true
          },
          "mapping" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/VpgSettingsVcdNetworksMappingApi"
            }
          },
          "defaultRecoveryOrgVdcNetworkIdentifier" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsVcdNetworksMappingApi" : {
        "type" : "object",
        "properties" : {
          "protectedOrgVdcNetworkIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "recoveryOrgVdcNetworkIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "reverseTestOrgVdcNetworkIdentifier" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsVcdProtectedApi" : {
        "type" : "object",
        "properties" : {
          "vcdVappIdentifier" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsVcdRecoveryApi" : {
        "type" : "object",
        "properties" : {
          "orgVdcIdentifier" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsVmApi" : {
        "type" : "object",
        "properties" : {
          "vmIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "recovery" : {
            "$ref" : "#/components/schemas/VpgSettingsVmRecoveryApi"
          },
          "bootGroupIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "journal" : {
            "$ref" : "#/components/schemas/VpgSettingsVmJournalApi"
          },
          "scratch" : {
            "$ref" : "#/components/schemas/VpgSettingsScratchApi"
          },
          "volumes" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/VpgSettingsVmVolumeApi"
            }
          },
          "nics" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/VpgSettingsVmNicApi"
            }
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsVmJournalApi" : {
        "type" : "object",
        "properties" : {
          "limitation" : {
            "$ref" : "#/components/schemas/VpgSettingsVmJournalLimitationApi"
          },
          "datastoreIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "datastoreClusterIdentifier" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsVmJournalLimitationApi" : {
        "type" : "object",
        "properties" : {
          "hardLimitInMB" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "hardLimitInPercent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "warningThresholdInMB" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "warningThresholdInPercent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsVmNicApi" : {
        "type" : "object",
        "properties" : {
          "nicIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "failoverTest" : {
            "$ref" : "#/components/schemas/VpgSettingsVmNicNetworkApi"
          },
          "failover" : {
            "$ref" : "#/components/schemas/VpgSettingsVmNicNetworkApi"
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsVmNicHypervisorIpConfig" : {
        "type" : "object",
        "properties" : {
          "staticIp" : {
            "type" : "string",
            "nullable" : true
          },
          "subnetMask" : {
            "type" : "string",
            "nullable" : true
          },
          "gateway" : {
            "type" : "string",
            "nullable" : true
          },
          "primaryDns" : {
            "type" : "string",
            "nullable" : true
          },
          "secondaryDns" : {
            "type" : "string",
            "nullable" : true
          },
          "isDhcp" : {
            "type" : "boolean",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsVmNicHypervisorNetworkApi" : {
        "type" : "object",
        "properties" : {
          "networkIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "shouldReplaceMacAddress" : {
            "type" : "boolean",
            "nullable" : true
          },
          "dnsSuffix" : {
            "type" : "string",
            "nullable" : true
          },
          "ipConfig" : {
            "$ref" : "#/components/schemas/VpgSettingsVmNicHypervisorIpConfig"
          },
          "shouldReplaceIpConfiguration" : {
            "type" : "boolean",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsVmNicNetworkApi" : {
        "type" : "object",
        "properties" : {
          "hypervisor" : {
            "$ref" : "#/components/schemas/VpgSettingsVmNicHypervisorNetworkApi"
          },
          "vcd" : {
            "$ref" : "#/components/schemas/VpgSettingsVmNicVcdNetworkApi"
          },
          "publicCloud" : {
            "$ref" : "#/components/schemas/VpgSettingsVmNicPublicCloudNetworkApi"
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsVmNicPublicCloudNetworkApi" : {
        "type" : "object",
        "properties" : {
          "subnetIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "securityGroupIdentifiers" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "type" : "string"
            }
          },
          "privateIP" : {
            "type" : "string",
            "nullable" : true
          },
          "isPrimary" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsVmNicVcdNetworkApi" : {
        "type" : "object",
        "properties" : {
          "isResetMacAddress" : {
            "type" : "boolean",
            "nullable" : true
          },
          "isPrimary" : {
            "type" : "boolean",
            "nullable" : true
          },
          "isConnected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ipMode" : {
            "type" : "string",
            "nullable" : true
          },
          "ipAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "recoveryOrgVdcNetworkIdentifier" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsVmPublicCloudInfoRecoveryApi" : {
        "type" : "object",
        "properties" : {
          "vmInstanceType" : {
            "type" : "string",
            "nullable" : true
          },
          "azure" : {
            "$ref" : "#/components/schemas/VpgSettingsVmPublicCloudProviderInfoRecoveryApi"
          },
          "virtualNetworkIdentifier" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsVmPublicCloudProviderInfoRecoveryApi" : {
        "type" : "object",
        "properties" : {
          "recoveryDiskType" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsVmPublicCloudRecoveryApi" : {
        "type" : "object",
        "properties" : {
          "failover" : {
            "$ref" : "#/components/schemas/VpgSettingsVmPublicCloudInfoRecoveryApi"
          },
          "failoverTest" : {
            "$ref" : "#/components/schemas/VpgSettingsVmPublicCloudInfoRecoveryApi"
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsVmRecoveryApi" : {
        "type" : "object",
        "properties" : {
          "hostIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "hostClusterIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "datastoreIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "datastoreClusterIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "folderIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "resourcePoolIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "vcd" : {
            "$ref" : "#/components/schemas/VpgSettingsVmVcdRecoveryApi"
          },
          "publicCloud" : {
            "$ref" : "#/components/schemas/VpgSettingsVmPublicCloudRecoveryApi"
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsVmVcdRecoveryApi" : {
        "type" : "object",
        "properties" : {
          "storagePolicyIdentifier" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsVmVolumeApi" : {
        "type" : "object",
        "properties" : {
          "volumeIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "vcd" : {
            "$ref" : "#/components/schemas/VpgSettingsVmVolumeVcdApi"
          },
          "preseed" : {
            "$ref" : "#/components/schemas/VpgSettingsVmVolumePreseedApi"
          },
          "rdm" : {
            "$ref" : "#/components/schemas/VpgSettingsVmVolumeRdmApi"
          },
          "datastore" : {
            "$ref" : "#/components/schemas/VpgSettingsVmVolumeDatastoreApi"
          },
          "volumeSyncSettings" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsVmVolumeDatastoreApi" : {
        "type" : "object",
        "properties" : {
          "datastoreClusterIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "datastoreIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "isThin" : {
            "type" : "boolean",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsVmVolumePreseedApi" : {
        "type" : "object",
        "properties" : {
          "datastoreIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "path" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsVmVolumeRdmApi" : {
        "type" : "object",
        "properties" : {
          "deviceIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "isPhysical" : {
            "type" : "boolean",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgSettingsVmVolumeVcdApi" : {
        "type" : "object",
        "properties" : {
          "isThin" : {
            "type" : "boolean",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VpgVisualStatusApi" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8 ]
      },
      "VpgVisualSubStatusApi" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42 ]
      },
      "VpgsLtrHealthApi" : {
        "type" : "object",
        "properties" : {
          "vpgs" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/VpgLtrHealthApi"
            }
          }
        },
        "additionalProperties" : false
      },
      "VraAlertsApi" : {
        "type" : "object",
        "properties" : {
          "vraAlertsStatus" : {
            "$ref" : "#/components/schemas/AlertStatusApi"
          }
        },
        "additionalProperties" : false
      },
      "VraApi" : {
        "type" : "object",
        "properties" : {
          "link" : {
            "$ref" : "#/components/schemas/ResourceLink"
          },
          "vraIdentifier" : {
            "type" : "integer",
            "format" : "int64"
          },
          "vraName" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "$ref" : "#/components/schemas/VraStatusApi"
          },
          "upgradeStatus" : {
            "$ref" : "#/components/schemas/VraUpgradeStatusApi"
          },
          "progress" : {
            "type" : "integer",
            "format" : "int32"
          },
          "vraVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "vraDisplayVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "hostVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "vraNetworkDataApi" : {
            "$ref" : "#/components/schemas/VraNetworkDataApi"
          },
          "vraGroup" : {
            "type" : "string",
            "nullable" : true
          },
          "memoryInGB" : {
            "type" : "integer",
            "format" : "int32"
          },
          "datastoreName" : {
            "type" : "string",
            "nullable" : true
          },
          "datastoreIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "vmInstanceType" : {
            "type" : "string",
            "nullable" : true
          },
          "datastoreClusterName" : {
            "type" : "string",
            "nullable" : true
          },
          "datastoreClusterIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "networkName" : {
            "type" : "string",
            "nullable" : true
          },
          "networkIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "hostIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "hostDisplayName" : {
            "type" : "string",
            "nullable" : true
          },
          "protectedCounters" : {
            "$ref" : "#/components/schemas/VraProtectionCountersApi"
          },
          "recoveryCounters" : {
            "$ref" : "#/components/schemas/VraProtectionCountersApi"
          },
          "selfProtectedVpgs" : {
            "type" : "integer",
            "format" : "int32"
          },
          "vraAlerts" : {
            "$ref" : "#/components/schemas/VraAlertsApi"
          },
          "numOfCpus" : {
            "type" : "integer",
            "format" : "int32"
          },
          "isGhost" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : false
      },
      "VraChangeRecoveryHostConstraintsApi" : {
        "type" : "object",
        "properties" : {
          "fixedVmsAllocations" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/VraVmAllocationApi"
            }
          }
        },
        "additionalProperties" : false
      },
      "VraChangeRecoveryHostRecommendationRequestApi" : {
        "type" : "object",
        "properties" : {
          "constraints" : {
            "$ref" : "#/components/schemas/VraChangeRecoveryHostConstraintsApi"
          },
          "vmsToCalculate" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false
      },
      "VraChangeRecoveryHostRecommendationResultApi" : {
        "type" : "object",
        "properties" : {
          "recommendations" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/VraChangeRecoveryHostVmRecommendationApi"
            }
          }
        },
        "additionalProperties" : false
      },
      "VraChangeRecoveryHostSettingsApi" : {
        "type" : "object",
        "properties" : {
          "vmsAllocations" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/VraVmAllocationApi"
            }
          }
        },
        "additionalProperties" : false
      },
      "VraChangeRecoveryHostValidationResultsApi" : {
        "type" : "object",
        "properties" : {
          "vmsValidationsResults" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/VraChangeRecoveryHostVmValidationResultApi"
            }
          }
        },
        "additionalProperties" : false
      },
      "VraChangeRecoveryHostVmRecommendationApi" : {
        "type" : "object",
        "properties" : {
          "vmIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "hostIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "hostName" : {
            "type" : "string",
            "nullable" : true
          },
          "reason" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VraChangeRecoveryHostVmStatusApi" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1, 2 ]
      },
      "VraChangeRecoveryHostVmValidationResultApi" : {
        "type" : "object",
        "properties" : {
          "vmIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "hostIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "$ref" : "#/components/schemas/VraChangeRecoveryHostVmStatusApi"
          },
          "reason" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VraCreateDataApi" : {
        "type" : "object",
        "properties" : {
          "hostIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "datastoreIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "networkIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "hostRootPassword" : {
            "type" : "string",
            "nullable" : true
          },
          "memoryInGb" : {
            "type" : "integer",
            "format" : "int32"
          },
          "groupName" : {
            "type" : "string",
            "nullable" : true
          },
          "vraNetworkDataApi" : {
            "$ref" : "#/components/schemas/VraNetworkDataApi"
          },
          "usePublicKeyInsteadOfCredentials" : {
            "type" : "boolean"
          },
          "populatePostInstallation" : {
            "type" : "boolean",
            "nullable" : true
          },
          "numOfCpus" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "vmInstanceType" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VraEditDataApi" : {
        "type" : "object",
        "properties" : {
          "hostRootPassword" : {
            "type" : "string",
            "nullable" : true
          },
          "groupName" : {
            "type" : "string",
            "nullable" : true
          },
          "usePublicKeyInsteadOfCredentials" : {
            "type" : "boolean"
          },
          "vraNetworkDataApi" : {
            "$ref" : "#/components/schemas/VraNetworkDataApi"
          },
          "memoryInGb" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "numOfCpus" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VraNetworkDataApi" : {
        "type" : "object",
        "properties" : {
          "vraIPConfigurationTypeApi" : {
            "type" : "string",
            "nullable" : true
          },
          "vraIPAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "vraIPAddressRangeEnd" : {
            "type" : "string",
            "nullable" : true
          },
          "subnetMask" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultGateway" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VraPotentialHostApi" : {
        "type" : "object",
        "properties" : {
          "hostIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "hostName" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VraProtectionCountersApi" : {
        "type" : "object",
        "properties" : {
          "vpgs" : {
            "type" : "integer",
            "format" : "int32"
          },
          "vms" : {
            "type" : "integer",
            "format" : "int32"
          },
          "volumes" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "VraStatusApi" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]
      },
      "VraUpgradeStatusApi" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1, 2, 3, 4 ]
      },
      "VraVmAllocationApi" : {
        "type" : "object",
        "properties" : {
          "hostIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "vmIdentifier" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "VrasOnClusterCreateDataApi" : {
        "type" : "object",
        "properties" : {
          "clusterIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "datastoreIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "networkIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "memoryInGb" : {
            "type" : "integer",
            "format" : "int32"
          },
          "numOfCpus" : {
            "type" : "integer",
            "format" : "int32"
          },
          "groupName" : {
            "type" : "string",
            "nullable" : true
          },
          "vraNetworkDataApi" : {
            "$ref" : "#/components/schemas/VraNetworkDataApi"
          },
          "usePublicKeyInsteadOfCredentials" : {
            "type" : "boolean"
          },
          "autoPopulatePostInstalltion" : {
            "type" : "boolean"
          },
          "hostRootPassword" : {
            "type" : "string",
            "nullable" : true
          },
          "isVaio" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : false
      },
      "WeekOfMonth" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 1, 2, 3, 4, 5 ]
      },
      "WeekOfYear" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 1, 2 ]
      },
      "WeeklySchedulingAndRetentionPeriodSettingsVisualObject" : {
        "type" : "object",
        "properties" : {
          "dayOfWeek" : {
            "$ref" : "#/components/schemas/DayOfWeek"
          },
          "weeklyPeriod" : {
            "$ref" : "#/components/schemas/SchedulingAndRetentionPeriodSettingsVisualObject"
          }
        },
        "additionalProperties" : false
      },
      "YearlySchedulingAndRetentionPeriodSettingsVisualObject" : {
        "type" : "object",
        "properties" : {
          "yearlyPeriod" : {
            "$ref" : "#/components/schemas/SchedulingAndRetentionPeriodSettingsVisualObject"
          },
          "triggerType" : {
            "$ref" : "#/components/schemas/YearlyTriggerType"
          },
          "weekOfYear" : {
            "$ref" : "#/components/schemas/WeekOfYear"
          },
          "dayOfWeek" : {
            "$ref" : "#/components/schemas/DayOfWeek"
          },
          "month" : {
            "type" : "integer",
            "format" : "int32"
          },
          "day" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "YearlyTriggerType" : {
        "type" : "integer",
        "format" : "int32",
        "enum" : [ 0, 1 ]
      },
      "ZorgApi" : {
        "type" : "object",
        "properties" : {
          "link" : {
            "$ref" : "#/components/schemas/ResourceLink"
          },
          "zorgName" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "ZsspSessionDetailsApi" : {
        "type" : "object",
        "properties" : {
          "creationTime" : {
            "type" : "string",
            "nullable" : true
          },
          "logoutRedirectUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "zorgUserName" : {
            "type" : "string",
            "nullable" : true
          },
          "zsspSessionIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "url" : {
            "type" : "string",
            "nullable" : true
          },
          "zorgIdentifier" : {
            "type" : "string",
            "nullable" : true
          },
          "zsspAddress" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "ZsspSessionsApi" : {
        "required" : [ "zorgIdentifier", "zsspAddress" ],
        "type" : "object",
        "properties" : {
          "zorgIdentifier" : {
            "type" : "string"
          },
          "zsspAddress" : {
            "type" : "string"
          },
          "logoutRedirectUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "zorgUserName" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "body" : {
        "required" : [ "file" ],
        "type" : "object",
        "properties" : {
          "file" : {
            "type" : "string",
            "format" : "binary"
          },
          "path" : {
            "type" : "string",
            "description" : "folder1/folder2"
          },
          "overwriteExisting" : {
            "type" : "boolean",
            "description" : "Overwrite existing file"
          }
        }
      },
      "body_1" : {
        "type" : "object",
        "properties" : {
          "grant_type" : {
            "type" : "string",
            "description" : "Type of exchange a user's credentials",
            "example" : "password"
          },
          "client_id" : {
            "type" : "string",
            "description" : "Keycloak client id",
            "example" : "zerto-client"
          },
          "username" : {
            "type" : "string",
            "description" : "Username"
          },
          "password" : {
            "type" : "string",
            "description" : "Password"
          }
        }
      }
    },
    "securitySchemes" : {
      "Bearer" : {
        "type" : "oauth2",
        "flows" : {
          "implicit" : {
            "authorizationUrl" : "/auth/realms/zerto/protocol/openid-connect/auth",
            "scopes" : { }
          }
        }
      }
    }
  }
}
{
  "openapi": "3.0.1",
  "info": {
    "title": "ZVM REST API",
    "description": "The Zerto RESTful API enables you to manage Zerto programmatically. The REST APIs provide a way to automate many of the tasks required to manage DR, without having to use the Zerto User Interface.",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://192.168.222.20/"
    }
  ],
  "paths": {
    "/v1/alerts": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "summary": "Get a list of latest Zerto alerts. You can filter the results with additional parameters. (Auth)",
        "operationId": "getAlertAll",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "The filter interval start date-time. Related endpoint: `v1/serverDateTime` for date-time format details",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The filter interval end date-time. Related endpoint: `v1/serverDateTime` for date-time format details",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "vpgIdentifier",
            "in": "query",
            "description": "The identifier of the VPG. Related endpoint: `v1/vpgs`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zorgIdentifier",
            "in": "query",
            "description": "The identifier of the ZORG. Related endpoint: `v1/zorgs`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "siteIdentifier",
            "in": "query",
            "description": "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "level",
            "in": "query",
            "description": "The alert level. Related endpoint: `/v1/alerts/levels`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entity",
            "in": "query",
            "description": "The alert entity type. Related endpoint: `/v1/alerts/entity`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "helpIdentifier",
            "in": "query",
            "description": "The alert help identifier associated with the alert. Related endpoint: `/v1/alerts/helpidentifiers`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isDismissed",
            "in": "query",
            "description": "True if alert was dismissed",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Alerts.AlertApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Alerts.AlertApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Alerts.AlertApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/alerts/{alertIdentifier}": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "summary": "Get information about the specific Zerto alert. (Auth)",
        "operationId": "getAlert",
        "parameters": [
          {
            "name": "alertIdentifier",
            "in": "path",
            "description": "Alert identifier. Related endpoint: `/v1/alerts`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Alerts.AlertApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Alerts.AlertApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Alerts.AlertApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/alerts/{alertIdentifier}/dismiss": {
      "post": {
        "tags": [
          "Alerts"
        ],
        "summary": "Dismiss a specific alert. (Auth)",
        "operationId": "removeAlert",
        "parameters": [
          {
            "name": "alertIdentifier",
            "in": "path",
            "description": "Alert identifier. Related endpoint: `v1/alerts`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/alerts/{alertIdentifier}/undismiss": {
      "post": {
        "tags": [
          "Alerts"
        ],
        "summary": "Undismiss a specific alert. (Auth)",
        "operationId": "resetAlert",
        "parameters": [
          {
            "name": "alertIdentifier",
            "in": "path",
            "description": "Alert identifier. Related endpoint: `v1/alerts`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/alerts/levels": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "summary": "Get a list of all available alert levels. (Auth)",
        "operationId": "getAlertLevelAll",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/alerts/entities": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "summary": "Get a list of all available alert entities. (Auth)",
        "operationId": "getAlertEntityAll",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/alerts/helpidentifiers": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "summary": "Get a list of all available alert help identifiers. (Auth)",
        "operationId": "getAlertHelpIdAll",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/datastores": {
      "get": {
        "tags": [
          "Datastores"
        ],
        "summary": "Get a list of datastore info available on the current site (Auth)",
        "operationId": "getDatastoreAll",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Datastores.DatastoreApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Datastores.DatastoreApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Datastores.DatastoreApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/datastores/{datastoreIdentifier}": {
      "get": {
        "tags": [
          "Datastores"
        ],
        "summary": "Get information about a specific datastore (Auth)",
        "operationId": "getDatastore",
        "parameters": [
          {
            "name": "datastoreIdentifier",
            "in": "path",
            "description": "Datastore identifier. Related endpoint: `v1/datastores`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Datastores.DatastoreApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Datastores.DatastoreApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Datastores.DatastoreApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/encryptionDetection/suspected/volumes": {
      "get": {
        "tags": [
          "Encryption Detection"
        ],
        "summary": "Get a list of Volumes that are suspected to have an encryption event (Auth)",
        "operationId": "suspectedVolumes",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.SuspectedVolumeApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.SuspectedVolumeApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.SuspectedVolumeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/encryptionDetection/suspected/vms": {
      "get": {
        "tags": [
          "Encryption Detection"
        ],
        "summary": "Get a list of VMs that are suspected to have an encryption event (Auth)",
        "operationId": "suspectedVms",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.SuspectedVmApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.SuspectedVmApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.SuspectedVmApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/encryptionDetection/suspected/vpgs": {
      "get": {
        "tags": [
          "Encryption Detection"
        ],
        "summary": "Get a list of VPGs that are suspected to have an encryption event (Auth)",
        "operationId": "suspectedVpgs",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.SuspectedVpgApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.SuspectedVpgApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.SuspectedVpgApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/encryptionDetection/metrics/volumes": {
      "get": {
        "tags": [
          "Encryption Detection"
        ],
        "summary": "Get a list of volumes with encryption data (Auth)",
        "operationId": "metricsVolumes",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.MetricsVolumeApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.MetricsVolumeApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.MetricsVolumeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/encryptionDetection/metrics/vms": {
      "get": {
        "tags": [
          "Encryption Detection"
        ],
        "summary": "Get a list of VMs with encryption data (Auth)",
        "operationId": "metricsVms",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.MetricsVmApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.MetricsVmApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.MetricsVmApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/encryptionDetection/metrics/vpgs": {
      "get": {
        "tags": [
          "Encryption Detection"
        ],
        "summary": "Get a list of VPGs with encryption data (Auth)",
        "operationId": "metricsVpgs",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.MetricsVpgApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.MetricsVpgApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.MetricsVpgApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/encryptionDetection/dismissEvent": {
      "post": {
        "tags": [
          "Encryption Detection"
        ],
        "summary": "Dismiss encryption event (resolve alert, clear tag checkpoint) (Auth)",
        "operationId": "dismissEvent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.VpgIdentifiersApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.VpgIdentifiersApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.VpgIdentifiersApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/encryptionDetection/state": {
      "get": {
        "tags": [
          "Encryption Detection"
        ],
        "summary": "Get the state of the encryption detection (enabled/disabled).\r\nThis API will be deprecated starting Zerto 10.0_U6. Use the following new API for Site Setting configuration: /management/api/settings/v1/settings (Auth)",
        "operationId": "encryptionDetectionEnabled",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.SettingsApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.SettingsApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.SettingsApi"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Encryption Detection"
        ],
        "summary": "Set the state of the encryption detection (enabled/disabled).\r\nThis API will be deprecated starting Zerto 10.0_U6. Use the following new API for Site Setting configuration: /management/api/settings/v1/settings (Auth)",
        "operationId": "encryptionDetectionEnabled",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.SettingsApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.SettingsApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.SettingsApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/events": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get a list of latest Zerto events. You can filter the results with additional parameters. (Auth)",
        "operationId": "getEventAll",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "The filter interval start date-time. Related endpoint: `v1/serverDateTime` for date-time format details",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The filter interval end date-time. Related endpoint: `v1/serverDateTime` for date-time format details",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "vpg",
            "in": "query",
            "description": "[Obsolete] The identifier of the VPG. Related endpoint: `v1/vpgs`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vpgIdentifier",
            "in": "query",
            "description": "The identifier of the VPG. Related endpoint: `v1/vpgs`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "siteName",
            "in": "query",
            "description": "The name of the site",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "siteIdentifier",
            "in": "query",
            "description": "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zorgIdentifier",
            "in": "query",
            "description": "The identifier of the ZORG. Related endpoint: `v1/zorgs`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eventType",
            "in": "query",
            "description": "The event type. Related endpoint: `/v1/events/types`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityType",
            "in": "query",
            "description": "The entity type to return. Related endpoint: `/v1/events/entities`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "The event category to return. Related endpoint: `/v1/events/categories`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eventCategory",
            "in": "query",
            "description": "[Obsolete] The event category to return. Related endpoint: `/v1/events/categories`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userName",
            "in": "query",
            "description": "The username for which the event occurred. Tasks run by ZVM have the username `System`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "alertIdentifier",
            "in": "query",
            "description": "Alert identifier. Related endpoint: `/v1/alerts`",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Events.EventApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Events.EventApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Events.EventApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/events/{eventIdentifier}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get data for a single event on the site processing the API. (Auth)",
        "operationId": "getEvent",
        "parameters": [
          {
            "name": "eventIdentifier",
            "in": "path",
            "description": "Event identifier. Related endpoint: `/v1/events`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Events.EventApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Events.EventApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Events.EventApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/events/types": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get a list of all available event types (Auth)",
        "operationId": "getEventTypeAll",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/events/entities": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get a list of all available event entities. (Auth)",
        "operationId": "getEventEntityAll",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/events/categories": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get a list of all available event categories. (Auth)",
        "operationId": "getEventCategoryAll",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings/exportedSettings/{timeStamp}": {
      "post": {
        "tags": [
          "Export Import VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Read exported settings from a file of given timestamp. (Auth)",
        "operationId": "getExportedSettings",
        "parameters": [
          {
            "name": "timeStamp",
            "in": "path",
            "description": "The timestamp of the exported settings file",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsNamesApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsNamesApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsNamesApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsDownloadExportApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsDownloadExportApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsDownloadExportApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings/exportSettings": {
      "post": {
        "tags": [
          "Export Import VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Export all current VPGs settings. (Auth)",
        "operationId": "exportSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsNamesApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsNamesApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsNamesApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsExportApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsExportApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsExportApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings/exportedSettings/{timeStamp}/vpgsinfo": {
      "get": {
        "tags": [
          "Export Import VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Get list of VPGs from exported settings file. (Auth)",
        "operationId": "getExportedSettingsVpgs",
        "parameters": [
          {
            "name": "timeStamp",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsExportVpgInfoApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsExportVpgInfoApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsExportVpgInfoApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings/exportedSettings": {
      "get": {
        "tags": [
          "Export Import VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Get all available exported settings files. (Auth)",
        "operationId": "getExportedSettingsInfo",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsExportedDataInfoApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsExportedDataInfoApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsExportedDataInfoApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings/import": {
      "post": {
        "tags": [
          "Export Import VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Import VPGs. (Auth)",
        "operationId": "importVpg",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.ImportVpgSettingsApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.ImportVpgSettingsApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.ImportVpgSettingsApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsImportVpgsResultApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsImportVpgsResultApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsImportVpgsResultApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ltr/catalog/vms": {
      "get": {
        "tags": [
          "Extended Journal Copy"
        ],
        "summary": "Get a list of available VMs in a Retention set (Auth)",
        "operationId": "getLtrCatalogVmAll",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Catalog.RecoverableVmsApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Catalog.RecoverableVmsApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Catalog.RecoverableVmsApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ltr/catalog/fullretentionsets": {
      "get": {
        "tags": [
          "Extended Journal Copy"
        ],
        "summary": "Get a list of full Retention sets (Auth)",
        "operationId": "GetLtrCatalogFullRetentionSets",
        "parameters": [
          {
            "name": "repositoryIdentifier",
            "in": "query",
            "description": "The identifier of the repository where the Retention Set is stored. Relatd endpoint: `/v1/virtualizationsites/{siteIdentifier}/repositories`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vpgIdentifier",
            "in": "query",
            "description": "The identifier of the VPG. Related endpoint: `v1/vpgs`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zorgIdentifier",
            "in": "query",
            "description": "The identifier of the ZORG. Related endpoint: `v1/zorgs`",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Catalog.RetentionSetsInfoApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Catalog.RetentionSetsInfoApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Catalog.RetentionSetsInfoApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ltr/catalog/fullretentionsets/{retentionSetIdentifier}/incrementals": {
      "get": {
        "tags": [
          "Extended Journal Copy"
        ],
        "summary": "Get a list of incremental Retention sets (Auth)",
        "operationId": "GetLtrCatalogIncrementalsOfRetentionSet",
        "parameters": [
          {
            "name": "retentionSetIdentifier",
            "in": "path",
            "description": "The unique identifier of the Retention Set. Related endpoint: `v1/ltr/catalog/fullretentionsets`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Catalog.RetentionSetsInfoApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Catalog.RetentionSetsInfoApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Catalog.RetentionSetsInfoApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ltr/catalog/deleteretentionsets": {
      "post": {
        "tags": [
          "Extended Journal Copy"
        ],
        "summary": "Delete Retention sets (Auth)",
        "operationId": "DeleteLtrCatalogRetentionSets",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Catalog.DeleteRetentionSetsApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Catalog.DeleteRetentionSetsApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Catalog.DeleteRetentionSetsApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/ltr/catalog/vms/{vmIdentifier}/retentionsets": {
      "get": {
        "tags": [
          "Extended Journal Copy"
        ],
        "summary": "Get a list of the available Retention sets for a VM in all Repositories in the site (Auth)",
        "operationId": "GetLtrCatalogVmRetentionSets",
        "parameters": [
          {
            "name": "vmIdentifier",
            "in": "path",
            "description": "The idenfier of the VM. Related endpoint: `v1/vms`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Catalog.RetentionSetsApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Catalog.RetentionSetsApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Catalog.RetentionSetsApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ltr/catalog/vms/{vmIdentifier}/retentionsets/{retentionSetIdentifier}/settings": {
      "get": {
        "tags": [
          "Extended Journal Copy"
        ],
        "summary": "Get the original settings for a VM in a Retention set (Auth)",
        "operationId": "GetLtrCatalogVmOriginalSettingsForRetentionSet",
        "parameters": [
          {
            "name": "vmIdentifier",
            "in": "path",
            "description": "The idenfier of the VM. Related endpoint: `v1/vms`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "retentionSetIdentifier",
            "in": "path",
            "description": "The unique identifier of the Retention Set. Related endpoint: `v1/ltr/catalog/fullretentionsets`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Catalog.RetentionSetVmSettingsApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Catalog.RetentionSetVmSettingsApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Catalog.RetentionSetVmSettingsApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ltr/restore/vm": {
      "post": {
        "tags": [
          "Extended Journal Copy"
        ],
        "summary": "Restore the VM from the Repository at the recovery site. Returns a token. (Auth)",
        "operationId": "StartLtrRestoreVm",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Restore.RestoreVmApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Restore.RestoreVmApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Restore.RestoreVmApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ltr/health/vpgs": {
      "get": {
        "tags": [
          "Extended Journal Copy"
        ],
        "summary": "Get a list of Extended Journal Copy VPGs (Auth)",
        "operationId": "getLtrVpgHealthAll",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Health.VpgsLtrHealthApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Health.VpgsLtrHealthApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Health.VpgsLtrHealthApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ltr/vpgs/{vpgIdentifier}/retentionstart": {
      "post": {
        "tags": [
          "Extended Journal Copy"
        ],
        "summary": "Start the Manual Retention process (Auth)",
        "operationId": "RetentionStart",
        "parameters": [
          {
            "name": "vpgIdentifier",
            "in": "path",
            "description": "The identifier of the VPG. Related endpoint: `v1/vpgs`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Backup.RetentionStartInfoApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Backup.RetentionStartInfoApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Backup.RetentionStartInfoApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ltr/vpgs/{vpgIdentifier}/retentionabort": {
      "post": {
        "tags": [
          "Extended Journal Copy"
        ],
        "summary": "End the Manual Retention process (Auth)",
        "operationId": "RetentionAbort",
        "parameters": [
          {
            "name": "vpgIdentifier",
            "in": "path",
            "description": "The identifier of the VPG. Related endpoint: `v1/vpgs`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/ltr/repositories": {
      "post": {
        "tags": [
          "Extended Journal Copy"
        ],
        "summary": "Create new repository (Auth)",
        "operationId": "newRepository",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Repositories.RepositoriesSettingsApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Repositories.RepositoriesSettingsApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Repositories.RepositoriesSettingsApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Extended Journal Copy"
        ],
        "summary": "Get All Repositories (Auth)",
        "operationId": "getAllRepositories",
        "parameters": [
          {
            "name": "connectionType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "repositoryName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Azure.Management.Monitor.Fluent.Models.ErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Azure.Management.Monitor.Fluent.Models.ErrorResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Azure.Management.Monitor.Fluent.Models.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ltr/repositories/{repositoryIdentifier}": {
      "put": {
        "tags": [
          "Extended Journal Copy"
        ],
        "summary": "Edit existing repository (Auth)",
        "operationId": "editRepository",
        "parameters": [
          {
            "name": "repositoryIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Repositories.RepositoriesSettingsApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Repositories.RepositoriesSettingsApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Repositories.RepositoriesSettingsApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Extended Journal Copy"
        ],
        "summary": "Delete existing repository (Auth)",
        "operationId": "removeRepository",
        "parameters": [
          {
            "name": "repositoryIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/ltr/repositories/{repositoryId}": {
      "get": {
        "tags": [
          "Extended Journal Copy"
        ],
        "summary": "Get Repository By Id (Auth)",
        "operationId": "getRepositoryById",
        "parameters": [
          {
            "name": "repositoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Azure.Management.Monitor.Fluent.Models.ErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Azure.Management.Monitor.Fluent.Models.ErrorResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Azure.Management.Monitor.Fluent.Models.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/flrs": {
      "post": {
        "tags": [
          "File-level Restore"
        ],
        "summary": "Create a new Mount Session. Mount a disk with specified parameters. Get the FLR session identifier. (Auth)",
        "operationId": "mountFlr",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Flr.FlrMountDataApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Flr.FlrMountDataApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Flr.FlrMountDataApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "File-level Restore"
        ],
        "summary": "Get all mounted volumes. Results can be filtered by a VM identifier. (Auth)",
        "operationId": "getFlrAll",
        "parameters": [
          {
            "name": "vmIdentifier",
            "in": "query",
            "description": "The idenfier of the VM. Related endpoint: `v1/vms`",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Flr.FlrSessionInformationApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Flr.FlrSessionInformationApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Flr.FlrSessionInformationApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/flrs/{flrSessionIdentifier}": {
      "delete": {
        "tags": [
          "File-level Restore"
        ],
        "summary": "Unmount a previously mounted disk. (Auth)",
        "operationId": "dismountFlr",
        "parameters": [
          {
            "name": "flrSessionIdentifier",
            "in": "path",
            "description": "The File-level Restore session identifier. Related endpoint: `v1/flrs`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "File-level Restore"
        ],
        "summary": "Get information about a single mounted disk. (Auth)",
        "operationId": "getFlr",
        "parameters": [
          {
            "name": "flrSessionIdentifier",
            "in": "path",
            "description": "The File-level Restore session identifier. Related endpoint: `v1/flrs`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Flr.FlrSessionInformationApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Flr.FlrSessionInformationApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Flr.FlrSessionInformationApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/flrs/{flrSessionIdentifier}/browse": {
      "post": {
        "tags": [
          "File-level Restore"
        ],
        "summary": "Browse a list of files and folders in a specific path in the mounted disk. (Auth)",
        "operationId": "getFlrPathInfo",
        "parameters": [
          {
            "name": "flrSessionIdentifier",
            "in": "path",
            "description": "The File-level Restore session identifier. Related endpoint: `v1/flrs`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Flr.BrowseDataApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Flr.BrowseDataApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Flr.BrowseDataApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Flr.PathInformationApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Flr.PathInformationApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Flr.PathInformationApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/flrs/{flrSessionIdentifier}/download": {
      "post": {
        "tags": [
          "File-level Restore"
        ],
        "summary": "Get URL link to download all the files from the specified paths. (Auth)",
        "operationId": "getFlrDownload",
        "parameters": [
          {
            "name": "flrSessionIdentifier",
            "in": "path",
            "description": "The File-level Restore session identifier. Related endpoint: `v1/flrs`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Flr.FlrDownloadDataApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Flr.FlrDownloadDataApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Flr.FlrDownloadDataApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/license": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get license details of the ZVM (Auth)",
        "operationId": "getLicense",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Licenses.LicenseApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Licenses.LicenseApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Licenses.LicenseApi"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Licensing"
        ],
        "summary": "Add a new license or update an existing one. (Auth)",
        "operationId": "setLicense",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Licenses.LicenseKeyApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Licenses.LicenseKeyApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Licenses.LicenseKeyApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Licensing"
        ],
        "summary": "Delete the license from the ZVM (Auth)",
        "operationId": "removeLicense",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/localsite": {
      "get": {
        "tags": [
          "Local Site"
        ],
        "summary": "Get information about the local site (Auth)",
        "operationId": "getLocalSiteAll",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Sites.LocalSiteApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Sites.LocalSiteApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Sites.LocalSiteApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/localsite/pairingstatuses": {
      "get": {
        "tags": [
          "Local Site"
        ],
        "summary": "Get the list of acceptable values for site pairing status (Auth)",
        "operationId": "getLocalSitePairingStatusAll",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/localsite/billing/sendUsage": {
      "post": {
        "tags": [
          "Local Site"
        ],
        "summary": "Send billing data to the billing server (Auth)",
        "operationId": "sendLocalSiteBillingUsageData",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/localsite/settings/loginBanner": {
      "put": {
        "tags": [
          "Local Site"
        ],
        "summary": "Set the login banner settings of the current site.\r\nThis API will be deprecated starting Zerto 10.0_U6. Use the following new API for Site Setting configuration: /management/api/settings/v1/settings (Auth)",
        "operationId": "editLocalSiteLoginBanner",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Sites.LoginBannerSettingsApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Sites.LoginBannerSettingsApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Sites.LoginBannerSettingsApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Local Site"
        ],
        "summary": "Get the login banner settings of the current site.",
        "operationId": "getLocalSiteLoginBanner",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Sites.LoginBannerSettingsApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Sites.LoginBannerSettingsApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Sites.LoginBannerSettingsApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/peersites": {
      "get": {
        "tags": [
          "Peer Sites"
        ],
        "summary": "Get a list of all peer sites (Auth)",
        "operationId": "getPeerAll",
        "parameters": [
          {
            "name": "peerName",
            "in": "query",
            "description": "The name of a peer site. The name is case-sensitive",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pairingStatus",
            "in": "query",
            "description": "The pairing status. Related endpoint: `/v1/peersites/pairingstatuses`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location",
            "in": "query",
            "description": "The site location, as specified in the site information",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hostName",
            "in": "query",
            "description": "The IP address of a ZVM, paired with this site",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "port",
            "in": "query",
            "description": "The port used to access peer sites. The default port is 9081",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Sites.PeerSiteApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Sites.PeerSiteApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Sites.PeerSiteApi"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Peer Sites"
        ],
        "summary": "Add a peer site (start pairing). (Auth)",
        "operationId": "startPair",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Sites.PairDataApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Sites.PairDataApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Sites.PairDataApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/peersites/{siteIdentifier}": {
      "get": {
        "tags": [
          "Peer Sites"
        ],
        "summary": "Get information about the specified peer site (Auth)",
        "operationId": "getPeer",
        "parameters": [
          {
            "name": "siteIdentifier",
            "in": "path",
            "description": "The identifier of the peer site. Related endpoints: `v1/peersites`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Sites.PeerSiteApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Sites.PeerSiteApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Sites.PeerSiteApi"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Peer Sites"
        ],
        "summary": "Unpair a peer site (Auth)",
        "operationId": "startUnpair",
        "parameters": [
          {
            "name": "siteIdentifier",
            "in": "path",
            "description": "The identifier of the peer site. Related endpoints: `v1/peersites`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Sites.UnPairDataApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Sites.UnPairDataApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Sites.UnPairDataApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/peersites/pairingstatuses": {
      "get": {
        "tags": [
          "Peer Sites"
        ],
        "summary": "Get the list of acceptable values for site pairing status (Auth)",
        "operationId": "getPeerStatusAll",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/peersites/generatetoken": {
      "post": {
        "tags": [
          "Peer Sites"
        ],
        "summary": "Generate a token for pairing (Auth)",
        "operationId": "getPairingToken",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Sites.PairingTokenResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Sites.PairingTokenResult"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Sites.PairingTokenResult"
                }
              }
            }
          }
        }
      }
    },
    "/v1/reports/recovery": {
      "get": {
        "tags": [
          "Recovery & Resources Reports"
        ],
        "summary": "Generate a recovery report and view information about recovery operations (Auth)",
        "operationId": "getRecoveryReportAll",
        "parameters": [
          {
            "name": "startTime",
            "in": "query",
            "description": "The filterining interval start date-time. Related endpoint: `v1/serverDateTime` for date time format details",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "The filterining interval end date-time. Related endpoint: `v1/serverDateTime` for date time format details",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "The page number to retrieve",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The number of reports to display in a single page. The maximum number of reports per page is 1000",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "vpgName",
            "in": "query",
            "description": "The name of the VPG. You can specify more than one VPG, separated by commas. Related endpoint: `v1/vpgs`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recoveryType",
            "in": "query",
            "description": "The type of recovery operation. Possible values are: `Failover`, `FailoverTest`, `Move`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "Whether the recovery operation has completed. Possible values are: `Success`, `Fail`",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.RecoveryReports.RecoveryReportsApiDataItems.RecoveryReportApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.RecoveryReports.RecoveryReportsApiDataItems.RecoveryReportApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.RecoveryReports.RecoveryReportsApiDataItems.RecoveryReportApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/reports/recovery/{recoveryOperationIdentifier}": {
      "get": {
        "tags": [
          "Recovery & Resources Reports"
        ],
        "summary": "Get a specific recovery report. (Auth)",
        "operationId": "getRecoveryReport",
        "parameters": [
          {
            "name": "recoveryOperationIdentifier",
            "in": "path",
            "description": "Recovery report identifier. Related endpoint: `v1/reports/recovery`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.RecoveryReports.RecoveryReportsApiDataItems.RecoveryReportApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.RecoveryReports.RecoveryReportsApiDataItems.RecoveryReportApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.RecoveryReports.RecoveryReportsApiDataItems.RecoveryReportApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/reports/resources": {
      "get": {
        "tags": [
          "Recovery & Resources Reports"
        ],
        "summary": "Get VM resource reports. (Auth)",
        "operationId": "getResourceReportAll",
        "parameters": [
          {
            "name": "startTime",
            "in": "query",
            "description": "The filterining interval start date-time. Related endpoint: `v1/serverDateTime` for date time format details",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "The filterining interval end date-time. Related endpoint: `v1/serverDateTime` for date time format details",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "The page number to retrieve",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The number of reports to display in a single page. The maximum number of reports per page is 1000",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "zorgName",
            "in": "query",
            "description": "The name of the ZORG in the Zerto Cloud Manager",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vpgName",
            "in": "query",
            "description": "The name of the VPG",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vmName",
            "in": "query",
            "description": "The name of the virtual machine",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "protectedSiteName",
            "in": "query",
            "description": "The name of the protected site",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "protectedClusterName",
            "in": "query",
            "description": "The name of the cluster containing the host where the virtual machine in the protected site is",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "protectedHostName",
            "in": "query",
            "description": "The address or DNS name of the host where the virtual machine in the protected site is",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "protectedOrgVdc",
            "in": "query",
            "description": "The name of the VDC organization in the protected site",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "protectedVcdOrg",
            "in": "query",
            "description": "The name of the VCD organization in the protected site",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recoverySiteName",
            "in": "query",
            "description": "The name of the recovery site",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recoveryClusterName",
            "in": "query",
            "description": "The name of the cluster containing the host where the virtual machine in the recovery site is",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recoveryHostName",
            "in": "query",
            "description": "The address or DNS name of the host where the virtual machine in the recovery site is",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recoveryOrgVdc",
            "in": "query",
            "description": "The name of the VDC organization in the recovery site",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recoveryVcdOrg",
            "in": "query",
            "description": "The name of the recovery VCD organization",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.ResourcesReports.VmResourcesReportApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.ResourcesReports.VmResourcesReportApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.ResourcesReports.VmResourcesReportApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/recoveryScripts/output/files": {
      "get": {
        "tags": [
          "Recovery Scripts"
        ],
        "summary": "Download a file from output directory (Auth)",
        "operationId": "downloadFileFromOutputDirectory",
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "description": "folder1/folder2/file.ps1",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.IO.Stream"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/System.IO.Stream"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/System.IO.Stream"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Recovery Scripts"
        ],
        "summary": "Delete a file in output directory (Auth)",
        "operationId": "deleteOutputFile",
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "description": "folder1/folder2/file.ps1",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/recoveryScripts/output/folders": {
      "delete": {
        "tags": [
          "Recovery Scripts"
        ],
        "summary": "Delete a folder in output directory (Auth)",
        "operationId": "deleteOutputFolder",
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "description": "folder1/folder2",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deleteIfNotEmpty",
            "in": "query",
            "description": "Delete the folder even if it's not empty",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Recovery Scripts"
        ],
        "summary": "Create a folder in output directory (Auth)",
        "operationId": "createOutputFolder",
        "requestBody": {
          "description": "folder1/folder2",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Scripts.CreateFolderApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Scripts.CreateFolderApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Scripts.CreateFolderApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/recoveryScripts/output/items": {
      "get": {
        "tags": [
          "Recovery Scripts"
        ],
        "summary": "Get a list of items (Auth)",
        "operationId": "listOutputItems",
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "description": "folder1/folder2",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search item - *.ps1",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Scripts.ListItemsResultApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Scripts.ListItemsResultApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Scripts.ListItemsResultApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/recoveryScripts/repository/files": {
      "post": {
        "tags": [
          "Recovery Scripts"
        ],
        "summary": "Upload a file to scripts directory (Auth)",
        "operationId": "uploadFileToScriptsDirectory",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "path": {
                    "type": "string",
                    "description": "folder1/folder2"
                  },
                  "overwriteExisting": {
                    "type": "boolean",
                    "description": "Overwrite existing file"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Recovery Scripts"
        ],
        "summary": "Download a file from scripts directory (Auth)",
        "operationId": "downloadFileFromScriptsDirectory",
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "description": "folder1/folder2/file.ps1",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.IO.Stream"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/System.IO.Stream"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/System.IO.Stream"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Recovery Scripts"
        ],
        "summary": "Delete a file in scripts directory (Auth)",
        "operationId": "deleteScriptsFile",
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "description": "folder1/folder2/file.ps1",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/recoveryScripts/repository/folders": {
      "delete": {
        "tags": [
          "Recovery Scripts"
        ],
        "summary": "Delete a folder in scripts directory (Auth)",
        "operationId": "deleteScriptsFolder",
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "description": "folder1/folder2",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deleteIfNotEmpty",
            "in": "query",
            "description": "Delete the folder even if it's not empty",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Recovery Scripts"
        ],
        "summary": "Create a folder in scripts directory (Auth)",
        "operationId": "createScriptsFolder",
        "requestBody": {
          "description": "folder1/folder2",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Scripts.CreateFolderApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Scripts.CreateFolderApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Scripts.CreateFolderApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/recoveryScripts/repository/items": {
      "get": {
        "tags": [
          "Recovery Scripts"
        ],
        "summary": "Get a list of items (Auth)",
        "operationId": "listScriptsItems",
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "description": "folder1/folder2",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search item - *.ps1",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Scripts.ListItemsResultApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Scripts.ListItemsResultApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Scripts.ListItemsResultApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/serverDateTime/serverDateTimeLocal": {
      "get": {
        "tags": [
          "Server Date-Time"
        ],
        "summary": "Get current system date-time in a Local time zone (Auth)",
        "operationId": "SystemDateTimeService_GetDateTimeLocal",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      }
    },
    "/v1/serverDateTime/serverDateTimeUtc": {
      "get": {
        "tags": [
          "Server Date-Time"
        ],
        "summary": "Get current system date-time in UTC format (Auth)",
        "operationId": "SystemDateTimeService_GetDateTimeUtc",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      }
    },
    "/v1/serverDateTime/dateTimeArgument": {
      "get": {
        "tags": [
          "Server Date-Time"
        ],
        "summary": "Check system date time casting from parameters. Specify the date and check the return value to prove your expectations. (Auth)",
        "operationId": "SystemDateTimeService_Post",
        "parameters": [
          {
            "name": "dateTime",
            "in": "query",
            "description": "There are three main ways to specify the date time:\r\nIn milliseconds | In UTC format | In any other general format (Local time)",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "12321 `OR` 2021-06-07T13:16:00.000Z `OR` 6/7/2021"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      }
    },
    "/v1/serviceprofiles": {
      "get": {
        "tags": [
          "Service Profiles"
        ],
        "summary": "Get the list of all service profiles for the site processing the API. (Auth)",
        "operationId": "getServiceProfileAll",
        "parameters": [
          {
            "name": "siteIdentifier",
            "in": "query",
            "description": "The identifier of the site for which service profiles should be returned. Related endpoints: `v1/localsite`, `v1/peersites` <br>NOTE: If used with ZSSP - this parameter is mandatorily required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.ServiceProfiles.ServiceProfileApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.ServiceProfiles.ServiceProfileApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.ServiceProfiles.ServiceProfileApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/serviceprofiles/{serviceProfileIdentifier}": {
      "get": {
        "tags": [
          "Service Profiles"
        ],
        "summary": "Get details of a specified service profile at the site processing the API. (Auth)",
        "operationId": "getServiceProfile",
        "parameters": [
          {
            "name": "serviceProfileIdentifier",
            "in": "path",
            "description": "The service profile ID for which information should be returned. Related endpoint: `v1/serviceprofiles`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.ServiceProfiles.ServiceProfileApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.ServiceProfiles.ServiceProfileApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.ServiceProfiles.ServiceProfileApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/statistics/vms": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Get statistics for all protected VMs (Auth)",
        "operationId": "getVmStatisticAll",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Statistics.VmStatisticsApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Statistics.VmStatisticsApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Statistics.VmStatisticsApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/tasks": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get information about tasks run on this site. (Auth)",
        "operationId": "getTaskAll",
        "parameters": [
          {
            "name": "startedBeforeDate",
            "in": "query",
            "description": "The date-time before the tasks started. Related endpoint: `v1/serverDateTime` for date time format details",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "startedAfterDate",
            "in": "query",
            "description": "The date-time after the tasks started. Related endpoint: `v1/serverDateTime` for date time format details",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "completedBeforeDate",
            "in": "query",
            "description": "The date-time before the tasks ended. Related endpoint: `v1/serverDateTime` for date time format details",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "completedAfterDate",
            "in": "query",
            "description": "The date-time after the tasks ended. Related endpoint: `v1/serverDateTime` for date time format details",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "The task type. Related endpoint `/v1/tasks/types`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of the task. Possible values are: `1 or InProgress` | `3 or Paused` | `4 or Failed` | `6 or Completed` | `7 or Cancelling`",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Tasks.TaskApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Tasks.TaskApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Tasks.TaskApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/tasks/{taskIdentifier}": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get details of a specific task running on the site processing the API. (Auth)",
        "operationId": "getTask",
        "parameters": [
          {
            "name": "taskIdentifier",
            "in": "path",
            "description": "The identifier of the task. Related endpoints: `v1/tasks`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Tasks.TaskApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Tasks.TaskApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Tasks.TaskApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/tasks/types": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get the list of acceptable values for task types. (Auth)",
        "operationId": "getTaskTypeAll",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vcd/vmsWithoutMorefId": {
      "get": {
        "tags": [
          "Virtual Cloud Director"
        ],
        "summary": "Get VCD VMs without MorefId (Auth)",
        "operationId": "GetVmsWithoutMorefId",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Platform.VCDVmMachine"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Platform.VCDVmMachine"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Platform.VCDVmMachine"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vcd/validOrgVdcs": {
      "get": {
        "tags": [
          "Virtual Cloud Director"
        ],
        "summary": "Get Org VDCs with valid configuration (Auth)",
        "operationId": "GetValidOrgVdcs",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Platform.VCDVirtualDatacenter"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Platform.VCDVirtualDatacenter"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Platform.VCDVirtualDatacenter"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vms": {
      "get": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Get information about protected virtual machines. You can filter the results with additional parameters. (Auth)",
        "operationId": "getVmAll",
        "parameters": [
          {
            "name": "vpgName",
            "in": "query",
            "description": "The name of the VPG",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vmName",
            "in": "query",
            "description": "The name of the virtual machine",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of the VPG",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subStatus",
            "in": "query",
            "description": "The substatus of the VPG, for example the VPG is in a bitmap sync",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "protectedSiteType",
            "in": "query",
            "description": "The protected site type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recoverySiteType",
            "in": "query",
            "description": "The recovery site environment",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sourceType",
            "in": "query",
            "description": "Deprecated. See protectedSiteIdentifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetType",
            "in": "query",
            "description": "Deprecated. See recoverySiteIdentifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "protectedSiteIdentifier",
            "in": "query",
            "description": "The identifier of the protected site where the VPG virtual machines are",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recoverySiteIdentifier",
            "in": "query",
            "description": "The identifier of the recovery site where the VPG virtual machines are",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sourceSite",
            "in": "query",
            "description": "Deprecated. See protectedSiteIdentifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetSite",
            "in": "query",
            "description": "Deprecated. See recoverySiteIdentifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationName",
            "in": "query",
            "description": "The ZORG for this VPG",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "priority",
            "in": "query",
            "description": "The priority specified for the VPG",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vmIdentifier",
            "in": "query",
            "description": "The identifier of the virtual machine. Format: `serverid.moref`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeBackupedVms",
            "in": "query",
            "description": "True for including backup virtual machines. False for protected virtual machines only",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeMountedVms",
            "in": "query",
            "description": "Boolean to determine whether to include mounted vms or only unmounted VMs",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vms.VmApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vms.VmApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vms.VmApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vms/{vmIdentifier}": {
      "get": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Get information about a single protected VM. VpgId may be required if VM is protected by more than one VPG. (Auth)",
        "operationId": "getVm",
        "parameters": [
          {
            "name": "vmIdentifier",
            "in": "path",
            "description": "The identifier of the VM. Related endpoint: `v1/vms`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vpgIdentifier",
            "in": "query",
            "description": "The identifier of the VPG. Related endpoint: `v1/vpgs`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeBackupedVms",
            "in": "query",
            "description": "Boolean to determine whether to include backup vms or only currently protected VMs",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeMountedVms",
            "in": "query",
            "description": "Boolean to determine whether to include mounted vms or only unmounted VMs",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vms.VmApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vms.VmApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vms.VmApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vms/{vmIdentifier}/Restore": {
      "post": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Starts Journal Vm restore operation. Returns command task identifier of the operation. (Auth)",
        "operationId": "restoreVm",
        "parameters": [
          {
            "name": "vmIdentifier",
            "in": "path",
            "description": "The identifier of the VM. Related endpoint: `v1/vms`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The restore before commit data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vms.JournalVMRestoreDataApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vms.JournalVMRestoreDataApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vms.JournalVMRestoreDataApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vms/{vmIdentifier}/RestoreCommit": {
      "post": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Commits a restored journal VM. (Auth)",
        "operationId": "commitVm",
        "parameters": [
          {
            "name": "vmIdentifier",
            "in": "path",
            "description": "The identifier of the VM. Related endpoint: `v1/vms`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The identifier of the VPG. Related endpoint: `v1/vpgs`",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/xml": {
              "schema": {
                "type": "string"
              }
            },
            "text/xml": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vms/{vmIdentifier}/RestoreRollback": {
      "post": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Rolls back a restored journal VM. (Auth)",
        "operationId": "rollbackVm",
        "parameters": [
          {
            "name": "vmIdentifier",
            "in": "path",
            "description": "The identifier of the VM. Related endpoint: `v1/vms`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The identifier of the VPG. Related endpoint: `v1/vpgs`",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/xml": {
              "schema": {
                "type": "string"
              }
            },
            "text/xml": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vms/{vmIdentifier}/pointsInTime": {
      "get": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Get all the relevant points in time for the VM. VpgId may be required if the VM is protected in more than one VPG. (Auth)",
        "operationId": "pointsInTime",
        "parameters": [
          {
            "name": "vmIdentifier",
            "in": "path",
            "description": "The identifier of the VM. Related endpoint: `v1/vms`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vpgIdentifier",
            "in": "query",
            "description": "The identifier of the VPG. Related endpoint: `v1/vpgs`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "The filter interval start date-time. Related endpoint: `v1/serverDateTime` for date-time format details",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The filter interval end date-time. Related endpoint: `v1/serverDateTime` for date-time format details",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.PointsInTime.PointInTimeApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.PointsInTime.PointInTimeApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.PointsInTime.PointInTimeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vms/{vmIdentifier}/pointsInTime/stats": {
      "get": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Get the earliest and latest points in time for the VM. VpgId may be required if the VM is protected by more than one VPG. (Auth)",
        "operationId": "pointsInTimeStats",
        "parameters": [
          {
            "name": "vmIdentifier",
            "in": "path",
            "description": "The identifier of the VM. Related endpoint: `v1/vms`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vpgIdentifier",
            "in": "query",
            "description": "The name of the VPG which protects the virtual machine",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.PointsInTime.PointInTimeStatsApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.PointsInTime.PointInTimeStatsApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.PointsInTime.PointInTimeStatsApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites": {
      "get": {
        "tags": [
          "Virtualization Sites"
        ],
        "summary": "Get a list of virtual sites connected to this site and all peer sites. (Auth)",
        "operationId": "getVirtualizationSiteAll",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.VirtualizationSiteApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.VirtualizationSiteApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.VirtualizationSiteApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}": {
      "get": {
        "tags": [
          "Virtualization Sites"
        ],
        "summary": "Get details of the site. (Auth)",
        "operationId": "getVirtualizationSite",
        "parameters": [
          {
            "name": "siteIdentifier",
            "in": "path",
            "description": "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.VirtualizationSiteApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.VirtualizationSiteApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.VirtualizationSiteApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/vms": {
      "get": {
        "tags": [
          "Virtualization Sites"
        ],
        "summary": "Get the list of eligible VMs for protection that are not currently protected at the site. (Auth)",
        "operationId": "getVirtualizationSiteVmAll",
        "parameters": [
          {
            "name": "siteIdentifier",
            "in": "path",
            "description": "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.VmNativeApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.VmNativeApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.VmNativeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/vcdvapps": {
      "get": {
        "tags": [
          "Virtualization Sites"
        ],
        "summary": "Get the list of unprotected VCD vApps at the site (Auth)",
        "operationId": "getVirtualizationSiteVmVcdVappAll",
        "parameters": [
          {
            "name": "siteIdentifier",
            "in": "path",
            "description": "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.VCDVappNativeApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.VCDVappNativeApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.VCDVappNativeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/datastores": {
      "get": {
        "tags": [
          "Virtualization Sites"
        ],
        "summary": "Get information about datastores at the site (Auth)",
        "operationId": "getVirtualizationSiteDatastoreAll",
        "parameters": [
          {
            "name": "siteIdentifier",
            "in": "path",
            "description": "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.DatastoreNativeApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.DatastoreNativeApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.DatastoreNativeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/folders": {
      "get": {
        "tags": [
          "Virtualization Sites"
        ],
        "summary": "Get the list of folders for the site (Auth)",
        "operationId": "getVirtualizationSiteFolderAll",
        "parameters": [
          {
            "name": "siteIdentifier",
            "in": "path",
            "description": "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.FolderNativeApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.FolderNativeApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.FolderNativeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/datastoreclusters": {
      "get": {
        "tags": [
          "Virtualization Sites"
        ],
        "summary": "Get the list of datastore clusters for the site (Auth)",
        "operationId": "getVirtualizationSiteDatastoreClusterAll",
        "parameters": [
          {
            "name": "siteIdentifier",
            "in": "path",
            "description": "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.DatastoreClusterNativeApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.DatastoreClusterNativeApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.DatastoreClusterNativeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/resourcepools": {
      "get": {
        "tags": [
          "Virtualization Sites"
        ],
        "summary": "Get the list of resource pools for the site (Auth)",
        "operationId": "getVirtualizationSiteResourcePoolAll",
        "parameters": [
          {
            "name": "siteIdentifier",
            "in": "path",
            "description": "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.ResourcePoolNativeApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.ResourcePoolNativeApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.ResourcePoolNativeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/orgvdcs": {
      "get": {
        "tags": [
          "Virtualization Sites"
        ],
        "summary": "Get the list of organization VDC at the site (Auth)",
        "operationId": "getVirtualizationSiteOrgVdcAll",
        "parameters": [
          {
            "name": "siteIdentifier",
            "in": "path",
            "description": "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.OrgVdcNativeApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.OrgVdcNativeApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.OrgVdcNativeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/networks": {
      "get": {
        "tags": [
          "Virtualization Sites"
        ],
        "summary": "Get the list of networks (Auth)",
        "operationId": "getVirtualizationSiteNetworkAll",
        "parameters": [
          {
            "name": "siteIdentifier",
            "in": "path",
            "description": "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.NetworkNativeApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.NetworkNativeApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.NetworkNativeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/hosts": {
      "get": {
        "tags": [
          "Virtualization Sites"
        ],
        "summary": "Get information about hosts at the site (Auth)",
        "operationId": "getVirtualizationSiteHostAll",
        "parameters": [
          {
            "name": "siteIdentifier",
            "in": "path",
            "description": "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.HostNativeApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.HostNativeApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.HostNativeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/hostclusters": {
      "get": {
        "tags": [
          "Virtualization Sites"
        ],
        "summary": "Get the list of host clusters at the site (Auth)",
        "operationId": "getVirtualizationSiteHostClusterAll",
        "parameters": [
          {
            "name": "siteIdentifier",
            "in": "path",
            "description": "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.HostClusterNativeApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.HostClusterNativeApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.HostClusterNativeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/hosts/{hostIdentifier}": {
      "get": {
        "tags": [
          "Virtualization Sites"
        ],
        "summary": "Get information about specific host at the site (Auth)",
        "operationId": "getVirtualizationSiteHost",
        "parameters": [
          {
            "name": "siteIdentifier",
            "in": "path",
            "description": "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hostIdentifier",
            "in": "path",
            "description": "The identifier of the host. Related endpoints: `/v1/virtualizationsites/{siteIdentifier}/hosts`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.HostNativeApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.HostNativeApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.HostNativeApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/repositories": {
      "get": {
        "tags": [
          "Virtualization Sites"
        ],
        "summary": "Get the list of Repositories at the site (Auth)",
        "operationId": "getVirtualizationSiteRepositoryAll",
        "parameters": [
          {
            "name": "siteIdentifier",
            "in": "path",
            "description": "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.BackupTargetInfoRepositoriesApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.BackupTargetInfoRepositoriesApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.BackupTargetInfoRepositoriesApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/orgvdcs/{orgVdcIdentifier}/networks": {
      "get": {
        "tags": [
          "Virtualization Sites"
        ],
        "summary": "Get list of virtualization site networks for a specified org vDc (Auth)",
        "operationId": "getVirtualizationSiteOrgVdcNetworkAll",
        "parameters": [
          {
            "name": "siteIdentifier",
            "in": "path",
            "description": "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orgVdcIdentifier",
            "in": "path",
            "description": "The identifier of the VDC org. Related endpoint: `/v1/virtualizationsites/{siteIdentifier}/orgvdcs`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.NetworkNativeApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.NetworkNativeApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.NetworkNativeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/orgvdcs/{orgVdcIdentifier}/storagepolicies": {
      "get": {
        "tags": [
          "Virtualization Sites"
        ],
        "summary": "Get the list of storage policies at the site (Auth)",
        "operationId": "getVirtualizationSiteStoragePolicyAll",
        "parameters": [
          {
            "name": "siteIdentifier",
            "in": "path",
            "description": "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orgVdcIdentifier",
            "in": "path",
            "description": "The identifier of the VDC org. Related endpoint: `/v1/virtualizationsites/{siteIdentifier}/orgvdcs`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.StoragePolicyApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.StoragePolicyApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.StoragePolicyApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/devices": {
      "get": {
        "tags": [
          "Virtualization Sites"
        ],
        "summary": "Get a list of all avaialable devices for all available hosts in the site (Auth)",
        "operationId": "getVirtualizationSiteDeviceAll",
        "parameters": [
          {
            "name": "siteIdentifier",
            "in": "path",
            "description": "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hostIdentifier",
            "in": "query",
            "description": "The identifier of the host. Related endpoint: `/v1/virtualizationsites/{siteIdentifier}/hosts`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceName",
            "in": "query",
            "description": "The name of the device",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.DeviceDataApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.DeviceDataApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.DeviceDataApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/publiccloud/virtualNetworks": {
      "get": {
        "tags": [
          "Virtualization Sites"
        ],
        "summary": "Get the list of virtual networks at the site (Auth)",
        "operationId": "getPublicCloudNetworkAll",
        "parameters": [
          {
            "name": "siteIdentifier",
            "in": "path",
            "description": "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "virtualNetworkIdentifier",
            "in": "query",
            "description": "The virtual network identifier. Related endpoint: `v1/virtualizationsites/{siteIdentifier}/publiccloud/virtualNetworks`",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.VirtualNetworkApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.VirtualNetworkApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.VirtualNetworkApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/publiccloud/subnets": {
      "get": {
        "tags": [
          "Virtualization Sites"
        ],
        "summary": "Get the list of subnets at the site (Auth)",
        "operationId": "getPublicCloudSubnetAll",
        "parameters": [
          {
            "name": "siteIdentifier",
            "in": "path",
            "description": "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "virtualNetworkIdentifier",
            "in": "query",
            "description": "The virtual network identifier. Related endpoint: `v1/virtualizationsites/{siteIdentifier}/publiccloud/virtualNetworks`",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.SubnetApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.SubnetApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.SubnetApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/publiccloud/securityGroups": {
      "get": {
        "tags": [
          "Virtualization Sites"
        ],
        "summary": "Get the list of security groups at the site (Auth)",
        "operationId": "getPublicCloudSecurityGroupAll",
        "parameters": [
          {
            "name": "siteIdentifier",
            "in": "path",
            "description": "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.SecurityGroupApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.SecurityGroupApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.SecurityGroupApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/publiccloud/vmInstanceTypes": {
      "get": {
        "tags": [
          "Virtualization Sites"
        ],
        "summary": "Get the list of virtual machine instance types at the site (Auth)",
        "operationId": "getPublicCloudVmInstanceTypeAll",
        "parameters": [
          {
            "name": "siteIdentifier",
            "in": "path",
            "description": "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.VmInstanceTypeApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.VmInstanceTypeApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.VmInstanceTypeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/publiccloud/resourceGroups": {
      "get": {
        "tags": [
          "Virtualization Sites"
        ],
        "summary": "Get the list of resource groups at the site (Auth)",
        "operationId": "getPublicCloudResourceGroupsAll",
        "parameters": [
          {
            "name": "siteIdentifier",
            "in": "path",
            "description": "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.ResourceGroupApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.ResourceGroupApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.ResourceGroupApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/publiccloud/keyscontainers": {
      "get": {
        "tags": [
          "Virtualization Sites"
        ],
        "summary": "Get the list of KeysContainers for the specified site. (Auth)",
        "operationId": "getPublicCloudKeysContainers",
        "parameters": [
          {
            "name": "siteIdentifier",
            "in": "path",
            "description": "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.KeysContainerApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.KeysContainerApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.KeysContainerApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/publiccloud/encryptionkeys/{encryptionKeyId}": {
      "get": {
        "tags": [
          "Virtualization Sites"
        ],
        "summary": "Get an EncryptionKey object based on the given EncryptionKeyId (Auth)",
        "operationId": "getPublicCloudEncryptionKey",
        "parameters": [
          {
            "name": "siteIdentifier",
            "in": "path",
            "description": "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "encryptionKeyId",
            "in": "path",
            "description": "URL Encoded EncryptionKeyId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.EncryptionKeyApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.EncryptionKeyApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.EncryptionKeyApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/publiccloud/encryptionkeys": {
      "get": {
        "tags": [
          "Virtualization Sites"
        ],
        "summary": "Get the list of CMKs for the specified site and keys container. (Auth)",
        "operationId": "getPublicCloudEncryptionKeysAll",
        "parameters": [
          {
            "name": "siteIdentifier",
            "in": "path",
            "description": "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "keysContainerId",
            "in": "query",
            "description": "Mandatory. URL Encoded KeysContainerId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.EncryptionKeyApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.EncryptionKeyApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.EncryptionKeyApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/publiccloud/managedidentities": {
      "get": {
        "tags": [
          "Virtualization Sites"
        ],
        "summary": "Get the list of managed identities. (Auth)",
        "operationId": "getPublicCloudManagedIdentities",
        "parameters": [
          {
            "name": "siteIdentifier",
            "in": "path",
            "description": "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.ManagedIdentityApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.ManagedIdentityApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.ManagedIdentityApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/virtualizationsites/{siteIdentifier}/publiccloud/diskencryptionkeys": {
      "get": {
        "tags": [
          "Virtualization Sites"
        ],
        "summary": "Get the list of DiskEncryptionKeys. (Auth)",
        "operationId": "getPublicCloudDiskEncryptionKeys",
        "parameters": [
          {
            "name": "siteIdentifier",
            "in": "path",
            "description": "The internal ZVM site identifier. Related endpoints: `v1/localsite`, `v1/peersites`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.DiskEncryptionKeyApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.DiskEncryptionKeyApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.DiskEncryptionKeyApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/volumes": {
      "get": {
        "tags": [
          "Volumes"
        ],
        "summary": "Get a list of volumes info in the current site. For ZSSP users, the information retrieved is for Protected entities only. (Auth)",
        "operationId": "getVolumeAll",
        "parameters": [
          {
            "name": "volumeType",
            "in": "query",
            "description": "The volume type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vpgIdentifier",
            "in": "query",
            "description": "The identifier of the VPG. Related endpoint: `v1/vpgs`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datastoreIdentifier",
            "in": "query",
            "description": "The identifier of the datastore. Related endpoint: `/v1/datastores`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "protectedVmIdentifier",
            "in": "query",
            "description": "The identifier of the protected virtual machine. Related endpoint: `v1/vms`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "owningVmIdentifier",
            "in": "query",
            "description": "The identifier of the owning virtual machine. Related endpoint: `v1/vms`",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Volumes.VolumeApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Volumes.VolumeApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Volumes.VolumeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings": {
      "post": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Create a new VPG settings object, returns the settings object identifier (Auth)",
        "operationId": "newVpgSetting",
        "parameters": [
          {
            "name": "repopulateSettings",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Get all VPG settings. (Auth)",
        "operationId": "getVpgSettingAll",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings/copyVpgSettings": {
      "post": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Create a new VPG settings object from an existing VPG, returns the settings object identifier (Auth)",
        "operationId": "copyVpgSetting",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.CopyVpgSettingsApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.CopyVpgSettingsApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.CopyVpgSettingsApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}": {
      "put": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Edit the VPG settings. (Auth)",
        "operationId": "editVpgSetting",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Delete VPG settings. (Auth)",
        "operationId": "removeVpgSetting",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Get VPG settings (Auth)",
        "operationId": "getVpgSetting",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}/basic": {
      "put": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Edit VPG settings with basic settings (Auth)",
        "operationId": "editVpgSettingBasic",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsBasicApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsBasicApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsBasicApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Delete Basic VPG settings. (Auth)",
        "operationId": "removeVpgSettingsBasic",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Get Basic VPG settings (Auth)",
        "operationId": "getVpgSettingBasic",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsBasicApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsBasicApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsBasicApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}/bootgroup": {
      "put": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Edit VPG settings with Bootgroups settings (Auth)",
        "operationId": "editVpgSettingBasicBootGroup",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsBootGroupsApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsBootGroupsApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsBootGroupsApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Delete Bootgroups VPG settings (Auth)",
        "operationId": "deleteVpgSettingBootGroup",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Get Bootgroups VPG settings (Auth)",
        "operationId": "getVpgSettingBootGroup",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsBootGroupsApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsBootGroupsApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsBootGroupsApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}/scripting": {
      "put": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Update Scripting VPG settings (Auth)",
        "operationId": "editVpgSettingScript",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsScriptsApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsScriptsApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsScriptsApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Delete Scripting VPG settings (Auth)",
        "operationId": "deleteVpgSettingScript",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Get Scripting VPG settings (Auth)",
        "operationId": "getVpgSettingScript",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsScriptsApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsScriptsApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsScriptsApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}/recovery": {
      "put": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Update Recovery VPG settings (Auth)",
        "operationId": "editVpgSettingRecovery",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsRecoveryApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsRecoveryApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsRecoveryApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Delete Recovery VPG settings (Auth)",
        "operationId": "removeVpgSettingRecovery",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Get Recovery VPG settings (Auth)",
        "operationId": "getVpgSettingRecovery",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsRecoveryApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsRecoveryApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsRecoveryApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}/journal": {
      "put": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Update VPG Journal settings (Auth)",
        "operationId": "editVpgSettingJournal",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsJournalApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsJournalApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsJournalApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Delete VPG Journal settings (Auth)",
        "operationId": "removeVpgSettingJournal",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Get VPG Journal settings (Auth)",
        "operationId": "getVpgSettingJournal",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsJournalApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsJournalApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsJournalApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}/scratch": {
      "put": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Update VPG Scratch settings (Auth)",
        "operationId": "editVpgSettingScratch",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsScratchApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsScratchApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsScratchApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Delete VPG Scratch settings (Auth)",
        "operationId": "removeVpgSettingScratch",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Get VPG Scratch settings (Auth)",
        "operationId": "getVpgSettingScratch",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsScratchApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsScratchApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsScratchApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}/ltr": {
      "get": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Get Extended Journal Copy VPG settings (Auth)",
        "operationId": "getVpgSettingLtr",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsLtrApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsLtrApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsLtrApi"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Create Extended Journal Copy VPG settings (Auth)",
        "operationId": "newVpgSettingLtr",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsLtrApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsLtrApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsLtrApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Edit Extended Journal Copy VPG settings (Auth)",
        "operationId": "editVpgSettingLtr",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsLtrApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsLtrApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsLtrApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Delete Extended Journal Copy VPG settings (Auth)",
        "operationId": "removeVpgSettingLtr",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}/networks": {
      "put": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Update Network VPG settings (Auth)",
        "operationId": "editVpgSettingLtrNetwork",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsNetworksApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsNetworksApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsNetworksApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Delete Network VPG settings (Auth)",
        "operationId": "removeVpgSettingLtrNetwork",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Get Network VPG settings (Auth)",
        "operationId": "getVpgSettingLtrNetworkAll",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsNetworksApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsNetworksApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsNetworksApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}/vms": {
      "post": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Add new VMs to VPG settings (Auth)",
        "operationId": "newVpgSettingVm",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Get VMs from VPG settings (Auth)",
        "operationId": "getVpgSettingVmAll",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}/vms/{vmIdentifier}": {
      "put": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Edit the VPG settings of a single VM (Auth)",
        "operationId": "editVpgSettingVm",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vmIdentifier",
            "in": "path",
            "description": "Vm Identifier.Related endpoint: `v1/vms`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Delete the VPG settings of a single VM (Auth)",
        "operationId": "removeVpgSettingVm",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vmIdentifier",
            "in": "path",
            "description": "Vm Identifier.Related endpoint: `v1/vms`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Get VPG settings of a single VM (Auth)",
        "operationId": "getVpgSettingVm",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vmIdentifier",
            "in": "path",
            "description": "Vm Identifier.Related endpoint: `v1/vms`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}/vms/{vmIdentifier}/volumes": {
      "get": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Get Volumes of specific VM in VPG settings (Auth)",
        "operationId": "getVpgSettingVmVolumeAll",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vmIdentifier",
            "in": "path",
            "description": "Vm Identifier.Related endpoint: `v1/vms`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmVolumeApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmVolumeApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmVolumeApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}/vms/{vmIdentifier}/volumes/{volumeIdentifier}": {
      "put": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Update Volume details of specific VM in VPG settings (Auth)",
        "operationId": "editVpgSettingVmVolume",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vmIdentifier",
            "in": "path",
            "description": "Vm Identifier.Related endpoint: `v1/vms`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "volumeIdentifier",
            "in": "path",
            "description": "Volume Identifier. Related endpoint: `Get: v1/volumes`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmVolumeApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmVolumeApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmVolumeApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Get the Volume details of specific VM in VPG settings (Auth)",
        "operationId": "getVpgSettingVmVolume",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vmIdentifier",
            "in": "path",
            "description": "Vm Identifier.Related endpoint: `v1/vms`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "volumeIdentifier",
            "in": "path",
            "description": "Volume Identifier. Related endpoint: `Get: v1/volumes`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmVolumeApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmVolumeApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmVolumeApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}/vms/{vmIdentifier}/nics": {
      "get": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Get NICs of specific VM in VPG settings (Auth)",
        "operationId": "getVpgSettingVmNicAll",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vmIdentifier",
            "in": "path",
            "description": "Vm Identifier.Related endpoint: `v1/vms`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmNicApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmNicApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmNicApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}/vms/{vmIdentifier}/nics/{nicIdentifier}": {
      "put": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Edit NICs details of specific VM in VPG settings (Auth)",
        "operationId": "editVpgSettingVmNic",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vmIdentifier",
            "in": "path",
            "description": "Vm Identifier.Related endpoint: `v1/vms`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nicIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmNicApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmNicApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmNicApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Delete NICs of specific VM in VPG settings (Auth)",
        "operationId": "removeVpgSettingVmNic",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vmIdentifier",
            "in": "path",
            "description": "Vm Identifier.Related endpoint: `v1/vms`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nicIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Get the NIC details of specific VM in VPG settings (Auth)",
        "operationId": "getVpgSettingVmNic",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vmIdentifier",
            "in": "path",
            "description": "Vm Identifier.Related endpoint: `v1/vms`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nicIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmNicApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmNicApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmNicApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}/commit": {
      "post": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Commit and deploy the VPG settings. Returns the command task identifier. (Auth)",
        "operationId": "startVpgSettingCommit",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgSettings/{vpgSettingsIdentifier}/priority": {
      "get": {
        "tags": [
          "VPG(Virtual Protection Group) Settings"
        ],
        "summary": "Get values for Priority. (Auth)",
        "operationId": "getVpgSettingPossiblePriorityAll",
        "parameters": [
          {
            "name": "vpgSettingsIdentifier",
            "in": "path",
            "description": "Vpg Settings Identfifier. Related endpoint: `/v1/vpgSettings`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs": {
      "get": {
        "tags": [
          "VPGs (Virtual Protection Groups)"
        ],
        "summary": "Get information about all VPGs. (Auth)",
        "operationId": "getVpgAll",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "VPG name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "VPG status",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subStatus",
            "in": "query",
            "description": "The substatus of the VPG, for example the VPG is in a bitmap sync",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "protectedSiteType",
            "in": "query",
            "description": "The protected site type. This filter behaves in the same way as the sourceType filter. Possible values are: `0 or VCVpg` | `2 or VCDvApp`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recoverySiteType",
            "in": "query",
            "description": "The type of the recovery site. This filter behaves in the same way as the targetType filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "protectedSiteIdentifier",
            "in": "query",
            "description": "The identifier of the protected site",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recoverySiteIdentifier",
            "in": "query",
            "description": "The identifier of the recovery site",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sourceSite",
            "in": "query",
            "description": "Deprecated. See protectedSiteIdentifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetSite",
            "in": "query",
            "description": "Deprecated. See recoverySiteIdentifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sourceType",
            "in": "query",
            "description": "Deprecated. See protectedSiteType",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetType",
            "in": "query",
            "description": "Deprecated. See recoverySiteType",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationName",
            "in": "query",
            "description": "The ZORG for this VPG",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zorgIdentifier",
            "in": "query",
            "description": "The internal identifier for the ZORG",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "priority",
            "in": "query",
            "description": "The VPG priority. Related endpoint: `/v1/vpgs/priorities`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceProfileIdentifier",
            "in": "query",
            "description": "The identifier of the service profile to use for the VPG when a Zerto Cloud Manager is used",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "backupEnabled",
            "in": "query",
            "description": "Deprecated",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.VpgApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.VpgApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.VpgApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/{vpgIdentifier}": {
      "get": {
        "tags": [
          "VPGs (Virtual Protection Groups)"
        ],
        "summary": "Get information about the VPG. (Auth)",
        "operationId": "getVpg",
        "parameters": [
          {
            "name": "vpgIdentifier",
            "in": "path",
            "description": "VPG identifier. Related endpoint: `v1/vpgs`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.VpgApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.VpgApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.VpgApi"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VPGs (Virtual Protection Groups)"
        ],
        "summary": "Delete the VPG (Auth)",
        "operationId": "startVpgDelete",
        "parameters": [
          {
            "name": "vpgIdentifier",
            "in": "path",
            "description": "VPG identifier. Related endpoint: `v1/vpgs`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.VpgDeleteDataApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.VpgDeleteDataApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.VpgDeleteDataApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/{vpgIdentifier}/checkpoints": {
      "get": {
        "tags": [
          "VPGs (Virtual Protection Groups)"
        ],
        "summary": "Get a list of checkpoints for the VPG. You can filter the results with additional parameters. (Auth)",
        "operationId": "getVpgCheckpointAll",
        "parameters": [
          {
            "name": "vpgIdentifier",
            "in": "path",
            "description": "VPG identifier. Related endpoint: `v1/vpgs`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "The start date of the checkpoint",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The end date of the checkpoint",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.CheckpointApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.CheckpointApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.CheckpointApi"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "VPGs (Virtual Protection Groups)"
        ],
        "summary": "Create a tagged checkpoint for the VPG. (Auth)",
        "operationId": "startVpgTaggedCheckpointInsert",
        "parameters": [
          {
            "name": "vpgIdentifier",
            "in": "path",
            "description": "VPG identifier. Related endpoint: `v1/vpgs`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.VpgInsertTagCheckpointDataApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.VpgInsertTagCheckpointDataApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.VpgInsertTagCheckpointDataApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/{vpgIdentifier}/checkpoints/stats": {
      "get": {
        "tags": [
          "VPGs (Virtual Protection Groups)"
        ],
        "summary": "Get checkpoints statistics for a VPG. (Auth)",
        "operationId": "getVpgCheckpointStatAll",
        "parameters": [
          {
            "name": "vpgIdentifier",
            "in": "path",
            "description": "VPG identifier. Related endpoint: `v1/vpgs`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.VpgCheckpointsStatsApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.VpgCheckpointsStatsApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.VpgCheckpointsStatsApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/{vpgIdentifier}/FailoverTest": {
      "post": {
        "tags": [
          "VPGs (Virtual Protection Groups)"
        ],
        "summary": "Start a failover test using a specific checkpoint or the latest checkpoint if one is not . (Auth)",
        "operationId": "startVpgFailoverTest",
        "parameters": [
          {
            "name": "vpgIdentifier",
            "in": "path",
            "description": "VPG identifier. Related endpoint: `v1/vpgs`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.FailOverTestStartDataApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.FailOverTestStartDataApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.FailOverTestStartDataApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/{vpgIdentifier}/FailoverTestStop": {
      "post": {
        "tags": [
          "VPGs (Virtual Protection Groups)"
        ],
        "summary": "Stops a failover test. Specify if test was successful and provide a summary. (Auth)",
        "operationId": "stopVpgFailoverTest",
        "parameters": [
          {
            "name": "vpgIdentifier",
            "in": "path",
            "description": "VPG identifier. Related endpoint: `v1/vpgs`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.StopFailoverTestDataApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.StopFailoverTestDataApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.StopFailoverTestDataApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/{vpgIdentifier}/Failover": {
      "post": {
        "tags": [
          "VPGs (Virtual Protection Groups)"
        ],
        "summary": "Starts a Failover of a VPG using a checkpoint. Returns the TaskIdentifier of the operation, which can be used to monitor the operation. (Auth)",
        "operationId": "startVpgFailover",
        "parameters": [
          {
            "name": "vpgIdentifier",
            "in": "path",
            "description": "VPG identifier. Related endpoint: `v1/vpgs`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.FailoverDataApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.FailoverDataApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.FailoverDataApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/{vpgIdentifier}/Move": {
      "post": {
        "tags": [
          "VPGs (Virtual Protection Groups)"
        ],
        "summary": "Starts a Move of a VPG using a checkpoint. Returns the TaskIdentifier of the operation, which can be used to monitor the operation. (Auth)",
        "operationId": "startVpgMove",
        "parameters": [
          {
            "name": "vpgIdentifier",
            "in": "path",
            "description": "VPG identifier. Related endpoint: `v1/vpgs`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.MoveVpgDataApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.MoveVpgDataApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.MoveVpgDataApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/{vpgIdentifier}/moveRollback": {
      "post": {
        "tags": [
          "VPGs (Virtual Protection Groups)"
        ],
        "summary": "Rolls back the VPG after Move. Returns the TaskIdentifier of the operation, which can be used to monitor the operation. (Auth)",
        "operationId": "startVpgMoveRollback",
        "parameters": [
          {
            "name": "vpgIdentifier",
            "in": "path",
            "description": "VPG identifier. Related endpoint: `v1/vpgs`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/{vpgIdentifier}/MoveCommit": {
      "post": {
        "tags": [
          "VPGs (Virtual Protection Groups)"
        ],
        "summary": "Commits the VPG. Returns the TaskIdentifier of the operation, which can be used to monitor the operation. (Auth)",
        "operationId": "startVpgMoveCommit",
        "parameters": [
          {
            "name": "vpgIdentifier",
            "in": "path",
            "description": "VPG identifier. Related endpoint: `v1/vpgs`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.MoveCommitVpgDataApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.MoveCommitVpgDataApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.MoveCommitVpgDataApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/{vpgIdentifier}/FailoverCommit": {
      "post": {
        "tags": [
          "VPGs (Virtual Protection Groups)"
        ],
        "summary": "Commits the Failover of a VPG. Returns the TaskIdentifier of the operation, which can be used to monitor the operation. (Auth)",
        "operationId": "startVpgFailoverCommit",
        "parameters": [
          {
            "name": "vpgIdentifier",
            "in": "path",
            "description": "VPG identifier. Related endpoint: `v1/vpgs`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.FailoverCommitDataApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.FailoverCommitDataApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.FailoverCommitDataApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/{vpgIdentifier}/FailoverRollback": {
      "post": {
        "tags": [
          "VPGs (Virtual Protection Groups)"
        ],
        "summary": "Rolls back the VPG after Failover. Returns the TaskIdentifier of the operation, which can be used to monitor the operation. (Auth)",
        "operationId": "startVpgFailoverRollback",
        "parameters": [
          {
            "name": "vpgIdentifier",
            "in": "path",
            "description": "VPG identifier. Related endpoint: `v1/vpgs`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/{vpgIdentifier}/CloneStart": {
      "post": {
        "tags": [
          "VPGs (Virtual Protection Groups)"
        ],
        "summary": "Clone a VPG using a specific checkpoint or the latest checkpoint if one is not (Auth)",
        "operationId": "startVpgClone",
        "parameters": [
          {
            "name": "vpgIdentifier",
            "in": "path",
            "description": "VPG identifier. Related endpoint: `v1/vpgs`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.CloneStartDataApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.CloneStartDataApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.CloneStartDataApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/{vpgIdentifier}/CloneAbort": {
      "post": {
        "tags": [
          "VPGs (Virtual Protection Groups)"
        ],
        "summary": "Abort cloning of the VPG (Auth)",
        "operationId": "stopVpgClone",
        "parameters": [
          {
            "name": "vpgIdentifier",
            "in": "path",
            "description": "VPG identifier. Related endpoint: `v1/vpgs`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/vpgs/retentionpolicies": {
      "get": {
        "tags": [
          "VPGs (Virtual Protection Groups)"
        ],
        "summary": "Get the list of values for VPG retention policy. (Auth)",
        "operationId": "getVpgRetentionPolicyAll",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/priorities": {
      "get": {
        "tags": [
          "VPGs (Virtual Protection Groups)"
        ],
        "summary": "Get the list of values for VPG priority. (Auth)",
        "operationId": "getVpgPriorityAll",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/entitytypes": {
      "get": {
        "tags": [
          "VPGs (Virtual Protection Groups)"
        ],
        "summary": "Get the list of values for VPG entity. (Auth)",
        "operationId": "getVpgEntityTypeAll",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/statuses": {
      "get": {
        "tags": [
          "VPGs (Virtual Protection Groups)"
        ],
        "summary": "Get the list of values for VPG status. (Auth)",
        "operationId": "getVpgStatusAll",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/substatuses": {
      "get": {
        "tags": [
          "VPGs (Virtual Protection Groups)"
        ],
        "summary": "Get the list of values for VPG sub status. (Auth)",
        "operationId": "getVpgSubStatusAll",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/failovershutdownpolicies": {
      "get": {
        "tags": [
          "VPGs (Virtual Protection Groups)"
        ],
        "summary": "Get the list of values for VPG failover shutdown policy. (Auth)",
        "operationId": "getVpgFailoverShutdownPolicyAll",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/failovercommitpolicies": {
      "get": {
        "tags": [
          "VPGs (Virtual Protection Groups)"
        ],
        "summary": "Get the list of values for VPG failover commit policy. (Auth)",
        "operationId": "getVpgFailoverCommitPolicyAll",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/{vpgIdentifier}/pause": {
      "post": {
        "tags": [
          "VPGs (Virtual Protection Groups)"
        ],
        "summary": "Pause the protection of the VPG. (Auth)",
        "operationId": "startVpgPause",
        "parameters": [
          {
            "name": "vpgIdentifier",
            "in": "path",
            "description": "VPG identifier. Related endpoint: `v1/vpgs`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/{vpgIdentifier}/resume": {
      "post": {
        "tags": [
          "VPGs (Virtual Protection Groups)"
        ],
        "summary": "Resume the protection of the VPG. (Auth)",
        "operationId": "startVpgResume",
        "parameters": [
          {
            "name": "vpgIdentifier",
            "in": "path",
            "description": "VPG identifier. Related endpoint: `v1/vpgs`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vpgs/{vpgIdentifier}/forcesync": {
      "post": {
        "tags": [
          "VPGs (Virtual Protection Groups)"
        ],
        "summary": "Force synchronization of the VPG. (Auth)",
        "operationId": "startVpgForceSync",
        "parameters": [
          {
            "name": "vpgIdentifier",
            "in": "path",
            "description": "VPG identifier. Related endpoint: `v1/vpgs`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vras": {
      "get": {
        "tags": [
          "VRAs (Virtual Replication Appliances)"
        ],
        "summary": "Get information about all VRAs. (Auth)",
        "operationId": "getVraAll",
        "parameters": [
          {
            "name": "vraName",
            "in": "query",
            "description": "VRA name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "VRA status. List of values for VRA status: `/v1/vras/statuses`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vraVersion",
            "in": "query",
            "description": "VRA version",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hostVersion",
            "in": "query",
            "description": "Host version where the VRA is installed",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ipAddress",
            "in": "query",
            "description": "VRA IP address",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vraGroup",
            "in": "query",
            "description": "VRA group",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datastoreName",
            "in": "query",
            "description": "Datastore name VRA uses for recovery data",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datastoreClusterName",
            "in": "query",
            "description": "Cluster name VRA uses for recovery data",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "networkName",
            "in": "query",
            "description": "VRA network",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vraIpConfigurationTypeApi",
            "in": "query",
            "description": "IP configuration type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraApi"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "VRAs (Virtual Replication Appliances)"
        ],
        "summary": "Install VRA. Returns TaskIdentifier. (Auth)",
        "operationId": "startVraInstall",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraCreateDataApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraCreateDataApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraCreateDataApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vras/{vraIdentifier}": {
      "get": {
        "tags": [
          "VRAs (Virtual Replication Appliances)"
        ],
        "summary": "Get information about the VRA. (Auth)",
        "operationId": "getVra",
        "parameters": [
          {
            "name": "vraIdentifier",
            "in": "path",
            "description": "Vra identifier. Related endpoint: `/v1/vras`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraApi"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VRAs (Virtual Replication Appliances)"
        ],
        "summary": "UnInstall VRA. Returns TaskIdentifier (Auth)",
        "operationId": "startVraUninstall",
        "parameters": [
          {
            "name": "vraIdentifier",
            "in": "path",
            "description": "Vra identifier. Related endpoint: `/v1/vras`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "VRAs (Virtual Replication Appliances)"
        ],
        "summary": "Edit VRA. Returns TaskIdentifier (Auth)",
        "operationId": "startVraEdit",
        "parameters": [
          {
            "name": "vraIdentifier",
            "in": "path",
            "description": "Vra identifier. Related endpoint: `/v1/vras`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraEditDataApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraEditDataApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraEditDataApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vras/clusters": {
      "post": {
        "tags": [
          "VRAs (Virtual Replication Appliances)"
        ],
        "summary": "Installs VRAs on cluster. Returns TaskIdentifier (Auth)",
        "operationId": "startVrasOnClusterInstall",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VrasOnClusterCreateDataApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VrasOnClusterCreateDataApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VrasOnClusterCreateDataApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vras/clusters/{clusterIdentifier}": {
      "delete": {
        "tags": [
          "VRAs (Virtual Replication Appliances)"
        ],
        "summary": "UnInstall VRAs from cluster. Returns TaskIdentifier (Auth)",
        "operationId": "startClusterVrasUninstall",
        "parameters": [
          {
            "name": "clusterIdentifier",
            "in": "path",
            "description": "Cluster identifier. Related endpoint `/v1/virtualizationsites/{siteIdentifier}/hostclusters`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vaioAllowMaintenanceMode",
            "in": "query",
            "description": "User confirmation is required in VAIO deployments for IO Filter update or removal, where VMware vSphere automatically puts the host in Maintenance mode.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "VRAs (Virtual Replication Appliances)"
        ],
        "summary": "Upgrade VRA on cluster. Returns TaskIdentifier (Auth)",
        "operationId": "startClusterVrasUpgrade",
        "parameters": [
          {
            "name": "clusterIdentifier",
            "in": "path",
            "description": "Cluster identifier. Related endpoint `/v1/virtualizationsites/{siteIdentifier}/hostclusters`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vaioAllowMaintenanceMode",
            "in": "query",
            "description": "User confirmation is required in VAIO deployments for IO Filter update or removal, where VMware vSphere automatically puts the host in Maintenance mode.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vras/cleanup": {
      "delete": {
        "tags": [
          "VRAs (Virtual Replication Appliances)"
        ],
        "summary": "UnInstall all VRAs from all clusters. Returns list of TaskIdentifiers for each cluster (Auth)",
        "operationId": "startVraCleanup",
        "parameters": [
          {
            "name": "vaioAllowMaintenanceMode",
            "in": "query",
            "description": "User confirmation is required in VAIO deployments for IO Filter update or removal, where VMware vSphere automatically puts the host in Maintenance mode.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vras/{vraIdentifier}/upgrade": {
      "post": {
        "tags": [
          "VRAs (Virtual Replication Appliances)"
        ],
        "summary": "Upgrade VRA. Returns TaskIdentifier (Auth)",
        "operationId": "startVraUpgrade",
        "parameters": [
          {
            "name": "vraIdentifier",
            "in": "path",
            "description": "Vra identifier. Related endpoint: `/v1/vras`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vras/clusters/{clusterIdentifier}/settings": {
      "get": {
        "tags": [
          "VRAs (Virtual Replication Appliances)"
        ],
        "summary": "Get VRA cluster install settings. (Auth)",
        "operationId": "getVraClusterSettings",
        "parameters": [
          {
            "name": "clusterIdentifier",
            "in": "path",
            "description": "Cluster identifier. Related endpoint `/v1/virtualizationsites/{siteIdentifier}/hostclusters`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VrasOnClusterDataApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VrasOnClusterDataApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VrasOnClusterDataApi"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "VRAs (Virtual Replication Appliances)"
        ],
        "summary": "Store VRA install settings for a cluster. (Auth)",
        "operationId": "startSetVraClusterSettings",
        "parameters": [
          {
            "name": "clusterIdentifier",
            "in": "path",
            "description": "Cluster identifier. Related endpoint `/v1/virtualizationsites/{siteIdentifier}/hostclusters`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VrasOnClusterCreateDataApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VrasOnClusterCreateDataApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VrasOnClusterCreateDataApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vras/statuses": {
      "get": {
        "tags": [
          "VRAs (Virtual Replication Appliances)"
        ],
        "summary": "Get the list of values for VRA status (Auth)",
        "operationId": "getVraStatusAll",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vras/ipconfigurationtypes": {
      "get": {
        "tags": [
          "VRAs (Virtual Replication Appliances)"
        ],
        "summary": "Get the list of values for VRA IP configuration type (Auth)",
        "operationId": "getVraConfigurationTypeAll",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vras/{vraIdentifier}/changerecoveryvra/potentials": {
      "get": {
        "tags": [
          "VRAs (Virtual Replication Appliances)"
        ],
        "summary": "Get potential replacement hosts for a change recovery host operation. \r\nReturns a list for a specified VmIdentifer. (Auth)",
        "operationId": "getVraChangeRecoveryHostPotential",
        "parameters": [
          {
            "name": "vraIdentifier",
            "in": "path",
            "description": "Vra identifier. Related endpoint: `/v1/vras`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vmIdentifier",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraPotentialHostApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraPotentialHostApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraPotentialHostApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vras/{vraIdentifier}/changerecoveryvra/execute": {
      "post": {
        "tags": [
          "VRAs (Virtual Replication Appliances)"
        ],
        "summary": "Change recovery host. (Auth)",
        "operationId": "startVraChangeRecoveryHost",
        "parameters": [
          {
            "name": "vraIdentifier",
            "in": "path",
            "description": "Vra identifier. Related endpoint: `/v1/vras`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraChangeRecoveryHostSettingsApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraChangeRecoveryHostSettingsApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraChangeRecoveryHostSettingsApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vras/{vraIdentifier}/changerecoveryvra/validate": {
      "post": {
        "tags": [
          "VRAs (Virtual Replication Appliances)"
        ],
        "summary": "Validate change recovery host settings. (Auth)",
        "operationId": "testVraChangeRecoveryHostSetting",
        "parameters": [
          {
            "name": "vraIdentifier",
            "in": "path",
            "description": "Vra identifier. Related endpoint: `/v1/vras`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraChangeRecoveryHostSettingsApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraChangeRecoveryHostSettingsApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraChangeRecoveryHostSettingsApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraChangeRecoveryHostValidationResultsApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraChangeRecoveryHostValidationResultsApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraChangeRecoveryHostValidationResultsApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vras/{vraIdentifier}/changerecoveryvra/recommendation": {
      "post": {
        "tags": [
          "VRAs (Virtual Replication Appliances)"
        ],
        "summary": "Get recommendations for evacuate operation. (Auth)",
        "operationId": "getVraChangeRecoveryHostRecommendation",
        "parameters": [
          {
            "name": "vraIdentifier",
            "in": "path",
            "description": "Vra identifier. Related endpoint: `/v1/vras`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraChangeRecoveryHostRecommendationRequestApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraChangeRecoveryHostRecommendationRequestApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraChangeRecoveryHostRecommendationRequestApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraChangeRecoveryHostRecommendationResultApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraChangeRecoveryHostRecommendationResultApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraChangeRecoveryHostRecommendationResultApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/zorgs": {
      "get": {
        "tags": [
          "ZORGS (Zerto Organizations)"
        ],
        "summary": "Get the list of all the ZORGs defined in the Zerto Cloud Manager for this site. (Auth)",
        "operationId": "getZorgAll",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Zorgs.ZorgApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Zorgs.ZorgApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Zorgs.ZorgApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/zorgs/{zorgIdentifier}": {
      "get": {
        "tags": [
          "ZORGS (Zerto Organizations)"
        ],
        "summary": "Get details of a specific ZORG. (Auth)",
        "operationId": "getZorg",
        "parameters": [
          {
            "name": "zorgIdentifier",
            "in": "path",
            "description": "The identifier or the ZORG. Related endpoint `/v1/zorgs`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Zorgs.ZorgApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Zorgs.ZorgApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Zorgs.ZorgApi"
                }
              }
            }
          }
        }
      }
    },
    "/v1/zsspsessions": {
      "post": {
        "tags": [
          "ZSSP (Zerto Self Service Portal) Sessions"
        ],
        "summary": "Create a ZSSP session. (Auth)",
        "operationId": "connectZssp",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.ZsspSessions.ZsspSessionsApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.ZsspSessions.ZsspSessionsApi"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.ZsspSessions.ZsspSessionsApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ZSSP (Zerto Self Service Portal) Sessions"
        ],
        "summary": "Get details of all ZSSP sessions (Auth)",
        "operationId": "getZsspSessionAll",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.ZsspSessions.ZsspSessionDetailsApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.ZsspSessions.ZsspSessionDetailsApi"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.ZsspSessions.ZsspSessionDetailsApi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/zsspsessions/{zsspSessionIdentifier}": {
      "get": {
        "tags": [
          "ZSSP (Zerto Self Service Portal) Sessions"
        ],
        "summary": "Get details of a ZSSP session (Auth)",
        "operationId": "getZsspSession",
        "parameters": [
          {
            "name": "zsspSessionIdentifier",
            "in": "path",
            "description": "Zssp session identifier. Realted endpoint `/v1/zsspsessions`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.ZsspSessions.ZsspSessionDetailsApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.ZsspSessions.ZsspSessionDetailsApi"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.ZsspSessions.ZsspSessionDetailsApi"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ZSSP (Zerto Self Service Portal) Sessions"
        ],
        "summary": "Delete a ZSSP session. (Auth)",
        "operationId": "disconnectZssp",
        "parameters": [
          {
            "name": "zsspSessionIdentifier",
            "in": "path",
            "description": "Zssp session identifier. Realted endpoint `/v1/zsspsessions`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/auth/realms/zerto/protocol/openid-connect/token": {
      "post": {
        "tags": [
          "Sessions"
        ],
        "summary": "Get new auth token",
        "operationId": "getAuthToken",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "grant_type": {
                    "type": "string",
                    "description": "Type of exchange a user's credentials",
                    "example": "password"
                  },
                  "client_id": {
                    "type": "string",
                    "description": "Keycloak client id",
                    "example": "zerto-client"
                  },
                  "username": {
                    "type": "string",
                    "description": "Username"
                  },
                  "password": {
                    "type": "string",
                    "description": "Password"
                  }
                }
              },
              "encoding": {
                "grant_type": {
                  "style": "form"
                },
                "client_id": {
                  "style": "form"
                },
                "username": {
                  "style": "form"
                },
                "password": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessTokenResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResult": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "error_description": {
            "type": "string"
          }
        }
      },
      "Microsoft.Azure.Management.Monitor.Fluent.Models.ErrorResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SuccessTokenResult": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "expires_in": {
            "type": "integer",
            "format": "int32"
          },
          "refresh_expires_in": {
            "type": "integer",
            "format": "int32"
          },
          "refresh_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          },
          "not-before-policy": {
            "type": "integer",
            "format": "int32"
          },
          "session_state": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          }
        }
      },
      "System.DayOfWeek": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "System.IO.Stream": {
        "type": "object",
        "properties": {
          "canRead": {
            "type": "boolean",
            "readOnly": true
          },
          "canWrite": {
            "type": "boolean",
            "readOnly": true
          },
          "canSeek": {
            "type": "boolean",
            "readOnly": true
          },
          "canTimeout": {
            "type": "boolean",
            "readOnly": true
          },
          "length": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "position": {
            "type": "integer",
            "format": "int64"
          },
          "readTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "writeTimeout": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Api.Interfaces.LTR.LtrBackupCompressionSettingsApi": {
        "type": "object",
        "properties": {
          "compressionLevel": {
            "$ref": "#/components/schemas/Zerto.Ltr.Common.Vpg.Settings.BackupCompressionLevel"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Api.Interfaces.LTR.LtrDailySchedulerPolicyApi": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "retentionDuration": {
            "$ref": "#/components/schemas/Zerto.Api.Interfaces.LTR.LtrDurationApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Api.Interfaces.LTR.LtrDurationApi": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "durationType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Api.Interfaces.LTR.LtrMonthlySchedulerPolicyApi": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "dayOfWeek": {
            "type": "string",
            "nullable": true
          },
          "weekOfMonth": {
            "type": "string",
            "nullable": true
          },
          "dayOfMonth": {
            "type": "string",
            "nullable": true
          },
          "retentionType": {
            "type": "string",
            "nullable": true
          },
          "retentionDuration": {
            "$ref": "#/components/schemas/Zerto.Api.Interfaces.LTR.LtrDurationApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Api.Interfaces.LTR.LtrRetryApi": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "intervalInMinutes": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Api.Interfaces.LTR.LtrSchedulerPolicyApi": {
        "type": "object",
        "properties": {
          "daily": {
            "$ref": "#/components/schemas/Zerto.Api.Interfaces.LTR.LtrDailySchedulerPolicyApi"
          },
          "weekly": {
            "$ref": "#/components/schemas/Zerto.Api.Interfaces.LTR.LtrWeeklySchedulerPolicyApi"
          },
          "monthly": {
            "$ref": "#/components/schemas/Zerto.Api.Interfaces.LTR.LtrMonthlySchedulerPolicyApi"
          },
          "yearly": {
            "$ref": "#/components/schemas/Zerto.Api.Interfaces.LTR.LtrYearlySchedulerPolicyApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Api.Interfaces.LTR.LtrWeeklySchedulerPolicyApi": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "dayOfWeek": {
            "type": "string",
            "nullable": true
          },
          "retentionType": {
            "type": "string",
            "nullable": true
          },
          "retentionDuration": {
            "$ref": "#/components/schemas/Zerto.Api.Interfaces.LTR.LtrDurationApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Api.Interfaces.LTR.LtrYearlySchedulerPolicyApi": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "dayOfWeek": {
            "type": "string",
            "nullable": true
          },
          "dayOfYear": {
            "type": "string",
            "nullable": true
          },
          "monthOfYear": {
            "type": "string",
            "nullable": true
          },
          "dayOfMonth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "retentionDuration": {
            "$ref": "#/components/schemas/Zerto.Api.Interfaces.LTR.LtrDurationApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Api.Interfaces.ResourceLink": {
        "type": "object",
        "properties": {
          "rel": {
            "type": "string",
            "nullable": true
          },
          "href": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Common.Alerts.SystemStateAlertLevel": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Ltr.Common.BackupSet.Settings.BackupMethod": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Ltr.Common.BackupSet.Settings.BackupTier": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Ltr.Common.Repositories.Settings.BackupTargetType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Ltr.Common.Repositories.Settings.ImmutabilityType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Ltr.Common.Repositories.Settings.StorageType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Ltr.Common.Repositories.Type.AzureCloudEnvironment": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Ltr.Common.Vpg.Settings.BackupCompressionLevel": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Ltr.Common.Vpg.Settings.DayOfMonth": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Ltr.Common.Vpg.Settings.ExpireTimeUnits": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Ltr.Common.Vpg.Settings.SchedulePeriodType": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Ltr.Common.Vpg.Settings.WeekOfMonth": {
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Ltr.Common.Vpg.Settings.WeekOfYear": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.RansomwareDetection.Contracts.AssociatedVmApi": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.RansomwareDetection.Contracts.AssociatedVpgApi": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.RansomwareDetection.Contracts.MetricsApi": {
        "type": "object",
        "properties": {
          "nonEncryptedData": {
            "type": "integer",
            "format": "int64"
          },
          "encryptedData": {
            "type": "integer",
            "format": "int64"
          },
          "trendChangeLevel": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Zerto.RansomwareDetection.Contracts.MetricsVmApi": {
        "type": "object",
        "properties": {
          "link": {
            "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.RwVmResourceLink"
          },
          "associatedVpgs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.AssociatedVpgApi"
            },
            "nullable": true
          },
          "encryptionMetrics": {
            "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.MetricsApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.RansomwareDetection.Contracts.MetricsVolumeApi": {
        "type": "object",
        "properties": {
          "volumeIdentifier": {
            "type": "string",
            "nullable": true
          },
          "associatedVm": {
            "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.AssociatedVmApi"
          },
          "associatedVpgs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.AssociatedVpgApi"
            },
            "nullable": true
          },
          "encryptionMetrics": {
            "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.MetricsApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.RansomwareDetection.Contracts.MetricsVpgApi": {
        "type": "object",
        "properties": {
          "link": {
            "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.RwResourceLink"
          },
          "encryptionMetrics": {
            "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.MetricsApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.RansomwareDetection.Contracts.RwResourceLink": {
        "type": "object",
        "properties": {
          "rel": {
            "type": "string",
            "nullable": true
          },
          "href": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.RansomwareDetection.Contracts.RwVmResourceLink": {
        "type": "object",
        "properties": {
          "instance_identifier": {
            "type": "string",
            "nullable": true
          },
          "rel": {
            "type": "string",
            "nullable": true
          },
          "href": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.RansomwareDetection.Contracts.RwVolumeDatastoreApi": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.RansomwareDetection.Contracts.RwVolumePathApi": {
        "type": "object",
        "properties": {
          "full": {
            "type": "string",
            "nullable": true
          },
          "relative": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.RansomwareDetection.Contracts.RwVolumeSizeApi": {
        "type": "object",
        "properties": {
          "usedInBytes": {
            "type": "integer",
            "format": "int64"
          },
          "provisionedInBytes": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Zerto.RansomwareDetection.Contracts.SettingsApi": {
        "type": "object",
        "properties": {
          "encryptionDetectionEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Zerto.RansomwareDetection.Contracts.SuspectedVmApi": {
        "type": "object",
        "properties": {
          "link": {
            "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.RwVmResourceLink"
          },
          "suspicionLevel": {
            "type": "integer",
            "format": "int32"
          },
          "associatedVpgs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.AssociatedVpgApi"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.RansomwareDetection.Contracts.SuspectedVolumeApi": {
        "type": "object",
        "properties": {
          "volumeType": {
            "type": "string",
            "nullable": true
          },
          "volumeIdentifier": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.RwVolumePathApi"
          },
          "size": {
            "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.RwVolumeSizeApi"
          },
          "datastore": {
            "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.RwVolumeDatastoreApi"
          },
          "associatedVm": {
            "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.AssociatedVmApi"
          },
          "associatedVpgs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.AssociatedVpgApi"
            },
            "nullable": true
          },
          "suspicionLevel": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Zerto.RansomwareDetection.Contracts.SuspectedVpgApi": {
        "type": "object",
        "properties": {
          "link": {
            "$ref": "#/components/schemas/Zerto.RansomwareDetection.Contracts.RwResourceLink"
          },
          "suspicionLevel": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Zerto.RansomwareDetection.Contracts.VpgIdentifiersApi": {
        "type": "object",
        "properties": {
          "vpgIdentifiers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Alerts.AlertApi": {
        "type": "object",
        "properties": {
          "link": {
            "$ref": "#/components/schemas/Zerto.Api.Interfaces.ResourceLink"
          },
          "level": {
            "type": "string",
            "nullable": true
          },
          "entity": {
            "type": "string",
            "nullable": true
          },
          "isDismissed": {
            "type": "boolean"
          },
          "helpIdentifier": {
            "type": "string",
            "nullable": true
          },
          "site": {
            "$ref": "#/components/schemas/Zerto.Api.Interfaces.ResourceLink"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "turnedOn": {
            "type": "string",
            "format": "date-time"
          },
          "affectedVpgs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Api.Interfaces.ResourceLink"
            },
            "nullable": true
          },
          "affectedZorgs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Api.Interfaces.ResourceLink"
            },
            "nullable": true
          },
          "generation": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Datastores.DatastoreAlertApi": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "level": {
            "type": "string",
            "nullable": true
          },
          "link": {
            "$ref": "#/components/schemas/Zerto.Api.Interfaces.ResourceLink"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Datastores.DatastoreApi": {
        "type": "object",
        "properties": {
          "datastoreIdentifier": {
            "type": "string",
            "nullable": true
          },
          "datastoreName": {
            "type": "string",
            "nullable": true
          },
          "config": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Datastores.DatastoreConfigurationApi"
          },
          "stats": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Datastores.DatastoreStatisticsApi"
          },
          "health": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Datastores.DatastoreHealthApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Datastores.DatastoreConfigurationApi": {
        "type": "object",
        "properties": {
          "devices": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "owningDatastoreCluster": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Datastores.OwningDatastoreClusterApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Datastores.DatastoreHealthApi": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "nullable": true
          },
          "alerts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Datastores.DatastoreAlertApi"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Datastores.DatastoreInfoApi": {
        "type": "object",
        "properties": {
          "capacityInBytes": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "freeInBytes": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "usedInBytes": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "provisionedInBytes": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Datastores.DatastoreStatisticsApi": {
        "type": "object",
        "properties": {
          "numVRAs": {
            "type": "integer",
            "format": "int32"
          },
          "numIncomingVMs": {
            "type": "integer",
            "format": "int32"
          },
          "numOutgoingVMs": {
            "type": "integer",
            "format": "int32"
          },
          "availabilityStatus": {
            "type": "string",
            "nullable": true
          },
          "usage": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Datastores.DatastoreUsageApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Datastores.DatastoreUsageApi": {
        "type": "object",
        "properties": {
          "datastore": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Datastores.DatastoreInfoApi"
          },
          "zerto": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Datastores.DatastoreZertoUsageInfoApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Datastores.DatastoreVolumeTypeUsageApi": {
        "type": "object",
        "properties": {
          "usedInBytes": {
            "type": "integer",
            "format": "int64"
          },
          "provisionedInBytes": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Datastores.DatastoreZertoUsageInfoApi": {
        "type": "object",
        "properties": {
          "protected": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Datastores.DatastoreVolumeTypeUsageApi"
          },
          "recovery": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Datastores.DatastoreVolumeTypeUsageApi"
          },
          "journal": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Datastores.DatastoreVolumeTypeUsageApi"
          },
          "scratch": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Datastores.DatastoreVolumeTypeUsageApi"
          },
          "appliances": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Datastores.DatastoreVolumeTypeUsageApi"
          },
          "unknown": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Datastores.DatastoreVolumeTypeUsageApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Datastores.OwningDatastoreClusterApi": {
        "type": "object",
        "properties": {
          "datastoreClusterIdentifier": {
            "type": "string",
            "nullable": true
          },
          "datastoreClusterName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Events.EventApi": {
        "type": "object",
        "properties": {
          "link": {
            "$ref": "#/components/schemas/Zerto.Api.Interfaces.ResourceLink"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "occurredOn": {
            "type": "string",
            "format": "date-time"
          },
          "eventType": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Events.EventTypeApi"
          },
          "helpLink": {
            "type": "string",
            "nullable": true
          },
          "eventCompletedSuccessfully": {
            "type": "boolean"
          },
          "entityType": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Events.EventEntityTypeApi"
          },
          "eventCategory": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "relatedEntities": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Events.EventRelatedEntitiesApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Events.EventEntityTypeApi": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Zvm.Api.Interfaces.Events.EventRelatedEntitiesApi": {
        "type": "object",
        "properties": {
          "vpgs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Api.Interfaces.ResourceLink"
            },
            "nullable": true
          },
          "sites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Api.Interfaces.ResourceLink"
            },
            "nullable": true
          },
          "hosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Api.Interfaces.ResourceLink"
            },
            "nullable": true
          },
          "zorgs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Api.Interfaces.ResourceLink"
            },
            "nullable": true
          },
          "alerts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Api.Interfaces.ResourceLink"
            },
            "nullable": true
          },
          "flrSessions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Api.Interfaces.ResourceLink"
            },
            "nullable": true
          },
          "repositories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Api.Interfaces.ResourceLink"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Events.EventTypeApi": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40,
          41,
          42,
          43,
          44,
          45,
          46,
          47,
          48,
          49,
          50,
          51,
          52,
          53,
          54,
          55,
          56,
          57,
          58,
          59,
          60,
          61,
          62,
          63,
          64,
          65,
          66,
          67,
          68,
          69,
          70,
          71,
          72,
          73,
          74,
          75,
          76,
          77,
          78,
          79,
          80,
          81,
          82,
          83,
          84,
          85,
          86,
          87,
          88,
          89,
          90,
          91,
          92,
          93,
          94,
          95,
          96,
          97,
          98,
          99,
          100,
          101,
          102,
          103,
          104,
          105,
          106,
          107,
          108,
          109,
          110,
          111,
          112,
          113,
          114,
          115,
          116,
          117,
          118,
          119,
          120
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Zvm.Api.Interfaces.Flr.BflrMountDataApi": {
        "type": "object",
        "properties": {
          "vpgIdentifier": {
            "type": "string",
            "nullable": true
          },
          "vmIdentifier": {
            "type": "string",
            "nullable": true
          },
          "retentionSetIdentifier": {
            "type": "string",
            "nullable": true
          },
          "repositoryIdentifier": {
            "type": "string",
            "nullable": true
          },
          "repositorySiteIdentifier": {
            "type": "string",
            "nullable": true
          },
          "initialDownloadPath": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Flr.BrowseDataApi": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Flr.DownloadInformationApi": {
        "type": "object",
        "properties": {
          "isDownloadable": {
            "type": "boolean"
          },
          "additionalInformation": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Flr.FlrDownloadDataApi": {
        "type": "object",
        "properties": {
          "pathList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Flr.FlrMountDataApi": {
        "type": "object",
        "properties": {
          "jflr": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Flr.JflrMountDataApi"
          },
          "bflr": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Flr.BflrMountDataApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Flr.FlrSessionInformationApi": {
        "type": "object",
        "properties": {
          "flrSessionStatus": {
            "type": "string",
            "nullable": true
          },
          "flrSessionIdentifier": {
            "type": "string",
            "nullable": true
          },
          "flrSessionType": {
            "type": "string",
            "nullable": true
          },
          "vmIdentifier": {
            "type": "string",
            "nullable": true
          },
          "vmVolumeIdentifier": {
            "type": "string",
            "nullable": true
          },
          "vpgIdentifier": {
            "type": "string",
            "nullable": true
          },
          "checkpointIdentifier": {
            "type": "string",
            "nullable": true
          },
          "mountTime": {
            "type": "string",
            "nullable": true
          },
          "selectedPath": {
            "type": "string",
            "nullable": true
          },
          "numberOfRelatedRunningTasks": {
            "type": "integer",
            "format": "int32"
          },
          "repositoryIdentifier": {
            "type": "string",
            "nullable": true
          },
          "retentionSetIdentifier": {
            "type": "string",
            "nullable": true
          },
          "siteIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Flr.JflrMountDataApi": {
        "type": "object",
        "properties": {
          "vpgIdentifier": {
            "type": "string",
            "nullable": true
          },
          "vmIdentifier": {
            "type": "string",
            "nullable": true
          },
          "checkpointIdentifier": {
            "type": "string",
            "nullable": true
          },
          "initialDownloadPath": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Flr.PathInformationApi": {
        "type": "object",
        "properties": {
          "mainPathItem": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Flr.PathItemInformationApi"
          },
          "pathItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Flr.PathItemInformationApi"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Flr.PathItemInformationApi": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "isBrowsable": {
            "type": "boolean"
          },
          "downloadInformation": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Flr.DownloadInformationApi"
          },
          "sizeInBytes": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "nullable": true
          },
          "lastAccessTime": {
            "type": "string",
            "nullable": true
          },
          "lastWriteTime": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.LTR.Backup.RetentionStartInfoApi": {
        "type": "object",
        "properties": {
          "checkpointId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.LTR.Catalog.DeleteRetentionSetInfoApi": {
        "type": "object",
        "properties": {
          "fullRetentionSetIdentifier": {
            "type": "string",
            "nullable": true
          },
          "incrementalRetentionSetsIdentifiers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.LTR.Catalog.DeleteRetentionSetsApi": {
        "type": "object",
        "properties": {
          "retentionSetsToDelete": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Catalog.DeleteRetentionSetInfoApi"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.LTR.Catalog.NamedEntityApi": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.LTR.Catalog.RecoverableVmApi": {
        "type": "object",
        "properties": {
          "vm": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Catalog.NamedEntityApi"
          },
          "vpg": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Catalog.NamedEntityApi"
          },
          "isSearchable": {
            "type": "boolean"
          },
          "isVmExist": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.LTR.Catalog.RecoverableVmsApi": {
        "type": "object",
        "properties": {
          "vms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Catalog.RecoverableVmApi"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.LTR.Catalog.RetentionSetActionsInformationApi": {
        "type": "object",
        "properties": {
          "deleteAction": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Health.ButtonAvailabilityApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.LTR.Catalog.RetentionSetApi": {
        "type": "object",
        "properties": {
          "repositoryIdentifier": {
            "type": "string",
            "nullable": true
          },
          "retentionSetIdentifier": {
            "type": "string",
            "nullable": true
          },
          "timeStamp": {
            "type": "string",
            "nullable": true
          },
          "isApplicationAware": {
            "type": "boolean"
          },
          "zorgIdentifier": {
            "type": "string",
            "nullable": true
          },
          "numberOfVolumes": {
            "type": "integer",
            "format": "int32"
          },
          "repositorySiteIdentifier": {
            "type": "string",
            "nullable": true
          },
          "tier": {
            "$ref": "#/components/schemas/Zerto.Ltr.Common.BackupSet.Settings.BackupTier"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.LTR.Catalog.RetentionSetImmutabilityApi": {
        "type": "object",
        "properties": {
          "immutabilityState": {
            "type": "string",
            "nullable": true
          },
          "immutabilityExpiryTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.LTR.Catalog.RetentionSetInfoApi": {
        "type": "object",
        "properties": {
          "retentionSetIdentifier": {
            "type": "string",
            "nullable": true
          },
          "backupMethod": {
            "type": "string",
            "nullable": true
          },
          "vpg": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Catalog.NamedEntityApi"
          },
          "repository": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Catalog.NamedEntityApi"
          },
          "zorg": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Catalog.NamedEntityApi"
          },
          "pointInTime": {
            "type": "string",
            "format": "date-time"
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time"
          },
          "actionType": {
            "type": "string",
            "nullable": true
          },
          "statusType": {
            "type": "string",
            "nullable": true
          },
          "isAppAware": {
            "type": "boolean"
          },
          "sizeInKB": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "aggregatedSizeInKB": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "numberOfIncrementals": {
            "type": "integer",
            "format": "int32"
          },
          "isVpgExists": {
            "type": "boolean"
          },
          "retentionSetImmutability": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Catalog.RetentionSetImmutabilityApi"
          },
          "retentionSetActionsInformation": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Catalog.RetentionSetActionsInformationApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.LTR.Catalog.RetentionSetVmSettingsApi": {
        "type": "object",
        "properties": {
          "ltrVmIdentifier": {
            "type": "string",
            "nullable": true
          },
          "repositoryIdentifier": {
            "type": "string",
            "nullable": true
          },
          "retentionSetIdentifier": {
            "type": "string",
            "nullable": true
          },
          "hostIdentifier": {
            "type": "string",
            "nullable": true
          },
          "volumes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Catalog.VmVolumeSettingsApi"
            },
            "nullable": true
          },
          "nics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Catalog.VmNicSettingsApi"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.LTR.Catalog.RetentionSetsApi": {
        "type": "object",
        "properties": {
          "retentionSets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Catalog.RetentionSetApi"
            },
            "nullable": true
          },
          "ltrVmIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.LTR.Catalog.RetentionSetsInfoApi": {
        "type": "object",
        "properties": {
          "retentionSets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Catalog.RetentionSetInfoApi"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.LTR.Catalog.VmNicSettingsApi": {
        "type": "object",
        "properties": {
          "networkIdentifier": {
            "type": "string",
            "nullable": true
          },
          "dnsSuffix": {
            "type": "string",
            "nullable": true
          },
          "gateway": {
            "type": "string",
            "nullable": true
          },
          "isDhcp": {
            "type": "boolean"
          },
          "primaryDns": {
            "type": "string",
            "nullable": true
          },
          "secondaryDns": {
            "type": "string",
            "nullable": true
          },
          "staticIp": {
            "type": "string",
            "nullable": true
          },
          "subnetMask": {
            "type": "string",
            "nullable": true
          },
          "shouldReplaceMacAddress": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.LTR.Catalog.VmVolumeSettingsApi": {
        "type": "object",
        "properties": {
          "datastoreIdentifier": {
            "type": "string",
            "nullable": true
          },
          "isThin": {
            "type": "boolean"
          },
          "volumeIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.LTR.Health.ButtonAvailabilityApi": {
        "type": "object",
        "properties": {
          "isEnabled": {
            "type": "boolean"
          },
          "disableReasonText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.LTR.Health.LtrVpgStatusApi": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Zvm.Api.Interfaces.LTR.Health.SuccessRateApi": {
        "type": "object",
        "properties": {
          "expectedRetentionSets": {
            "type": "integer",
            "format": "int32"
          },
          "actualSuccessfulRetentionSets": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.LTR.Health.SuccessRatePotentialImpact": {
        "type": "object",
        "properties": {
          "isSuccessRateInfluencedByManualDeletion": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.LTR.Health.VpgLtrHealthApi": {
        "type": "object",
        "properties": {
          "ltrVpgStatus": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Health.LtrVpgStatusApi"
          },
          "retentionPolicyLatestChanged": {
            "type": "string",
            "format": "date-time"
          },
          "successRate": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Health.SuccessRateApi"
          },
          "dateOfLastRun": {
            "type": "string",
            "format": "date-time"
          },
          "timeOfLastSuccessfulRun": {
            "type": "string",
            "format": "date-time"
          },
          "successRatePotentialImpact": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Health.SuccessRatePotentialImpact"
          },
          "vpgName": {
            "type": "string",
            "nullable": true
          },
          "vpgId": {
            "type": "string",
            "nullable": true
          },
          "vmsInVpg": {
            "type": "integer",
            "format": "int32"
          },
          "policy": {
            "type": "string",
            "nullable": true
          },
          "schedulingAndRetentionSettings": {
            "$ref": "#/components/schemas/Zerto.Zvm.Common.VisualObjects.Backup.SchedulingAndRetentionSettingsVisualObject"
          },
          "recoverySiteName": {
            "type": "string",
            "nullable": true
          },
          "repositoryName": {
            "type": "string",
            "nullable": true
          },
          "repositoryId": {
            "type": "string",
            "nullable": true
          },
          "zorgName": {
            "type": "string",
            "nullable": true
          },
          "alertStatus": {
            "$ref": "#/components/schemas/Zerto.Zvm.Common.VisualObjects.ProtectionGroupAlertStatus"
          },
          "alertTips": {
            "$ref": "#/components/schemas/Zerto.Zvm.Common.VisualObjects.AlertsTipVisualObject"
          },
          "isAbortBackupEnabled": {
            "type": "boolean"
          },
          "isBackupEnabled": {
            "type": "boolean"
          },
          "isUpdateEnabled": {
            "type": "boolean"
          },
          "isFailoverEnabled": {
            "type": "boolean"
          },
          "isFailoverTestEnabled": {
            "type": "boolean"
          },
          "isMoveEnabled": {
            "type": "boolean"
          },
          "compressionSettings": {
            "$ref": "#/components/schemas/Zerto.Api.Interfaces.LTR.LtrBackupCompressionSettingsApi"
          },
          "manageRetentionSetsAvailability": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Health.ButtonAvailabilityApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.LTR.Health.VpgsLtrHealthApi": {
        "type": "object",
        "properties": {
          "vpgs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Health.VpgLtrHealthApi"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.LTR.Repositories.AWSS3BackupTargetStorageApi": {
        "type": "object",
        "properties": {
          "s3Region": {
            "type": "string",
            "nullable": true
          },
          "s3BucketName": {
            "type": "string",
            "nullable": true
          },
          "s3EndpointUrl": {
            "type": "string",
            "nullable": true
          },
          "s3StorageClass": {
            "type": "string",
            "nullable": true
          },
          "s3AccessKey": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "s3SecretKey": {
            "type": "string"
          },
          "isStandardIATiering": {
            "type": "boolean"
          },
          "isGlacierTiering": {
            "type": "boolean"
          },
          "tieringToStandardIAInDays": {
            "type": "integer",
            "format": "int32"
          },
          "tieringToGlacierInDays": {
            "type": "integer",
            "format": "int32"
          },
          "isImmutable": {
            "type": "boolean"
          },
          "immutabilityPolicy": {
            "$ref": "#/components/schemas/Zerto.Ltr.Common.Repositories.Settings.ImmutabilityType"
          },
          "immutabilityDays": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.LTR.Repositories.AzureBackupTargetStorageApi": {
        "type": "object",
        "properties": {
          "azureCloud": {
            "$ref": "#/components/schemas/Zerto.Ltr.Common.Repositories.Type.AzureCloudEnvironment"
          },
          "azureSa": {
            "type": "string",
            "nullable": true
          },
          "azureAppId": {
            "type": "string",
            "nullable": true
          },
          "azureTenantId": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "azureAppKey": {
            "type": "string"
          },
          "isCoolTiering": {
            "type": "boolean"
          },
          "isArchiveTiering": {
            "type": "boolean"
          },
          "tieringToCoolInDays": {
            "type": "integer",
            "format": "int32"
          },
          "tieringToArchiveInDays": {
            "type": "integer",
            "format": "int32"
          },
          "isImmutable": {
            "type": "boolean"
          },
          "immutabilityPolicy": {
            "$ref": "#/components/schemas/Zerto.Ltr.Common.Repositories.Settings.ImmutabilityType"
          },
          "immutabilityDays": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.LTR.Repositories.CatalystBackupTargetStorageApi": {
        "type": "object",
        "properties": {
          "catalystServer": {
            "type": "string",
            "nullable": true
          },
          "catalystStoreName": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string"
          },
          "path": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.LTR.Repositories.NFSBackupTargetStorageObjectApi": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.LTR.Repositories.RepositoriesSettingsApi": {
        "type": "object",
        "properties": {
          "repositoryIdentifier": {
            "type": "string",
            "nullable": true
          },
          "repositoryName": {
            "type": "string",
            "nullable": true
          },
          "storageType": {
            "$ref": "#/components/schemas/Zerto.Ltr.Common.Repositories.Settings.StorageType"
          },
          "connectionType": {
            "$ref": "#/components/schemas/Zerto.Ltr.Common.Repositories.Settings.BackupTargetType"
          },
          "defaultRepository": {
            "type": "boolean"
          },
          "isIndexRepository": {
            "type": "boolean"
          },
          "totalCapacityGB": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "usedCapacityGB": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "freeCapacityGB": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "repositoryState": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Repositories.RepositoryStateApi"
          },
          "smb": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Repositories.SMBBackupTargetStorageApi"
          },
          "s3": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Repositories.AWSS3BackupTargetStorageApi"
          },
          "nfs": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Repositories.NFSBackupTargetStorageObjectApi"
          },
          "catalyst": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Repositories.CatalystBackupTargetStorageApi"
          },
          "azure": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Repositories.AzureBackupTargetStorageApi"
          },
          "s3-Compatible": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Repositories.S3CompatibleStorageObjectApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.LTR.Repositories.RepositoryStateApi": {
        "type": "object",
        "properties": {
          "allocatedSpaceInGB": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "availableSpaceInGB": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "usedSpaceInGB": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.LTR.Repositories.S3CompatibleStorageObjectApi": {
        "type": "object",
        "properties": {
          "s3Region": {
            "type": "string",
            "nullable": true
          },
          "s3EndpointUrl": {
            "type": "string",
            "nullable": true
          },
          "s3BucketName": {
            "type": "string",
            "nullable": true
          },
          "s3AccessKey": {
            "type": "string",
            "nullable": true
          },
          "s3SecretKey": {
            "type": "string"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "isImmutable": {
            "type": "boolean"
          },
          "immutabilityPolicy": {
            "$ref": "#/components/schemas/Zerto.Ltr.Common.Repositories.Settings.ImmutabilityType"
          },
          "immutabilityDays": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.LTR.Repositories.SMBBackupTargetStorageApi": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.LTR.Restore.RestoreVmApi": {
        "type": "object",
        "properties": {
          "vmIdentifier": {
            "type": "string",
            "nullable": true
          },
          "retentionSetIdentifier": {
            "type": "string",
            "nullable": true
          },
          "hostIdentifier": {
            "type": "string",
            "nullable": true
          },
          "datastoreIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Licenses.LicenseApi": {
        "type": "object",
        "properties": {
          "details": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Licenses.LicenseDetailsApi"
          },
          "usage": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Licenses.LicenseUsageApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Licenses.LicenseDetailsApi": {
        "type": "object",
        "properties": {
          "licenseKey": {
            "type": "string",
            "nullable": true
          },
          "licenseType": {
            "type": "string",
            "nullable": true
          },
          "expiryTime": {
            "type": "string",
            "nullable": true
          },
          "maxVms": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Licenses.LicenseKeyApi": {
        "type": "object",
        "properties": {
          "licenseKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Licenses.LicenseSiteUsageApi": {
        "type": "object",
        "properties": {
          "siteIdentifier": {
            "type": "string",
            "nullable": true
          },
          "siteName": {
            "type": "string",
            "nullable": true
          },
          "protectedVmsCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Licenses.LicenseUsageApi": {
        "type": "object",
        "properties": {
          "sitesUsage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Licenses.LicenseSiteUsageApi"
            },
            "nullable": true
          },
          "totalVmsCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Platform.VCDVirtualDatacenter": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Platform.VCDVmMachine": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "moRefId": {
            "type": "string",
            "nullable": true
          },
          "hRef": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "vdc": {
            "type": "string",
            "nullable": true
          },
          "org": {
            "type": "string",
            "nullable": true
          },
          "container": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.PointsInTime.AllowedOperationApi": {
        "type": "object",
        "properties": {
          "isAllowed": {
            "type": "boolean"
          },
          "reason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.PointsInTime.PointInTimeApi": {
        "type": "object",
        "properties": {
          "checkpoint": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.CheckpointApi"
          },
          "retentionSet": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.LTR.Catalog.RetentionSetApi"
          },
          "canMount": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.PointsInTime.AllowedOperationApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.PointsInTime.PointInTimeStatsApi": {
        "type": "object",
        "properties": {
          "earliest": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.PointsInTime.PointInTimeApi"
          },
          "latest": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.PointsInTime.PointInTimeApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.RecoveryReports.RecoveryReportsApiDataItems.RecoveryReportApi": {
        "type": "object",
        "properties": {
          "recoveryOperationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "general": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.RecoveryReports.RecoveryReportsApiDataItems.RecoveryReportsGeneralApi"
          },
          "recoverySettings": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.RecoveryReports.RecoveryReportsApiDataItems.RecoverySettingsReportApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.RecoveryReports.RecoveryReportsApiDataItems.RecoveryReportsGeneralApi": {
        "type": "object",
        "properties": {
          "vpgIdentifier": {
            "type": "string",
            "nullable": true
          },
          "vpgName": {
            "type": "string",
            "nullable": true
          },
          "recoveryType": {
            "type": "string",
            "nullable": true
          },
          "protectedSiteName": {
            "type": "string",
            "nullable": true
          },
          "recoverySiteName": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "nullable": true
          },
          "pointInTime": {
            "type": "string",
            "nullable": true
          },
          "rtoInSeconds": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "initiatedBy": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.RecoveryReports.RecoveryReportsApiDataItems.RecoverySettingVmVolumeApi": {
        "type": "object",
        "properties": {
          "volumeName": {
            "type": "string",
            "nullable": true
          },
          "datastoreName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.RecoveryReports.RecoveryReportsApiDataItems.RecoverySettingsReportApi": {
        "type": "object",
        "properties": {
          "vpg": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.RecoveryReports.RecoveryReportsApiDataItems.RecoverySettingsVpgApi"
          },
          "vms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.RecoveryReports.RecoveryReportsApiDataItems.RecoverySettingsVmApi"
            },
            "nullable": true
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.RecoveryReports.RecoveryReportsApiDataItems.RecoverySettingsStepApi"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.RecoveryReports.RecoveryReportsApiDataItems.RecoverySettingsStepApi": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "result": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "nullable": true
          },
          "executionTime": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.RecoveryReports.RecoveryReportsApiDataItems.RecoverySettingsVmApi": {
        "type": "object",
        "properties": {
          "vmName": {
            "type": "string",
            "nullable": true
          },
          "hostName": {
            "type": "string",
            "nullable": true
          },
          "datastoreName": {
            "type": "string",
            "nullable": true
          },
          "folderName": {
            "type": "string",
            "nullable": true
          },
          "networkNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "volumes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.RecoveryReports.RecoveryReportsApiDataItems.RecoverySettingVmVolumeApi"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.RecoveryReports.RecoveryReportsApiDataItems.RecoverySettingsVpgApi": {
        "type": "object",
        "properties": {
          "defaultHostName": {
            "type": "string",
            "nullable": true
          },
          "defaultDatastoreName": {
            "type": "string",
            "nullable": true
          },
          "defaultNetworkName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.ResourcesReports.VmInfoApiDataItems.CpuResourceReportApi": {
        "type": "object",
        "properties": {
          "cpuLimitationInMhz": {
            "type": "integer",
            "format": "int32"
          },
          "cpuReservedInMhz": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfvCpus": {
            "type": "integer",
            "format": "int32"
          },
          "cpuUsedInMhz": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.ResourcesReports.VmInfoApiDataItems.MemoryResourceReportApi": {
        "type": "object",
        "properties": {
          "activeGuestMemoryInMB": {
            "type": "integer",
            "format": "int64"
          },
          "consumedHostMemoryInMB": {
            "type": "integer",
            "format": "int64"
          },
          "memoryInMB": {
            "type": "integer",
            "format": "int32"
          },
          "memoryLimitationInMB": {
            "type": "integer",
            "format": "int32"
          },
          "memoryReservedInMB": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.ResourcesReports.VmInfoApiDataItems.PerformanceResourceReportApi": {
        "type": "object",
        "properties": {
          "bandwidthInBps": {
            "type": "number",
            "format": "double"
          },
          "throughputInBps": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.ResourcesReports.VmInfoApiDataItems.ProtectedComputeResourceReportApi": {
        "type": "object",
        "properties": {
          "clusterName": {
            "type": "string",
            "nullable": true
          },
          "hostName": {
            "type": "string",
            "nullable": true
          },
          "vraName": {
            "type": "string",
            "nullable": true
          },
          "orgVdcName": {
            "type": "string",
            "nullable": true
          },
          "resourcePoolName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.ResourcesReports.VmInfoApiDataItems.ProtectedSiteResourceReportApi": {
        "type": "object",
        "properties": {
          "compute": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.ResourcesReports.VmInfoApiDataItems.ProtectedComputeResourceReportApi"
          },
          "storage": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.ResourcesReports.VmInfoApiDataItems.ProtectedStorageResourceReportApi"
          },
          "vmInfo": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.ResourcesReports.VmInfoApiDataItems.VmInfoResourceReportApi"
          },
          "siteName": {
            "type": "string",
            "nullable": true
          },
          "vcdOrgName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.ResourcesReports.VmInfoApiDataItems.ProtectedStorageResourceReportApi": {
        "type": "object",
        "properties": {
          "numberOfVolumes": {
            "type": "integer",
            "format": "int32"
          },
          "volumesProvisionedStorageInGB": {
            "type": "number",
            "format": "double"
          },
          "volumesUsedStorageInGB": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.ResourcesReports.VmInfoApiDataItems.RecoveryComputeResourceReportApi": {
        "type": "object",
        "properties": {
          "failoverOrMoveInstanceType": {
            "type": "string",
            "nullable": true
          },
          "failoverOrMoveInstanceFamily": {
            "type": "string",
            "nullable": true
          },
          "failoverTestInstanceType": {
            "type": "string",
            "nullable": true
          },
          "failoverTestInstanceFamily": {
            "type": "string",
            "nullable": true
          },
          "clusterName": {
            "type": "string",
            "nullable": true
          },
          "hostName": {
            "type": "string",
            "nullable": true
          },
          "vraName": {
            "type": "string",
            "nullable": true
          },
          "orgVdcName": {
            "type": "string",
            "nullable": true
          },
          "resourcePoolName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.ResourcesReports.VmInfoApiDataItems.RecoverySiteResourceReportApi": {
        "type": "object",
        "properties": {
          "compute": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.ResourcesReports.VmInfoApiDataItems.RecoveryComputeResourceReportApi"
          },
          "storage": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.ResourcesReports.VmInfoApiDataItems.RecoveryStorageResourceReportApi"
          },
          "siteName": {
            "type": "string",
            "nullable": true
          },
          "vcdOrgName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.ResourcesReports.VmInfoApiDataItems.RecoveryStorageResourceReportApi": {
        "type": "object",
        "properties": {
          "journalProvisionedStorageInGB": {
            "type": "number",
            "format": "double"
          },
          "journalUsedStorageInGB": {
            "type": "number",
            "format": "double"
          },
          "datastoreName": {
            "type": "string",
            "nullable": true
          },
          "storagePolicyName": {
            "type": "string",
            "nullable": true
          },
          "volumesProvisionedStorageInGB": {
            "type": "number",
            "format": "double"
          },
          "volumesUsedStorageInGB": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.ResourcesReports.VmInfoApiDataItems.VmInfoResourceReportApi": {
        "type": "object",
        "properties": {
          "hardwareVersion": {
            "type": "string",
            "nullable": true
          },
          "vmIdentifier": {
            "type": "string",
            "nullable": true
          },
          "vmName": {
            "type": "string",
            "nullable": true
          },
          "cpu": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.ResourcesReports.VmInfoApiDataItems.CpuResourceReportApi"
          },
          "memory": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.ResourcesReports.VmInfoApiDataItems.MemoryResourceReportApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.ResourcesReports.VmInfoApiDataItems.VpgResourceReportApi": {
        "type": "object",
        "properties": {
          "crmIdentifier": {
            "type": "string",
            "nullable": true
          },
          "serviceProfileName": {
            "type": "string",
            "nullable": true
          },
          "vpgName": {
            "type": "string",
            "nullable": true
          },
          "protectedAndRecoveryType": {
            "type": "string",
            "nullable": true
          },
          "zorgName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.ResourcesReports.VmResourcesReportApi": {
        "type": "object",
        "properties": {
          "sampleTime": {
            "type": "string",
            "nullable": true
          },
          "performance": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.ResourcesReports.VmInfoApiDataItems.PerformanceResourceReportApi"
          },
          "vpg": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.ResourcesReports.VmInfoApiDataItems.VpgResourceReportApi"
          },
          "protectedSite": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.ResourcesReports.VmInfoApiDataItems.ProtectedSiteResourceReportApi"
          },
          "recoverySite": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.ResourcesReports.VmInfoApiDataItems.RecoverySiteResourceReportApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Scripts.CreateFolderApi": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Scripts.ItemApi": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Scripts.ItemTypeEnumApi"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Scripts.ItemTypeEnumApi": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Zvm.Api.Interfaces.Scripts.ListItemsResultApi": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Scripts.ItemApi"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.ServiceProfiles.ServiceProfileApi": {
        "type": "object",
        "properties": {
          "link": {
            "$ref": "#/components/schemas/Zerto.Api.Interfaces.ResourceLink"
          },
          "serviceProfileName": {
            "type": "string",
            "nullable": true
          },
          "rpo": {
            "type": "string",
            "format": "date-span"
          },
          "history": {
            "type": "string",
            "format": "date-span"
          },
          "maxJournalSizeInPercent": {
            "type": "integer",
            "format": "int32"
          },
          "testInterval": {
            "type": "string",
            "format": "date-span"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "journalWarningThresholdInPercent": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Sites.LocalSiteApi": {
        "type": "object",
        "properties": {
          "link": {
            "$ref": "#/components/schemas/Zerto.Api.Interfaces.ResourceLink"
          },
          "siteName": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "displayVersion": {
            "type": "string",
            "nullable": true
          },
          "zvmApiVersion": {
            "type": "string",
            "nullable": true
          },
          "contactEmail": {
            "type": "string",
            "nullable": true
          },
          "contactName": {
            "type": "string",
            "nullable": true
          },
          "contactPhone": {
            "type": "string",
            "nullable": true
          },
          "isReplicationToSelfEnabled": {
            "type": "boolean"
          },
          "utcOffsetInMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "siteType": {
            "type": "string",
            "nullable": true
          },
          "ipAddress": {
            "type": "string",
            "nullable": true
          },
          "bandwidthThrottlingInMBs": {
            "type": "number",
            "format": "double"
          },
          "siteTypeVersion": {
            "type": "string",
            "nullable": true
          },
          "platformInformation": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Sites.PlatformInformationApi"
          },
          "isLoginBannerEnabled": {
            "type": "boolean"
          },
          "loginBanner": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Sites.LoginBannerSettingsApi": {
        "type": "object",
        "properties": {
          "isLoginBannerEnabled": {
            "type": "boolean"
          },
          "loginBanner": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Sites.PairDataApi": {
        "type": "object",
        "properties": {
          "hostName": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "token": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Sites.PairingTokenResult": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "utcExpirationDate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Sites.PairingVisualStatusApi": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Zvm.Api.Interfaces.Sites.PeerSiteApi": {
        "type": "object",
        "properties": {
          "link": {
            "$ref": "#/components/schemas/Zerto.Api.Interfaces.ResourceLink"
          },
          "peerSiteName": {
            "type": "string",
            "nullable": true
          },
          "pairingStatus": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Sites.PairingVisualStatusApi"
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "hostName": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "provisionedStorage": {
            "type": "integer",
            "format": "int64"
          },
          "usedStorage": {
            "type": "integer",
            "format": "int64"
          },
          "incomingThroughputInMb": {
            "type": "number",
            "format": "double"
          },
          "outgoingBandWidth": {
            "type": "number",
            "format": "double"
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "siteType": {
            "type": "string",
            "nullable": true
          },
          "regionName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Sites.PlatformInformationApi": {
        "type": "object",
        "properties": {
          "azure": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Sites.PlatformInformationAzureApi"
          },
          "vCenter": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Sites.PlatformInformationVCenterApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Sites.PlatformInformationAzureApi": {
        "type": "object",
        "properties": {
          "regionName": {
            "type": "string",
            "nullable": true
          },
          "subscription": {
            "type": "string",
            "nullable": true
          },
          "resourceGroup": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Sites.PlatformInformationVCenterApi": {
        "type": "object",
        "properties": {
          "ip": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Sites.UnPairDataApi": {
        "type": "object",
        "properties": {
          "isKeepTargetDisks": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Statistics.VmStatisticsApi": {
        "type": "object",
        "properties": {
          "vmIdentifier": {
            "type": "string",
            "nullable": true
          },
          "vpgIdentifier": {
            "type": "string",
            "nullable": true
          },
          "ioOperationsCounter": {
            "type": "integer",
            "format": "int64"
          },
          "writeCounterInMBs": {
            "type": "integer",
            "format": "int64"
          },
          "syncCounterInMBs": {
            "type": "integer",
            "format": "int64"
          },
          "networkTrafficCounterInMBs": {
            "type": "integer",
            "format": "int64"
          },
          "sampleTime": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.StoragePolicies.StoragePolicyApi": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Tasks.TaskApi": {
        "type": "object",
        "properties": {
          "link": {
            "$ref": "#/components/schemas/Zerto.Api.Interfaces.ResourceLink"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Tasks.TaskStatusApi"
          },
          "initiatedBy": {
            "type": "string",
            "nullable": true
          },
          "started": {
            "type": "string",
            "format": "date-time"
          },
          "completed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "completeReason": {
            "type": "string",
            "nullable": true
          },
          "isCancellable": {
            "type": "boolean"
          },
          "relatedEntities": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Tasks.TaskRelatedEntitiesApi"
          },
          "generation": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Tasks.TaskRelatedEntitiesApi": {
        "type": "object",
        "properties": {
          "vpgs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Api.Interfaces.ResourceLink"
            },
            "nullable": true
          },
          "sites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Api.Interfaces.ResourceLink"
            },
            "nullable": true
          },
          "hosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Api.Interfaces.ResourceLink"
            },
            "nullable": true
          },
          "flrSessions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Api.Interfaces.ResourceLink"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Tasks.TaskStatusApi": {
        "type": "object",
        "properties": {
          "state": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Tasks.TaskStatusEnumApi"
          },
          "progress": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Tasks.TaskStatusEnumApi": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Zvm.Api.Interfaces.VirtualizationSites.BackupTargetInfoRepositoriesApi": {
        "type": "object",
        "properties": {
          "repositoryIdentifier": {
            "type": "string",
            "nullable": true
          },
          "repositoryName": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "connectionType": {
            "type": "string",
            "nullable": true
          },
          "storageType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VirtualizationSites.BaseHostNativeApi": {
        "type": "object",
        "properties": {
          "hostIdentifier": {
            "type": "string",
            "nullable": true
          },
          "hostVersion": {
            "type": "string",
            "nullable": true
          },
          "virtualizationHostName": {
            "type": "string",
            "nullable": true
          },
          "connectionStatus": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VirtualizationSites.DatastoreClusterNativeApi": {
        "type": "object",
        "properties": {
          "datastoreClusterName": {
            "type": "string",
            "nullable": true
          },
          "datastoreClusterIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VirtualizationSites.DatastoreNativeApi": {
        "type": "object",
        "properties": {
          "datastoreName": {
            "type": "string",
            "nullable": true
          },
          "datastoreIdentifier": {
            "type": "string",
            "nullable": true
          },
          "owningDatastoreCluster": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.DatastoreClusterNativeApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VirtualizationSites.DeviceDataApi": {
        "type": "object",
        "properties": {
          "deviceIdentifier": {
            "type": "string",
            "nullable": true
          },
          "datastoreIdentifier": {
            "type": "string",
            "nullable": true
          },
          "deviceName": {
            "type": "string",
            "nullable": true
          },
          "sizeInBytes": {
            "type": "integer",
            "format": "int64"
          },
          "hostIdentifiers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "vmIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VirtualizationSites.DiskEncryptionKeyApi": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VirtualizationSites.EncryptionKeyApi": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "keysContainerId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VirtualizationSites.FolderNativeApi": {
        "type": "object",
        "properties": {
          "folderName": {
            "type": "string",
            "nullable": true
          },
          "folderIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VirtualizationSites.HostClusterNativeApi": {
        "type": "object",
        "properties": {
          "clusterIdentifier": {
            "type": "string",
            "nullable": true
          },
          "virtualizationClusterName": {
            "type": "string",
            "nullable": true
          },
          "associatedHosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.BaseHostNativeApi"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VirtualizationSites.HostNativeApi": {
        "type": "object",
        "properties": {
          "associatedDatastores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.DatastoreNativeApi"
            },
            "nullable": true
          },
          "associatedNetworks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.NetworkNativeApi"
            },
            "nullable": true
          },
          "hostIdentifier": {
            "type": "string",
            "nullable": true
          },
          "hostVersion": {
            "type": "string",
            "nullable": true
          },
          "virtualizationHostName": {
            "type": "string",
            "nullable": true
          },
          "connectionStatus": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VirtualizationSites.KeysContainerApi": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VirtualizationSites.ManagedIdentityApi": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VirtualizationSites.NetworkNativeApi": {
        "type": "object",
        "properties": {
          "virtualizationNetworkName": {
            "type": "string",
            "nullable": true
          },
          "networkIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VirtualizationSites.NicNativeApi": {
        "type": "object",
        "properties": {
          "nicIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VirtualizationSites.OrgVdcNativeApi": {
        "type": "object",
        "properties": {
          "orgVdcName": {
            "type": "string",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VirtualizationSites.ResourceGroupApi": {
        "type": "object",
        "properties": {
          "internalId": {
            "type": "string",
            "nullable": true
          },
          "resourceGroupName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VirtualizationSites.ResourcePoolNativeApi": {
        "type": "object",
        "properties": {
          "resourcepoolName": {
            "type": "string",
            "nullable": true
          },
          "resourcePoolIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VirtualizationSites.SecurityGroupApi": {
        "type": "object",
        "properties": {
          "securityGroupIdentifier": {
            "type": "string",
            "nullable": true
          },
          "securityGroupName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VirtualizationSites.StoragePolicyApi": {
        "type": "object",
        "properties": {
          "storagePolicyIdentifier": {
            "type": "string",
            "nullable": true
          },
          "storagePolicyName": {
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VirtualizationSites.SubnetApi": {
        "type": "object",
        "properties": {
          "virtualNetworkIdentifier": {
            "type": "string",
            "nullable": true
          },
          "subnetIdentifier": {
            "type": "string",
            "nullable": true
          },
          "subnetName": {
            "type": "string",
            "nullable": true
          },
          "ipRange": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VirtualizationSites.VCDVappNativeApi": {
        "type": "object",
        "properties": {
          "vcdName": {
            "type": "string",
            "nullable": true
          },
          "vcdVappIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VirtualizationSites.VirtualNetworkApi": {
        "type": "object",
        "properties": {
          "virtualNetworkIdentifier": {
            "type": "string",
            "nullable": true
          },
          "virtualNetworkName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VirtualizationSites.VirtualizationSiteApi": {
        "type": "object",
        "properties": {
          "siteIdentifier": {
            "type": "string",
            "nullable": true
          },
          "virtualizationSiteName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VirtualizationSites.VmInstanceTypeApi": {
        "type": "object",
        "properties": {
          "vmInstanceType": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "vmSeries": {
            "type": "string",
            "nullable": true
          },
          "isPremiumSupported": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VirtualizationSites.VmNativeApi": {
        "type": "object",
        "properties": {
          "vmName": {
            "type": "string",
            "nullable": true
          },
          "vmIdentifier": {
            "type": "string",
            "nullable": true
          },
          "vmInstanceIdentifier": {
            "type": "string",
            "nullable": true
          },
          "owningHostIdentifier": {
            "type": "string",
            "nullable": true
          },
          "owningHostName": {
            "type": "string",
            "nullable": true
          },
          "owningDatastoreIdentifier": {
            "type": "string",
            "nullable": true
          },
          "owningDatastoreName": {
            "type": "string",
            "nullable": true
          },
          "guestOs": {
            "type": "string",
            "nullable": true
          },
          "vmNetworkInformation": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.VmNetworkInformation"
          },
          "vmPerfMetricInfo": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.VmPerfMetricInfo"
          },
          "nics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.NicNativeApi"
            },
            "nullable": true
          },
          "volumes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Volumes.VmVolumeApi"
            },
            "nullable": true
          },
          "isAgentInstalled": {
            "type": "boolean"
          },
          "platformInformation": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vms.VmPlatformInformation"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VirtualizationSites.VmNetworkAdapter": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "networkIdentifier": {
            "type": "string",
            "nullable": true
          },
          "ipAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VirtualizationSites.VmNetworkInformation": {
        "type": "object",
        "properties": {
          "networkAdapters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.VmNetworkAdapter"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VirtualizationSites.VmPerfMetricInfo": {
        "type": "object",
        "properties": {
          "provisionedStorageInMB": {
            "type": "integer",
            "format": "int32"
          },
          "usedStorageInMB": {
            "type": "integer",
            "format": "int32"
          },
          "cpuCoresNum": {
            "type": "integer",
            "format": "int32"
          },
          "memorySizeInMB": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vms.JournalVMRestoreCommitPolicyApi": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Zvm.Api.Interfaces.Vms.JournalVMRestoreDataApi": {
        "type": "object",
        "properties": {
          "vpgIdentifier": {
            "type": "string",
            "nullable": true
          },
          "restoredVmName": {
            "type": "string",
            "nullable": true
          },
          "checkpointIdentifier": {
            "type": "string",
            "nullable": true
          },
          "commitPolicy": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vms.JournalVMRestoreCommitPolicyApi"
          },
          "shutdownPolicy": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vms.JournalVMRestoreShutdownPolicyApi"
          },
          "timeToWaitBeforeContinueInSeconds": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "journalVMRestoreSettings": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vms.JournalVMRestoreSettingsDataApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vms.JournalVMRestoreDatastoreDataApi": {
        "type": "object",
        "properties": {
          "datastoreIdentifier": {
            "type": "string",
            "nullable": true
          },
          "isThin": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vms.JournalVMRestoreHypervisorSettingsDataApi": {
        "type": "object",
        "properties": {
          "dnsSuffix": {
            "type": "string",
            "nullable": true
          },
          "ipConfig": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vms.JournalVMRestoreIpSettingsDataApi"
          },
          "networkIdentifier": {
            "type": "string",
            "nullable": true
          },
          "shouldReplaceMacAddress": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vms.JournalVMRestoreIpSettingsDataApi": {
        "type": "object",
        "properties": {
          "gateway": {
            "type": "string",
            "nullable": true
          },
          "isDhcp": {
            "type": "boolean"
          },
          "primaryDns": {
            "type": "string",
            "nullable": true
          },
          "secondaryDns": {
            "type": "string",
            "nullable": true
          },
          "staticIp": {
            "type": "string",
            "nullable": true
          },
          "subnetMask": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vms.JournalVMRestoreNicDataApi": {
        "type": "object",
        "properties": {
          "hypervisor": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vms.JournalVMRestoreHypervisorSettingsDataApi"
          },
          "nicIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vms.JournalVMRestoreSettingsDataApi": {
        "type": "object",
        "properties": {
          "datastoreIdentifier": {
            "type": "string",
            "nullable": true
          },
          "nics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vms.JournalVMRestoreNicDataApi"
            },
            "nullable": true
          },
          "volumes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vms.JournalVMRestoreVolumeDataApi"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vms.JournalVMRestoreShutdownPolicyApi": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Zvm.Api.Interfaces.Vms.JournalVMRestoreVolumeDataApi": {
        "type": "object",
        "properties": {
          "datastore": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vms.JournalVMRestoreDatastoreDataApi"
          },
          "volumeIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vms.ResourceTagApi": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vms.VmApi": {
        "type": "object",
        "properties": {
          "link": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vms.VmResourceLink"
          },
          "organizationName": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.VpgPriorityApi"
          },
          "provisionedStorageInMB": {
            "type": "integer",
            "format": "int32"
          },
          "usedStorageInMB": {
            "type": "integer",
            "format": "int32"
          },
          "cpuCoresNum": {
            "type": "integer",
            "format": "int32"
          },
          "memorySizeInMB": {
            "type": "integer",
            "format": "int32"
          },
          "journalUsedStorageMb": {
            "type": "integer",
            "format": "int64"
          },
          "journalWarningThreshold": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vms.VmJournalLimitApi"
          },
          "journalHardLimit": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vms.VmJournalLimitApi"
          },
          "ioPs": {
            "type": "integer",
            "format": "int32"
          },
          "throughputInMB": {
            "type": "number",
            "format": "double"
          },
          "outgoingBandWidthInMbps": {
            "type": "number",
            "format": "double"
          },
          "actualRPO": {
            "type": "integer",
            "format": "int32"
          },
          "lastTest": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "vpgName": {
            "type": "string",
            "nullable": true
          },
          "vmName": {
            "type": "string",
            "nullable": true
          },
          "volumes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Volumes.VmVolumeApi"
            },
            "nullable": true
          },
          "nics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.NicNativeApi"
            },
            "nullable": true
          },
          "protectedSiteName": {
            "type": "string",
            "nullable": true
          },
          "recoverySiteName": {
            "type": "string",
            "nullable": true
          },
          "entities": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.VpgEntitiesApi"
          },
          "status": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.VpgVisualStatusApi"
          },
          "subStatus": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.VpgVisualSubStatusApi"
          },
          "protectedSite": {
            "$ref": "#/components/schemas/Zerto.Api.Interfaces.ResourceLink"
          },
          "recoverySite": {
            "$ref": "#/components/schemas/Zerto.Api.Interfaces.ResourceLink"
          },
          "enabledActions": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vms.VmEnabledActionsApi"
          },
          "isVmExists": {
            "type": "boolean"
          },
          "recoveryHostIdentifier": {
            "type": "string",
            "nullable": true
          },
          "recoveryHostName": {
            "type": "string",
            "nullable": true
          },
          "owningHostIdentifier": {
            "type": "string",
            "nullable": true
          },
          "owningHostName": {
            "type": "string",
            "nullable": true
          },
          "owningDatastoreIdentifier": {
            "type": "string",
            "nullable": true
          },
          "owningDatastoreName": {
            "type": "string",
            "nullable": true
          },
          "guestOs": {
            "type": "string",
            "nullable": true
          },
          "vmNetworkInformation": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VirtualizationSites.VmNetworkInformation"
          },
          "hardwareVersion": {
            "type": "string",
            "nullable": true
          },
          "isAgentInstalled": {
            "type": "boolean"
          },
          "platformInformation": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vms.VmPlatformInformation"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vms.VmEnabledActionsApi": {
        "type": "object",
        "properties": {
          "isFlrEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vms.VmJournalLimitApi": {
        "type": "object",
        "properties": {
          "limitType": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vms.VmJournalLimitTypeApi"
          },
          "limitValue": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vms.VmJournalLimitTypeApi": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Zvm.Api.Interfaces.Vms.VmPlatformInformation": {
        "type": "object",
        "properties": {
          "azure": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vms.VmPlatformInformationAzure"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vms.VmPlatformInformationAzure": {
        "type": "object",
        "properties": {
          "resourceGroup": {
            "type": "string",
            "nullable": true
          },
          "machineSize": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vms.ResourceTagApi"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vms.VmResourceLink": {
        "type": "object",
        "properties": {
          "vpg_identifier": {
            "type": "string",
            "nullable": true
          },
          "instance_identifier": {
            "type": "string",
            "nullable": true
          },
          "rel": {
            "type": "string",
            "nullable": true
          },
          "href": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Volumes.VmVolumeApi": {
        "type": "object",
        "properties": {
          "vmVolumeIdentifier": {
            "type": "string",
            "nullable": true
          },
          "publicCloudVolumeIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Volumes.VolumeApi": {
        "type": "object",
        "properties": {
          "volumeType": {
            "type": "string",
            "nullable": true
          },
          "isThinProvisioned": {
            "type": "boolean"
          },
          "volumeIdentifier": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Volumes.VolumePathApi"
          },
          "size": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Volumes.VolumeSizeApi"
          },
          "datastore": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Volumes.VolumeDatastoreApi"
          },
          "owningVm": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Volumes.VolumeVmApi"
          },
          "protectedVm": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Volumes.VolumeVmApi"
          },
          "vpg": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Volumes.VolumeVpgApi"
          },
          "storagePolicy": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.StoragePolicies.StoragePolicyApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Volumes.VolumeDatastoreApi": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Volumes.VolumePathApi": {
        "type": "object",
        "properties": {
          "full": {
            "type": "string",
            "nullable": true
          },
          "relative": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Volumes.VolumeSizeApi": {
        "type": "object",
        "properties": {
          "usedInBytes": {
            "type": "integer",
            "format": "int64"
          },
          "provisionedInBytes": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Volumes.VolumeVmApi": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Volumes.VolumeVpgApi": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.CopyVpgSettingsApi": {
        "type": "object",
        "properties": {
          "vpgIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.ExportedVpgSettingsApi": {
        "type": "object",
        "properties": {
          "sourceSiteName": {
            "type": "string",
            "nullable": true
          },
          "targetSiteName": {
            "type": "string",
            "nullable": true
          },
          "vpgIdentifier": {
            "type": "string",
            "nullable": true
          },
          "vpgSettingsIdentifier": {
            "type": "string",
            "nullable": true
          },
          "basic": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsBasicApi"
          },
          "scripting": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsScriptsApi"
          },
          "bootGroups": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsBootGroupsApi"
          },
          "journal": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsJournalApi"
          },
          "scratch": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsScratchApi"
          },
          "longTermRetention": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsLtrApi"
          },
          "recovery": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsRecoveryApi"
          },
          "networks": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsNetworksApi"
          },
          "vms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmApi"
            },
            "nullable": true
          },
          "protected": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsProtectedApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.ImportVpgSettingsApi": {
        "type": "object",
        "properties": {
          "exportedVpgSettingsApi": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.ExportedVpgSettingsApi"
            },
            "nullable": true
          },
          "vpgNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.PublicCloudEncryptionSettingsRecoveryApi": {
        "type": "object",
        "properties": {
          "encryptionType": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.PublicCloudEncryptionTypeApi"
          },
          "diskEncryptionKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.PublicCloudEncryptionTypeApi": {
        "enum": [
          0,
          1,
          -1
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsApi": {
        "type": "object",
        "properties": {
          "vpgIdentifier": {
            "type": "string",
            "nullable": true
          },
          "vpgSettingsIdentifier": {
            "type": "string",
            "nullable": true
          },
          "basic": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsBasicApi"
          },
          "scripting": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsScriptsApi"
          },
          "bootGroups": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsBootGroupsApi"
          },
          "journal": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsJournalApi"
          },
          "scratch": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsScratchApi"
          },
          "longTermRetention": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsLtrApi"
          },
          "recovery": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsRecoveryApi"
          },
          "networks": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsNetworksApi"
          },
          "vms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmApi"
            },
            "nullable": true
          },
          "protected": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsProtectedApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsBasicApi": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "vpgType": {
            "type": "string",
            "nullable": true
          },
          "rpoInSeconds": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "testIntervalInMinutes": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "journalHistoryInHours": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "priority": {
            "type": "string",
            "nullable": true
          },
          "useWanCompression": {
            "type": "boolean",
            "nullable": true
          },
          "serviceProfileIdentifier": {
            "type": "string",
            "nullable": true
          },
          "zorgIdentifier": {
            "type": "string",
            "nullable": true
          },
          "protectedSiteIdentifier": {
            "type": "string",
            "nullable": true
          },
          "recoverySiteIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsBootGroupApi": {
        "type": "object",
        "properties": {
          "bootGroupIdentifier": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "bootDelayInSeconds": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsBootGroupsApi": {
        "type": "object",
        "properties": {
          "bootGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsBootGroupApi"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsDownloadExportApi": {
        "type": "object",
        "properties": {
          "exportedVpgSettingsApi": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.ExportedVpgSettingsApi"
            },
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsExportApi": {
        "type": "object",
        "properties": {
          "timeStamp": {
            "type": "string",
            "format": "date-time"
          },
          "exportResult": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsExportResultApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsExportResultApi": {
        "type": "object",
        "properties": {
          "result": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsExportVpgInfoApi": {
        "type": "object",
        "properties": {
          "vpgName": {
            "type": "string",
            "nullable": true
          },
          "sourceSiteName": {
            "type": "string",
            "nullable": true
          },
          "targetSiteName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsExportedDataInfoApi": {
        "type": "object",
        "properties": {
          "timeStamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsHypervisorNetworkApi": {
        "type": "object",
        "properties": {
          "defaultNetworkIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsImportFailedResultApi": {
        "type": "object",
        "properties": {
          "vpgName": {
            "type": "string",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsImportTaskIdentifierResultApi": {
        "type": "object",
        "properties": {
          "vpgName": {
            "type": "string",
            "nullable": true
          },
          "taskIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsImportValidationResultApi": {
        "type": "object",
        "properties": {
          "vpgName": {
            "type": "string",
            "nullable": true
          },
          "errorMessages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsImportVpgsResultApi": {
        "type": "object",
        "properties": {
          "validationFailedResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsImportValidationResultApi"
            },
            "nullable": true
          },
          "importFailedResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsImportFailedResultApi"
            },
            "nullable": true
          },
          "importTaskIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsImportTaskIdentifierResultApi"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsJournalApi": {
        "type": "object",
        "properties": {
          "limitation": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsJournalLimitationApi"
          },
          "datastoreIdentifier": {
            "type": "string",
            "nullable": true
          },
          "datastoreClusterIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsJournalLimitationApi": {
        "type": "object",
        "properties": {
          "hardLimitInMB": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hardLimitInPercent": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "warningThresholdInMB": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "warningThresholdInPercent": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsLtrApi": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "repositoryIdentifier": {
            "type": "string",
            "nullable": true
          },
          "retentionRunTime": {
            "type": "string",
            "nullable": true
          },
          "schedulerPolicy": {
            "$ref": "#/components/schemas/Zerto.Api.Interfaces.LTR.LtrSchedulerPolicyApi"
          },
          "retry": {
            "$ref": "#/components/schemas/Zerto.Api.Interfaces.LTR.LtrRetryApi"
          },
          "indexing": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsLtrVmIndexingApi"
          },
          "compression": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsLtrVmIndexingApi": {
        "type": "object",
        "properties": {
          "vms": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsNamesApi": {
        "type": "object",
        "properties": {
          "vpgNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsNetworkApi": {
        "type": "object",
        "properties": {
          "vcd": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVcdNetworkApi"
          },
          "hypervisor": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsHypervisorNetworkApi"
          },
          "publicCloud": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsPublicCloudNetworkApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsNetworksApi": {
        "type": "object",
        "properties": {
          "failover": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsNetworkApi"
          },
          "failoverTest": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsNetworkApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsProtectedApi": {
        "type": "object",
        "properties": {
          "vcd": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVcdProtectedApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsPublicCloudInfoRecoveryApi": {
        "type": "object",
        "properties": {
          "vmInstanceType": {
            "type": "string",
            "nullable": true
          },
          "azure": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsPublicCloudProviderInfoRecoveryApi"
          },
          "encryption": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.PublicCloudEncryptionSettingsRecoveryApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsPublicCloudNetworkApi": {
        "type": "object",
        "properties": {
          "virtualNetworkIdentifier": {
            "type": "string",
            "nullable": true
          },
          "subnetIdentifier": {
            "type": "string",
            "nullable": true
          },
          "securityGroupIdentifiers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsPublicCloudProviderInfoRecoveryApi": {
        "type": "object",
        "properties": {
          "recoveryDiskType": {
            "type": "string",
            "nullable": true
          },
          "recoveryResourceGroup": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsPublicCloudRecoveryApi": {
        "type": "object",
        "properties": {
          "failover": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsPublicCloudInfoRecoveryApi"
          },
          "failoverTest": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsPublicCloudInfoRecoveryApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsRecoveryApi": {
        "type": "object",
        "properties": {
          "defaultHostIdentifier": {
            "type": "string",
            "nullable": true
          },
          "defaultHostClusterIdentifier": {
            "type": "string",
            "nullable": true
          },
          "defaultDatastoreIdentifier": {
            "type": "string",
            "nullable": true
          },
          "defaultDatastoreClusterIdentifier": {
            "type": "string",
            "nullable": true
          },
          "defaultFolderIdentifier": {
            "type": "string",
            "nullable": true
          },
          "resourcePoolIdentifier": {
            "type": "string",
            "nullable": true
          },
          "vcd": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVcdRecoveryApi"
          },
          "publicCloud": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsPublicCloudRecoveryApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsScratchApi": {
        "type": "object",
        "properties": {
          "limitation": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsScratchLimitationApi"
          },
          "datastoreIdentifier": {
            "type": "string",
            "nullable": true
          },
          "datastoreClusterIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsScratchLimitationApi": {
        "type": "object",
        "properties": {
          "hardLimitInMB": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hardLimitInPercent": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "warningThresholdInMB": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "warningThresholdInPercent": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsScriptApi": {
        "type": "object",
        "properties": {
          "command": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "string",
            "nullable": true
          },
          "timeoutInSeconds": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsScriptsApi": {
        "type": "object",
        "properties": {
          "preRecovery": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsScriptApi"
          },
          "postRecovery": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsScriptApi"
          },
          "postBackup": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsScriptApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVcdNetworkApi": {
        "type": "object",
        "properties": {
          "copyNATRules": {
            "type": "string",
            "nullable": true
          },
          "isEnableGuestCustomization": {
            "type": "boolean",
            "nullable": true
          },
          "mapping": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVcdNetworksMappingApi"
            },
            "nullable": true
          },
          "defaultRecoveryOrgVdcNetworkIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVcdNetworksMappingApi": {
        "type": "object",
        "properties": {
          "protectedOrgVdcNetworkIdentifier": {
            "type": "string",
            "nullable": true
          },
          "recoveryOrgVdcNetworkIdentifier": {
            "type": "string",
            "nullable": true
          },
          "reverseTestOrgVdcNetworkIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVcdProtectedApi": {
        "type": "object",
        "properties": {
          "vcdVappIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVcdRecoveryApi": {
        "type": "object",
        "properties": {
          "orgVdcIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmApi": {
        "type": "object",
        "properties": {
          "vmIdentifier": {
            "type": "string",
            "nullable": true
          },
          "recovery": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmRecoveryApi"
          },
          "bootGroupIdentifier": {
            "type": "string",
            "nullable": true
          },
          "journal": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmJournalApi"
          },
          "scratch": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsScratchApi"
          },
          "volumes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmVolumeApi"
            },
            "nullable": true
          },
          "nics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmNicApi"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmJournalApi": {
        "type": "object",
        "properties": {
          "limitation": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmJournalLimitationApi"
          },
          "datastoreIdentifier": {
            "type": "string",
            "nullable": true
          },
          "datastoreClusterIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmJournalLimitationApi": {
        "type": "object",
        "properties": {
          "hardLimitInMB": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hardLimitInPercent": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "warningThresholdInMB": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "warningThresholdInPercent": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmNicApi": {
        "type": "object",
        "properties": {
          "nicIdentifier": {
            "type": "string",
            "nullable": true
          },
          "failoverTest": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmNicNetworkApi"
          },
          "failover": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmNicNetworkApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmNicHypervisorIpConfig": {
        "type": "object",
        "properties": {
          "staticIp": {
            "type": "string",
            "nullable": true
          },
          "subnetMask": {
            "type": "string",
            "nullable": true
          },
          "gateway": {
            "type": "string",
            "nullable": true
          },
          "primaryDns": {
            "type": "string",
            "nullable": true
          },
          "secondaryDns": {
            "type": "string",
            "nullable": true
          },
          "isDhcp": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmNicHypervisorNetworkApi": {
        "type": "object",
        "properties": {
          "networkIdentifier": {
            "type": "string",
            "nullable": true
          },
          "shouldReplaceMacAddress": {
            "type": "boolean",
            "nullable": true
          },
          "dnsSuffix": {
            "type": "string",
            "nullable": true
          },
          "ipConfig": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmNicHypervisorIpConfig"
          },
          "shouldReplaceIpConfiguration": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmNicNetworkApi": {
        "type": "object",
        "properties": {
          "hypervisor": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmNicHypervisorNetworkApi"
          },
          "vcd": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmNicVcdNetworkApi"
          },
          "publicCloud": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmNicPublicCloudNetworkApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmNicPublicCloudNetworkApi": {
        "type": "object",
        "properties": {
          "subnetIdentifier": {
            "type": "string",
            "nullable": true
          },
          "securityGroupIdentifiers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "privateIP": {
            "type": "string",
            "nullable": true
          },
          "isPrimary": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmNicVcdNetworkApi": {
        "type": "object",
        "properties": {
          "isResetMacAddress": {
            "type": "boolean",
            "nullable": true
          },
          "isPrimary": {
            "type": "boolean",
            "nullable": true
          },
          "isConnected": {
            "type": "boolean",
            "nullable": true
          },
          "ipMode": {
            "type": "string",
            "nullable": true
          },
          "ipAddress": {
            "type": "string",
            "nullable": true
          },
          "recoveryOrgVdcNetworkIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmPublicCloudInfoRecoveryApi": {
        "type": "object",
        "properties": {
          "vmInstanceType": {
            "type": "string",
            "nullable": true
          },
          "azure": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmPublicCloudProviderInfoRecoveryApi"
          },
          "virtualNetworkIdentifier": {
            "type": "string",
            "nullable": true
          },
          "encryption": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.PublicCloudEncryptionSettingsRecoveryApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmPublicCloudProviderInfoRecoveryApi": {
        "type": "object",
        "properties": {
          "recoveryDiskType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmPublicCloudRecoveryApi": {
        "type": "object",
        "properties": {
          "failover": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmPublicCloudInfoRecoveryApi"
          },
          "failoverTest": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmPublicCloudInfoRecoveryApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmRecoveryApi": {
        "type": "object",
        "properties": {
          "hostIdentifier": {
            "type": "string",
            "nullable": true
          },
          "hostClusterIdentifier": {
            "type": "string",
            "nullable": true
          },
          "datastoreIdentifier": {
            "type": "string",
            "nullable": true
          },
          "datastoreClusterIdentifier": {
            "type": "string",
            "nullable": true
          },
          "folderIdentifier": {
            "type": "string",
            "nullable": true
          },
          "resourcePoolIdentifier": {
            "type": "string",
            "nullable": true
          },
          "vcd": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmVcdRecoveryApi"
          },
          "publicCloud": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmPublicCloudRecoveryApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmVcdRecoveryApi": {
        "type": "object",
        "properties": {
          "storagePolicyIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmVolumeApi": {
        "type": "object",
        "properties": {
          "volumeIdentifier": {
            "type": "string",
            "nullable": true
          },
          "vcd": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmVolumeVcdApi"
          },
          "preseed": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmVolumePreseedApi"
          },
          "rdm": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmVolumeRdmApi"
          },
          "datastore": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmVolumeDatastoreApi"
          },
          "volumeSyncSettings": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmVolumeDatastoreApi": {
        "type": "object",
        "properties": {
          "datastoreClusterIdentifier": {
            "type": "string",
            "nullable": true
          },
          "datastoreIdentifier": {
            "type": "string",
            "nullable": true
          },
          "isThin": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmVolumePreseedApi": {
        "type": "object",
        "properties": {
          "datastoreIdentifier": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmVolumeRdmApi": {
        "type": "object",
        "properties": {
          "deviceIdentifier": {
            "type": "string",
            "nullable": true
          },
          "isPhysical": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.VpgSettings.VpgSettingsVmVolumeVcdApi": {
        "type": "object",
        "properties": {
          "isThin": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vpgs.CheckpointApi": {
        "type": "object",
        "properties": {
          "checkpointIdentifier": {
            "type": "string",
            "nullable": true
          },
          "timeStamp": {
            "type": "string",
            "format": "date-time"
          },
          "tag": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.CheckpointTypeApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vpgs.CheckpointTypeApi": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Zvm.Api.Interfaces.Vpgs.CloneStartDataApi": {
        "type": "object",
        "properties": {
          "checkpointId": {
            "type": "string",
            "nullable": true
          },
          "datastoreIdentifier": {
            "type": "string",
            "nullable": true
          },
          "vmIdentifiers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vpgs.CommitPolicyApi": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Zvm.Api.Interfaces.Vpgs.FailOverTestApi": {
        "type": "object",
        "properties": {
          "stage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vpgs.FailOverTestStartDataApi": {
        "type": "object",
        "properties": {
          "checkpointIdentifier": {
            "type": "string",
            "nullable": true
          },
          "vmIdentifiers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vpgs.FailoverCommitDataApi": {
        "type": "object",
        "properties": {
          "isReverseProtection": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vpgs.FailoverDataApi": {
        "type": "object",
        "properties": {
          "checkpointIdentifier": {
            "type": "string",
            "nullable": true
          },
          "commitPolicy": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.CommitPolicyApi"
          },
          "timeToWaitBeforeShutdownInSec": {
            "type": "integer",
            "format": "int32"
          },
          "shutdownPolicy": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.FailoverShutdownPolicyApi"
          },
          "isReverseProtection": {
            "type": "boolean",
            "nullable": true
          },
          "vmIdentifiers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vpgs.FailoverShutdownPolicyApi": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Zvm.Api.Interfaces.Vpgs.HistoryStatusApi": {
        "type": "object",
        "properties": {
          "actualHistoryInMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "configuredHistoryInMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "earliestCheckpoint": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.CheckpointApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vpgs.JournalHealthStatusApi": {
        "type": "object",
        "properties": {
          "actualFailSafeHistory": {
            "type": "integer",
            "format": "int32"
          },
          "configuredFailSafeHistory": {
            "type": "integer",
            "format": "int32"
          },
          "failSafeDescription": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vpgs.MoveCommitVpgDataApi": {
        "type": "object",
        "properties": {
          "reverseProtection": {
            "type": "boolean",
            "nullable": true
          },
          "keepSourceVms": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vpgs.MoveVpgDataApi": {
        "type": "object",
        "properties": {
          "commitPolicy": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.CommitPolicyApi"
          },
          "commitPolicyTimeout": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "forceShutdown": {
            "type": "boolean",
            "nullable": true
          },
          "reverseProtection": {
            "type": "boolean",
            "nullable": true
          },
          "keepSourceVms": {
            "type": "boolean",
            "nullable": true
          },
          "continueOnPreScriptFailure": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vpgs.StopFailoverTestDataApi": {
        "type": "object",
        "properties": {
          "failoverTestSuccess": {
            "type": "boolean",
            "nullable": true
          },
          "failoverTestSummary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vpgs.VpgActiveProcessesApi": {
        "type": "object",
        "properties": {
          "runningFailOverTestApi": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.FailOverTestApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vpgs.VpgAlertStatusApi": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Zvm.Api.Interfaces.Vpgs.VpgApi": {
        "type": "object",
        "properties": {
          "progressPercentage": {
            "type": "number",
            "format": "double"
          },
          "zorg": {
            "$ref": "#/components/schemas/Zerto.Api.Interfaces.ResourceLink"
          },
          "priority": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.VpgPriorityApi"
          },
          "vmsCount": {
            "type": "integer",
            "format": "int32"
          },
          "provisionedStorageInMB": {
            "type": "integer",
            "format": "int64"
          },
          "usedStorageInMB": {
            "type": "integer",
            "format": "int64"
          },
          "ioPs": {
            "type": "integer",
            "format": "int32"
          },
          "throughputInMB": {
            "type": "number",
            "format": "double"
          },
          "actualRPO": {
            "type": "integer",
            "format": "int32"
          },
          "configuredRpoSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "lastTest": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "vpgName": {
            "type": "string",
            "nullable": true
          },
          "vpgDescription": {
            "type": "string",
            "nullable": true
          },
          "vpgType": {
            "type": "string",
            "nullable": true
          },
          "link": {
            "$ref": "#/components/schemas/Zerto.Api.Interfaces.ResourceLink"
          },
          "protectedSiteName": {
            "type": "string",
            "nullable": true
          },
          "protectedSite": {
            "$ref": "#/components/schemas/Zerto.Api.Interfaces.ResourceLink"
          },
          "recoverySiteName": {
            "type": "string",
            "nullable": true
          },
          "recoverySite": {
            "$ref": "#/components/schemas/Zerto.Api.Interfaces.ResourceLink"
          },
          "entities": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.VpgEntitiesApi"
          },
          "status": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.VpgVisualStatusApi"
          },
          "statusDescription": {
            "type": "string",
            "nullable": true
          },
          "subStatus": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.VpgVisualSubStatusApi"
          },
          "subStatusDescription": {
            "type": "string",
            "nullable": true
          },
          "activeProcessesApi": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.VpgActiveProcessesApi"
          },
          "serviceProfile": {
            "$ref": "#/components/schemas/Zerto.Api.Interfaces.ResourceLink"
          },
          "backupEnabled": {
            "type": "boolean"
          },
          "failSafeHistory": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.JournalHealthStatusApi"
          },
          "historyStatusApi": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.HistoryStatusApi"
          },
          "alertStatus": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.VpgAlertStatusApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vpgs.VpgCheckpointsStatsApi": {
        "type": "object",
        "properties": {
          "earliest": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.CheckpointApi"
          },
          "latest": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.CheckpointApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vpgs.VpgDeleteDataApi": {
        "type": "object",
        "properties": {
          "keepRecoveryVolumes": {
            "type": "boolean",
            "nullable": true
          },
          "force": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vpgs.VpgEntitiesApi": {
        "type": "object",
        "properties": {
          "protected": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.VpgEntityTypeApi"
          },
          "recovery": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vpgs.VpgEntityTypeApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vpgs.VpgEntityTypeApi": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Zvm.Api.Interfaces.Vpgs.VpgInsertTagCheckpointDataApi": {
        "type": "object",
        "properties": {
          "checkpointName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vpgs.VpgPriorityApi": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Zvm.Api.Interfaces.Vpgs.VpgVisualStatusApi": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Zvm.Api.Interfaces.Vpgs.VpgVisualSubStatusApi": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40,
          41,
          42
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Zvm.Api.Interfaces.Vras.AlertStatusApi": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Zvm.Api.Interfaces.Vras.PlatformInformationApi": {
        "type": "object",
        "properties": {
          "azure": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.PlatformInformationAzureApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vras.PlatformInformationAzureApi": {
        "type": "object",
        "properties": {
          "storageAccountCmk": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vras.VraAlertsApi": {
        "type": "object",
        "properties": {
          "vraAlertsStatus": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.AlertStatusApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vras.VraAndDriverUpgradeStatusApi": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Zvm.Api.Interfaces.Vras.VraApi": {
        "type": "object",
        "properties": {
          "link": {
            "$ref": "#/components/schemas/Zerto.Api.Interfaces.ResourceLink"
          },
          "vraIdentifier": {
            "type": "integer",
            "format": "int64"
          },
          "vraName": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraStatusApi"
          },
          "upgradeStatus": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraAndDriverUpgradeStatusApi"
          },
          "progress": {
            "type": "integer",
            "format": "int32"
          },
          "vraVersion": {
            "type": "string",
            "nullable": true
          },
          "vraDisplayVersion": {
            "type": "string",
            "nullable": true
          },
          "hostVersion": {
            "type": "string",
            "nullable": true
          },
          "vraNetworkDataApi": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraNetworkDataApi"
          },
          "vraGroup": {
            "type": "string",
            "nullable": true
          },
          "memoryInGB": {
            "type": "integer",
            "format": "int32"
          },
          "datastoreName": {
            "type": "string",
            "nullable": true
          },
          "datastoreIdentifier": {
            "type": "string",
            "nullable": true
          },
          "vmInstanceType": {
            "type": "string",
            "nullable": true
          },
          "datastoreClusterName": {
            "type": "string",
            "nullable": true
          },
          "datastoreClusterIdentifier": {
            "type": "string",
            "nullable": true
          },
          "networkName": {
            "type": "string",
            "nullable": true
          },
          "networkIdentifier": {
            "type": "string",
            "nullable": true
          },
          "hostIdentifier": {
            "type": "string",
            "nullable": true
          },
          "hostDisplayName": {
            "type": "string",
            "nullable": true
          },
          "protectedCounters": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraProtectionCountersApi"
          },
          "recoveryCounters": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraProtectionCountersApi"
          },
          "selfProtectedVpgs": {
            "type": "integer",
            "format": "int32"
          },
          "vraAlerts": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraAlertsApi"
          },
          "numOfCpus": {
            "type": "integer",
            "format": "int32"
          },
          "isGhost": {
            "type": "boolean"
          },
          "isVaio": {
            "type": "boolean"
          },
          "platformInformation": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.PlatformInformationApi"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vras.VraChangeRecoveryHostConstraintsApi": {
        "type": "object",
        "properties": {
          "fixedVmsAllocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraVmAllocationApi"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vras.VraChangeRecoveryHostRecommendationRequestApi": {
        "type": "object",
        "properties": {
          "constraints": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraChangeRecoveryHostConstraintsApi"
          },
          "vmsToCalculate": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vras.VraChangeRecoveryHostRecommendationResultApi": {
        "type": "object",
        "properties": {
          "recommendations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraChangeRecoveryHostVmRecommendationApi"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vras.VraChangeRecoveryHostSettingsApi": {
        "type": "object",
        "properties": {
          "vmsAllocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraVmAllocationApi"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vras.VraChangeRecoveryHostValidationResultsApi": {
        "type": "object",
        "properties": {
          "vmsValidationsResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraChangeRecoveryHostVmValidationResultApi"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vras.VraChangeRecoveryHostVmRecommendationApi": {
        "type": "object",
        "properties": {
          "vmIdentifier": {
            "type": "string",
            "nullable": true
          },
          "hostIdentifier": {
            "type": "string",
            "nullable": true
          },
          "hostName": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vras.VraChangeRecoveryHostVmStatusApi": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Zvm.Api.Interfaces.Vras.VraChangeRecoveryHostVmValidationResultApi": {
        "type": "object",
        "properties": {
          "vmIdentifier": {
            "type": "string",
            "nullable": true
          },
          "hostIdentifier": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraChangeRecoveryHostVmStatusApi"
          },
          "reason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vras.VraCreateDataApi": {
        "type": "object",
        "properties": {
          "hostIdentifier": {
            "type": "string",
            "nullable": true
          },
          "datastoreIdentifier": {
            "type": "string",
            "nullable": true
          },
          "networkIdentifier": {
            "type": "string",
            "nullable": true
          },
          "hostRootPassword": {
            "type": "string",
            "nullable": true
          },
          "memoryInGb": {
            "type": "integer",
            "format": "int32"
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "vraNetworkDataApi": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraNetworkDataApi"
          },
          "usePublicKeyInsteadOfCredentials": {
            "type": "boolean"
          },
          "populatePostInstallation": {
            "type": "boolean",
            "nullable": true
          },
          "numOfCpus": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "vmInstanceType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vras.VraEditDataApi": {
        "type": "object",
        "properties": {
          "hostRootPassword": {
            "type": "string",
            "nullable": true
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "usePublicKeyInsteadOfCredentials": {
            "type": "boolean"
          },
          "vraNetworkDataApi": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraNetworkDataApi"
          },
          "memoryInGb": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "numOfCpus": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vras.VraNetworkDataApi": {
        "type": "object",
        "properties": {
          "vraIPConfigurationTypeApi": {
            "type": "string",
            "nullable": true
          },
          "vraIPAddress": {
            "type": "string",
            "nullable": true
          },
          "vraIPAddressRangeEnd": {
            "type": "string",
            "nullable": true
          },
          "subnetMask": {
            "type": "string",
            "nullable": true
          },
          "defaultGateway": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vras.VraPotentialHostApi": {
        "type": "object",
        "properties": {
          "hostIdentifier": {
            "type": "string",
            "nullable": true
          },
          "hostName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vras.VraProtectionCountersApi": {
        "type": "object",
        "properties": {
          "vpgs": {
            "type": "integer",
            "format": "int32"
          },
          "vms": {
            "type": "integer",
            "format": "int32"
          },
          "volumes": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vras.VraStatusApi": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Zvm.Api.Interfaces.Vras.VraVmAllocationApi": {
        "type": "object",
        "properties": {
          "hostIdentifier": {
            "type": "string",
            "nullable": true
          },
          "vmIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vras.VrasOnClusterCreateDataApi": {
        "type": "object",
        "properties": {
          "clusterIdentifier": {
            "type": "string",
            "nullable": true
          },
          "datastoreIdentifier": {
            "type": "string",
            "nullable": true
          },
          "networkIdentifier": {
            "type": "string",
            "nullable": true
          },
          "memoryInGb": {
            "type": "integer",
            "format": "int32"
          },
          "numOfCpus": {
            "type": "integer",
            "format": "int32"
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "vraNetworkDataApi": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraNetworkDataApi"
          },
          "usePublicKeyInsteadOfCredentials": {
            "type": "boolean"
          },
          "autoPopulatePostInstalltion": {
            "type": "boolean"
          },
          "hostRootPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Vras.VrasOnClusterDataApi": {
        "type": "object",
        "properties": {
          "isVaio": {
            "type": "boolean"
          },
          "clusterDesiredState": {
            "$ref": "#/components/schemas/Zerto.Zvm.Common.VirtualizationManager.VCenter.ClusterDesiredState"
          },
          "clusterStatus": {
            "$ref": "#/components/schemas/Zerto.Zvm.Common.VirtualizationManager.VCenter.ClusterStatus"
          },
          "clusterName": {
            "type": "string",
            "nullable": true
          },
          "clusterIdentifier": {
            "type": "string",
            "nullable": true
          },
          "datastoreIdentifier": {
            "type": "string",
            "nullable": true
          },
          "networkIdentifier": {
            "type": "string",
            "nullable": true
          },
          "memoryInGb": {
            "type": "integer",
            "format": "int32"
          },
          "numOfCpus": {
            "type": "integer",
            "format": "int32"
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "vraNetworkDataApi": {
            "$ref": "#/components/schemas/Zerto.Zvm.Api.Interfaces.Vras.VraNetworkDataApi"
          },
          "usePublicKeyInsteadOfCredentials": {
            "type": "boolean"
          },
          "autoPopulatePostInstalltion": {
            "type": "boolean"
          },
          "hostRootPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.Zorgs.ZorgApi": {
        "type": "object",
        "properties": {
          "link": {
            "$ref": "#/components/schemas/Zerto.Api.Interfaces.ResourceLink"
          },
          "zorgName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.ZsspSessions.ZsspSessionDetailsApi": {
        "type": "object",
        "properties": {
          "creationTime": {
            "type": "string",
            "nullable": true
          },
          "logoutRedirectUrl": {
            "type": "string",
            "nullable": true
          },
          "zorgUserName": {
            "type": "string",
            "nullable": true
          },
          "zsspSessionIdentifier": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "zorgIdentifier": {
            "type": "string",
            "nullable": true
          },
          "zsspAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Api.Interfaces.ZsspSessions.ZsspSessionsApi": {
        "required": [
          "zorgIdentifier",
          "zsspAddress"
        ],
        "type": "object",
        "properties": {
          "zorgIdentifier": {
            "type": "string"
          },
          "zsspAddress": {
            "type": "string"
          },
          "logoutRedirectUrl": {
            "type": "string",
            "nullable": true
          },
          "zorgUserName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Common.VirtualizationManager.VCenter.ClusterDesiredState": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Zvm.Common.VirtualizationManager.VCenter.ClusterStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Zvm.Common.VisualObjects.AlertTipVisualObject": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "siteName": {
            "type": "string",
            "nullable": true
          },
          "alertLevel": {
            "$ref": "#/components/schemas/Zerto.Common.Alerts.SystemStateAlertLevel"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Common.VisualObjects.AlertsTipVisualObject": {
        "type": "object",
        "properties": {
          "alerts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zerto.Zvm.Common.VisualObjects.AlertTipVisualObject"
            },
            "nullable": true
          },
          "hasMore": {
            "type": "boolean"
          },
          "totalNumberOfAlerts": {
            "type": "integer",
            "format": "int32"
          },
          "totalNumberOfWarnings": {
            "type": "integer",
            "format": "int32"
          },
          "totalNumberOfErrors": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Common.VisualObjects.Backup.DailySchedulingAndRetentionPeriodSettingsVisualObject": {
        "type": "object",
        "properties": {
          "dailyPeriod": {
            "$ref": "#/components/schemas/Zerto.Zvm.Common.VisualObjects.Backup.SchedulingAndRetentionPeriodSettingsVisualObject"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Common.VisualObjects.Backup.MonthlySchedulingAndRetentionPeriodSettingsVisualObject": {
        "type": "object",
        "properties": {
          "monthlyPeriod": {
            "$ref": "#/components/schemas/Zerto.Zvm.Common.VisualObjects.Backup.SchedulingAndRetentionPeriodSettingsVisualObject"
          },
          "triggerType": {
            "$ref": "#/components/schemas/Zerto.Zvm.Common.VisualObjects.Backup.MonthlyTriggerType"
          },
          "weekOfMonth": {
            "$ref": "#/components/schemas/Zerto.Ltr.Common.Vpg.Settings.WeekOfMonth"
          },
          "dayOfWeek": {
            "$ref": "#/components/schemas/System.DayOfWeek"
          },
          "dayOfMonth": {
            "$ref": "#/components/schemas/Zerto.Ltr.Common.Vpg.Settings.DayOfMonth"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Common.VisualObjects.Backup.MonthlyTriggerType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Zvm.Common.VisualObjects.Backup.SchedulingAndRetentionPeriodSettingsVisualObject": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "periodType": {
            "$ref": "#/components/schemas/Zerto.Ltr.Common.Vpg.Settings.SchedulePeriodType"
          },
          "backupStartTimeOfDayInMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "backupMethod": {
            "$ref": "#/components/schemas/Zerto.Ltr.Common.BackupSet.Settings.BackupMethod"
          },
          "expireAfterValue": {
            "type": "number",
            "format": "double"
          },
          "expireAfterUnit": {
            "$ref": "#/components/schemas/Zerto.Ltr.Common.Vpg.Settings.ExpireTimeUnits"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Common.VisualObjects.Backup.SchedulingAndRetentionSettingsVisualObject": {
        "type": "object",
        "properties": {
          "dailySettings": {
            "$ref": "#/components/schemas/Zerto.Zvm.Common.VisualObjects.Backup.DailySchedulingAndRetentionPeriodSettingsVisualObject"
          },
          "weeklySettings": {
            "$ref": "#/components/schemas/Zerto.Zvm.Common.VisualObjects.Backup.WeeklySchedulingAndRetentionPeriodSettingsVisualObject"
          },
          "monthlySettings": {
            "$ref": "#/components/schemas/Zerto.Zvm.Common.VisualObjects.Backup.MonthlySchedulingAndRetentionPeriodSettingsVisualObject"
          },
          "yearlySettings": {
            "$ref": "#/components/schemas/Zerto.Zvm.Common.VisualObjects.Backup.YearlySchedulingAndRetentionPeriodSettingsVisualObject"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Common.VisualObjects.Backup.WeeklySchedulingAndRetentionPeriodSettingsVisualObject": {
        "type": "object",
        "properties": {
          "dayOfWeek": {
            "$ref": "#/components/schemas/System.DayOfWeek"
          },
          "weeklyPeriod": {
            "$ref": "#/components/schemas/Zerto.Zvm.Common.VisualObjects.Backup.SchedulingAndRetentionPeriodSettingsVisualObject"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Common.VisualObjects.Backup.YearlySchedulingAndRetentionPeriodSettingsVisualObject": {
        "type": "object",
        "properties": {
          "yearlyPeriod": {
            "$ref": "#/components/schemas/Zerto.Zvm.Common.VisualObjects.Backup.SchedulingAndRetentionPeriodSettingsVisualObject"
          },
          "triggerType": {
            "$ref": "#/components/schemas/Zerto.Zvm.Common.VisualObjects.Backup.YearlyTriggerType"
          },
          "weekOfYear": {
            "$ref": "#/components/schemas/Zerto.Ltr.Common.Vpg.Settings.WeekOfYear"
          },
          "dayOfWeek": {
            "$ref": "#/components/schemas/System.DayOfWeek"
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "day": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Zerto.Zvm.Common.VisualObjects.Backup.YearlyTriggerType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "Zerto.Zvm.Common.VisualObjects.ProtectionGroupAlertStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "/auth/realms/zerto/protocol/openid-connect/auth",
            "scopes": { }
          }
        }
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ],
  "tags": [
    {
      "name": "Alerts",
      "description": "Manage ZVM Alerts"
    },
    {
      "name": "Datastores",
      "description": "Get information about datastores available on the current site"
    },
    {
      "name": "Events",
      "description": "Manage ZVM Events"
    },
    {
      "name": "File-level Restore",
      "description": "View and recover specific files and folders from the protected site from a checkpoint"
    },
    {
      "name": "Licensing",
      "description": "Manage the current ZVM license"
    },
    {
      "name": "Extended Journal Copy",
      "description": "Manage Extended Journal Copy"
    },
    {
      "name": "Recovery & Resources Reports",
      "description": "Get information about recovery operations and resources used by the virtual machines"
    },
    {
      "name": "Service Profiles",
      "description": "Get information about service profiles defined in the Zerto Cloud Manager"
    },
    {
      "name": "Server Date-Time",
      "description": "Get ZVM local date-time"
    },
    {
      "name": "Local Site",
      "description": "Get information about the current ZVM site"
    },
    {
      "name": "Peer Sites",
      "description": "Get a list of paired sites and pairs to a new site"
    },
    {
      "name": "Tasks",
      "description": "Get information about tasks run on the site"
    },
    {
      "name": "Virtualization Sites",
      "description": "Get information about the resources in the site where the API is run and all the sites paired with this site"
    },
    {
      "name": "Virtual Machines",
      "description": "Get information about virtual machines protected by the current site"
    },
    {
      "name": "Volumes",
      "description": "Get information about available volumes in current site"
    },
    {
      "name": "VPGs (Virtual Protection Groups)",
      "description": "Manage VPGs and performs Recovery operations"
    },
    {
      "name": "VPG(Virtual Protection Group) Settings",
      "description": "Manage VPG settings and create a new VPG"
    },
    {
      "name": "Export Import VPG(Virtual Protection Group) Settings",
      "description": "Export and Import VPG settings"
    },
    {
      "name": "VRAs (Virtual Replication Appliances)",
      "description": "Manage VRAs"
    },
    {
      "name": "ZORGS (Zerto Organizations)",
      "description": "Get information about Zerto Organizations associated with this site"
    },
    {
      "name": "ZSSP (Zerto Self Service Portal) Sessions",
      "description": "Manage ZSSP Sessions"
    },
    {
      "name": "Encryption Detection",
      "description": "Analyze encrypted and unencrypted data to identify an encryption event"
    },
    {
      "name": "Recovery Scripts",
      "description": "Manage recovery scripts on site"
    },
    {
      "name": "Recovery Scripts",
      "description": "Manage recovery scripts on site"
    },
    {
      "name": "Sessions",
      "description": "Manage Keycloak sessions"
    }
  ]
}